diff --git a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr.c b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr.c
index f71a9d8..3e43c05 100644
--- a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr.c
+++ b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr.c
@@ -59,7 +59,7 @@ static const uint32_t test_string[] = {
  */
 #ifdef DEBUG_DDR_INIT
 extern mss_uart_instance_t *g_debug_uart;
-extern uint32_t tip_register_status (mss_uart_instance_t *g_mss_uart_debug_pt);
+//extern uint32_t tip_register_status (mss_uart_instance_t *g_mss_uart_debug_pt);
 #endif
 
 /* Use to record instance of errors during calibration */
@@ -106,7 +106,7 @@ static void set_ddr_rpc_regs(DDR_TYPE ddr_type);
 static uint8_t get_num_lanes(void);
 static void load_dq(uint8_t lane);
 static uint8_t use_software_bclk_sclk_training(DDR_TYPE ddr_type);
-static void config_ddr_io_pull_up_downs_rpc_bits(void);
+//static void config_ddr_io_pull_up_downs_rpc_bits(void);
 #ifdef SWEEP_ENABLED
 static uint8_t get_best_sweep(sweep_index *good_index);
 #endif
@@ -119,7 +119,7 @@ static uint8_t get_best_sweep(sweep_index *good_index);
 extern void delay(uint32_t n);
 #ifdef DEBUG_DDR_INIT
 #  ifdef DEBUG_DDR_DDRCFG
-void debug_read_ddrcfg(void);
+//void debug_read_ddrcfg(void);
 #  endif
 #endif
 
@@ -1582,6 +1582,7 @@ static uint32_t ddr_setup(void)
                 tip_register_status (g_debug_uart);
                 (void)uprint32(g_debug_uart, "\n\r\n\r DDR_TRAINING_PASS: ", ddr_training_state);
                 (void)uprint32(g_debug_uart, "\n ****************************************************", 0);
+                (void)uprint32(g_debug_uart, "\n\r ", ddr_error_count);
 
             }
 #endif
@@ -1974,7 +1975,7 @@ static void set_ddr_rpc_regs(DDR_TYPE ddr_type)
      *  Override RPC bits for weak PU and PD's
      *  Set over-ride bit for unused I/O
      */
-    config_ddr_io_pull_up_downs_rpc_bits();
+    //config_ddr_io_pull_up_downs_rpc_bits();
 }
 
 /**
@@ -4126,38 +4127,38 @@ static uint8_t use_software_bclk_sclk_training(DDR_TYPE ddr_type)
  * override.
  *
  */
-static void config_ddr_io_pull_up_downs_rpc_bits(void)
-{
-#ifdef LIBERO_SETTING_RPC_EN_ADDCMD0_OVRT9
-    /* set over-rides (associated bit set to 1 if I/O not being used */
-    CFG_DDR_SGMII_PHY->ovrt9.ovrt9   = LIBERO_SETTING_RPC_EN_ADDCMD0_OVRT9;
-    CFG_DDR_SGMII_PHY->ovrt10.ovrt10 = LIBERO_SETTING_RPC_EN_ADDCMD1_OVRT10;
-    CFG_DDR_SGMII_PHY->ovrt11.ovrt11 = LIBERO_SETTING_RPC_EN_ADDCMD2_OVRT11;
-    CFG_DDR_SGMII_PHY->ovrt12.ovrt12 = LIBERO_SETTING_RPC_EN_DATA0_OVRT12;
-    CFG_DDR_SGMII_PHY->ovrt13.ovrt13 = LIBERO_SETTING_RPC_EN_DATA1_OVRT13;
-    CFG_DDR_SGMII_PHY->ovrt14.ovrt14 = LIBERO_SETTING_RPC_EN_DATA2_OVRT14;
-    CFG_DDR_SGMII_PHY->ovrt15.ovrt15 = LIBERO_SETTING_RPC_EN_DATA3_OVRT15;
-    CFG_DDR_SGMII_PHY->ovrt16.ovrt16 = LIBERO_SETTING_RPC_EN_ECC_OVRT16;
-    /* set the required wpu state- note: associated I/O bit 1=> off, 0=> on */
-    CFG_DDR_SGMII_PHY->rpc235.rpc235 = LIBERO_SETTING_RPC235_WPD_ADD_CMD0;
-    CFG_DDR_SGMII_PHY->rpc236.rpc236 = LIBERO_SETTING_RPC236_WPD_ADD_CMD1;
-    CFG_DDR_SGMII_PHY->rpc237.rpc237 = LIBERO_SETTING_RPC237_WPD_ADD_CMD2;
-    CFG_DDR_SGMII_PHY->rpc238.rpc238 = LIBERO_SETTING_RPC238_WPD_DATA0;
-    CFG_DDR_SGMII_PHY->rpc239.rpc239 = LIBERO_SETTING_RPC239_WPD_DATA1;
-    CFG_DDR_SGMII_PHY->rpc240.rpc240 = LIBERO_SETTING_RPC240_WPD_DATA2;
-    CFG_DDR_SGMII_PHY->rpc241.rpc241 = LIBERO_SETTING_RPC241_WPD_DATA3;
-    CFG_DDR_SGMII_PHY->rpc242.rpc242 = LIBERO_SETTING_RPC242_WPD_ECC;
-    /* set the required wpd state- note: associated I/O bit 1=> off, 0=> on */
-    CFG_DDR_SGMII_PHY->rpc243.rpc243 = LIBERO_SETTING_RPC243_WPU_ADD_CMD0;
-    CFG_DDR_SGMII_PHY->rpc244.rpc244 = LIBERO_SETTING_RPC244_WPU_ADD_CMD1;
-    CFG_DDR_SGMII_PHY->rpc245.rpc245 = LIBERO_SETTING_RPC245_WPU_ADD_CMD2;
-    CFG_DDR_SGMII_PHY->rpc246.rpc246 = LIBERO_SETTING_RPC246_WPU_DATA0;
-    CFG_DDR_SGMII_PHY->rpc247.rpc247 = LIBERO_SETTING_RPC247_WPU_DATA1;
-    CFG_DDR_SGMII_PHY->rpc248.rpc248 = LIBERO_SETTING_RPC248_WPU_DATA2;
-    CFG_DDR_SGMII_PHY->rpc249.rpc249 = LIBERO_SETTING_RPC249_WPU_DATA3;
-    CFG_DDR_SGMII_PHY->rpc250.rpc250 = LIBERO_SETTING_RPC250_WPU_ECC;
-#endif
-}
+//static void config_ddr_io_pull_up_downs_rpc_bits(void)
+//{
+//#ifdef LIBERO_SETTING_RPC_EN_ADDCMD0_OVRT9
+//    /* set over-rides (associated bit set to 1 if I/O not being used */
+//    CFG_DDR_SGMII_PHY->ovrt9.ovrt9   = LIBERO_SETTING_RPC_EN_ADDCMD0_OVRT9;
+//    CFG_DDR_SGMII_PHY->ovrt10.ovrt10 = LIBERO_SETTING_RPC_EN_ADDCMD1_OVRT10;
+//    CFG_DDR_SGMII_PHY->ovrt11.ovrt11 = LIBERO_SETTING_RPC_EN_ADDCMD2_OVRT11;
+//    CFG_DDR_SGMII_PHY->ovrt12.ovrt12 = LIBERO_SETTING_RPC_EN_DATA0_OVRT12;
+//    CFG_DDR_SGMII_PHY->ovrt13.ovrt13 = LIBERO_SETTING_RPC_EN_DATA1_OVRT13;
+//    CFG_DDR_SGMII_PHY->ovrt14.ovrt14 = LIBERO_SETTING_RPC_EN_DATA2_OVRT14;
+//    CFG_DDR_SGMII_PHY->ovrt15.ovrt15 = LIBERO_SETTING_RPC_EN_DATA3_OVRT15;
+//    CFG_DDR_SGMII_PHY->ovrt16.ovrt16 = LIBERO_SETTING_RPC_EN_ECC_OVRT16;
+//    /* set the required wpu state- note: associated I/O bit 1=> off, 0=> on */
+//    CFG_DDR_SGMII_PHY->rpc235.rpc235 = LIBERO_SETTING_RPC235_WPD_ADD_CMD0;
+//    CFG_DDR_SGMII_PHY->rpc236.rpc236 = LIBERO_SETTING_RPC236_WPD_ADD_CMD1;
+//    CFG_DDR_SGMII_PHY->rpc237.rpc237 = LIBERO_SETTING_RPC237_WPD_ADD_CMD2;
+//    CFG_DDR_SGMII_PHY->rpc238.rpc238 = LIBERO_SETTING_RPC238_WPD_DATA0;
+//    CFG_DDR_SGMII_PHY->rpc239.rpc239 = LIBERO_SETTING_RPC239_WPD_DATA1;
+//    CFG_DDR_SGMII_PHY->rpc240.rpc240 = LIBERO_SETTING_RPC240_WPD_DATA2;
+//    CFG_DDR_SGMII_PHY->rpc241.rpc241 = LIBERO_SETTING_RPC241_WPD_DATA3;
+//    CFG_DDR_SGMII_PHY->rpc242.rpc242 = LIBERO_SETTING_RPC242_WPD_ECC;
+//    /* set the required wpd state- note: associated I/O bit 1=> off, 0=> on */
+//    CFG_DDR_SGMII_PHY->rpc243.rpc243 = LIBERO_SETTING_RPC243_WPU_ADD_CMD0;
+//    CFG_DDR_SGMII_PHY->rpc244.rpc244 = LIBERO_SETTING_RPC244_WPU_ADD_CMD1;
+//    CFG_DDR_SGMII_PHY->rpc245.rpc245 = LIBERO_SETTING_RPC245_WPU_ADD_CMD2;
+//    CFG_DDR_SGMII_PHY->rpc246.rpc246 = LIBERO_SETTING_RPC246_WPU_DATA0;
+//    CFG_DDR_SGMII_PHY->rpc247.rpc247 = LIBERO_SETTING_RPC247_WPU_DATA1;
+//    CFG_DDR_SGMII_PHY->rpc248.rpc248 = LIBERO_SETTING_RPC248_WPU_DATA2;
+//    CFG_DDR_SGMII_PHY->rpc249.rpc249 = LIBERO_SETTING_RPC249_WPU_DATA3;
+//    CFG_DDR_SGMII_PHY->rpc250.rpc250 = LIBERO_SETTING_RPC250_WPU_ECC;
+//#endif
+//}
 
 
 /**
diff --git a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr_debug.c b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr_debug.c
index 8466e26..cfb3360 100644
--- a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr_debug.c
+++ b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_ddr_debug.c
@@ -52,7 +52,7 @@ static uint32_t ddr_write ( volatile uint64_t *DDR_word_ptr,
 static uint32_t ddr_read ( volatile uint64_t *DDR_word_ptr,
         uint32_t no_of_access, uint8_t data_ptrn,  DDR_ACCESS_SIZE data_size );
 #ifdef DEBUG_DDR_INIT
-extern mss_uart_instance_t *g_debug_uart;
+//extern mss_uart_instance_t *g_debug_uart;
 #endif
 
 #ifdef DEBUG_DDR_INIT
diff --git a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_nwc_init.c b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_nwc_init.c
index 2c6f4a0..164e0e2 100644
--- a/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_nwc_init.c
+++ b/baremetal/polarfire-soc-bare-metal-library/src/platform/mpfs_hal/nwc/mss_nwc_init.c
@@ -25,7 +25,7 @@
 #ifdef DEBUG_DDR_INIT
 #include "drivers/mss_uart/mss_uart.h"
 extern mss_uart_instance_t *g_debug_uart ;
-uint32_t setup_ddr_debug_port(mss_uart_instance_t * uart);
+//uint32_t setup_ddr_debug_port(mss_uart_instance_t * uart);
 #endif
 
 /*******************************************************************************
diff --git a/boards/tysom-m-mpfs250t/Makefile b/boards/tysom-m-mpfs250t/Makefile
new file mode 100644
index 0000000..c6a1e7e
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/Makefile
@@ -0,0 +1,104 @@
+$(info TYSOM_M_MPFS250T selected)
+
+CONFIG_PLATFORM_MPFS=y
+PLATFORM_CFLAGS += -DCONFIG_PLATFORM_MPFS=1
+BOARD_DIR=boards/tysom-m-mpfs250t
+
+INCLUDES += \
+	-I$(BOARD_DIR)/mpfs_hal_config/\
+	-I$(BOARD_DIR)/soc_config/\
+	-I$(BOARD_DIR)/ \
+	-Ibaremetal/polarfire-soc-bare-metal-library/src/platform \
+
+EXTRA_SRCS-y += \
+	$(BOARD_DIR)/hss_uart_init.c \
+        $(BOARD_DIR)/uart_helper.c \
+        $(BOARD_DIR)/hss_board_init.c \
+
+$(BOARD_DIR)/hss_uart_init.o: $(BOARD_DIR)/hss_uart_init.c config.h
+	@$(ECHO) " CC        $@";
+	$(CMD_PREFIX)$(CC) $(CFLAGS_GCCEXT) $(OPT-y) $(INCLUDES) -c -o $@ $<
+
+
+EXTRA_OBJS-$(CONFIG_SERVICE_BOOT_USE_PAYLOAD) += $(BOARD_DIR)/payload.o
+$(BOARD_DIR)/payload.o: $(BOARD_DIR)/payload.bin
+	$(LD) -r -b binary $< -o $@
+
+################################################################################################
+
+#
+# Extra hardware dependency rules for YMODEM
+#
+INCLUDES += \
+	-Ibaremetal/ \
+	-Ibaremetal/drivers/winbond_w25n01gv \
+
+EXTRA_SRCS-$(CONFIG_SERVICE_YMODEM) += \
+	baremetal/drivers/winbond_w25n01gv/winbond_w25n01gv.c \
+	baremetal/drivers/mss_envm/mss_envm.c
+
+#	baremetal/drivers/micron_mt25q/micron_mt25q.c \
+
+baremetal/drivers/winbond_w25n01gv/winbond_w25n01gv.o: baremetal/drivers/winbond_w25n01gv/winbond_w25n01gv.c config.h
+	@$(ECHO) " CC        $@";
+	@$(CMD_PREFIX)$(CC) $(CFLAGS_GCCEXT) $(OPT-y) $(INCLUDES) -c -o $@ $<
+
+baremetal/drivers/micron_mt25q/micron_mt25q.o: baremetal/drivers/micron_mt25q/micron_mt25q.c config.h
+	@$(ECHO) " CC        $@";
+	@$(CMD_PREFIX)$(CC) $(CFLAGS_GCCEXT) $(OPT-y) $(INCLUDES) -c -o $@ $<
+
+baremetal/drivers/mss_envm/mss_envm.o: baremetal/drivers/mss_envm/mss_envm.c config.h
+	@$(ECHO) " CC        $@";
+	@$(CMD_PREFIX)$(CC) $(CFLAGS_GCCEXT) $(OPT-y) $(INCLUDES) -c -o $@ $<
+
+
+################################################################################################
+
+#
+# Extra dependency rules for auto-generated configuration files (from Libero XML)
+#
+
+SOC_CONFIG_FILES =  \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_ddr_pll.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_mss_cfm.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_mss_pll.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_sgmii_cfm.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_sgmii_pll.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_clk_sysreg.h \
+	$(BOARD_DIR)/soc_config/clocks/hw_mss_clks.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddr_io_bank.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddr_mode.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddr_off_mode.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddr_options.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddr_segs.h \
+	$(BOARD_DIR)/soc_config/ddr/hw_ddrc.h \
+	$(BOARD_DIR)/soc_config/general/hw_gen_peripherals.h \
+	$(BOARD_DIR)/soc_config/hw_platform.h \
+	$(BOARD_DIR)/soc_config/io/hw_hsio_mux.h \
+	$(BOARD_DIR)/soc_config/io/hw_mssio_mux.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_apb_split.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_cache.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_memory.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_crypto.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_fic0.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_fic1.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_fic2.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_gem0.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_gem1.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_mmc.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_scb.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_trace.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_mpu_usb.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_pmp_hart0.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_pmp_hart1.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_pmp_hart2.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_pmp_hart3.h \
+	$(BOARD_DIR)/soc_config/memory_map/hw_pmp_hart4.h \
+	$(BOARD_DIR)/soc_config/sgmii/hw_sgmii_tip.h \
+
+config.h: $(SOC_CONFIG_FILES)
+$(SOC_CONFIG_FILES): $(BOARD_DIR)/soc_fpga_design/xml/Aldec_MSSv2_mss_cfg.xml
+	@$(ECHO) " CFGGEN    $<";
+	@$(CMD_PREFIX)python3 tools/polarfire-soc-configuration-generator/mpfs_configuration_generator.py $< $(BOARD_DIR)
+
+$(RISCV_TARGET): $(SOC_CONFIG_FILES)
diff --git a/boards/tysom-m-mpfs250t/def_config b/boards/tysom-m-mpfs250t/def_config
new file mode 100644
index 0000000..b0d8f1d
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/def_config
@@ -0,0 +1,103 @@
+# Generated by Kconfiglib (https://github.com/ulfalizer/Kconfiglib)
+
+#
+# Services
+#
+CONFIG_SERVICE_BOOT=y
+
+#
+# Boot Service
+#
+CONFIG_SERVICE_BOOT_SETS_SUPPORT=y
+CONFIG_SERVICE_BOOT_DDR_TARGET_ADDR=0xB0000000
+# CONFIG_SERVICE_BOOT_USE_PAYLOAD is not set
+CONFIG_SERVICE_BOOT_MMC_USE_GPT=y
+CONFIG_SERVICE_DDR=y
+CONFIG_SERVICE_GOTO=y
+# CONFIG_SERVICE_CRYPTO is not set
+# CONFIG_SERVICE_FLASHFREEZE is not set
+# CONFIG_SERVICE_POWERMODE is not set
+CONFIG_SERVICE_MMC=y
+
+#
+# MMC Mode
+#
+CONFIG_SERVICE_MMC_MODE_EMMC=y
+CONFIG_SERVICE_MMC_MODE_SDCARD=y
+
+#
+# MMC Voltage
+#
+# CONFIG_SERVICE_MMC_BUS_VOLTAGE_1V8 is not set
+CONFIG_SERVICE_MMC_BUS_VOLTAGE_3V3=y
+# CONFIG_SERVICE_QSPI is not set
+CONFIG_SERVICE_SGDMA=y
+# CONFIG_SERVICE_SPI is not set
+# CONFIG_SERVICE_UART is not set
+# CONFIG_SERVICE_WDOG is not set
+CONFIG_SERVICE_IPI_POLL=y
+CONFIG_SERVICE_OPENSBI=y
+# CONFIG_SERVICE_YMODEM is not set
+CONFIG_SERVICE_USBDMSC=y
+
+#
+# USB Device Mass Storage Class
+#
+CONFIG_SERVICE_USBDMSC_REGISTER=y
+CONFIG_SERVICE_TINYCLI=y
+
+#
+# Tiny Command Line Interface
+#
+CONFIG_SERVICE_TINYCLI_TIMEOUT=5
+# CONFIG_SERVICE_TINYCLI_REGISTER is not set
+
+#
+# Compression
+#
+# CONFIG_COMPRESSION is not set
+
+#
+# General Configuration Options
+#
+CONFIG_OPENSBI=y
+
+#
+# OpenSBI
+#
+# CONFIG_PROVIDE_DTB is not set
+# CONFIG_SUPERLOOP_IN_U_MODE is not set
+
+#
+# Memory Options
+#
+CONFIG_MEMTEST=y
+CONFIG_IPI_MAX_NUM_QUEUE_MESSAGES=16
+# CONFIG_IPI_FIXED_BASE is not set
+CONFIG_USE_PDMA=y
+# CONFIG_INITIALIZE_MEMORIES is not set
+CONFIG_USE_PCIE=y
+
+#
+# Build Options
+#
+CONFIG_COLOR_OUTPUT=y
+CONFIG_USE_LOGO=y
+CONFIG_CC_STACKPROTECTOR_STRONG=y
+# CONFIG_CC_DUMP_STACKSIZE is not set
+# CONFIG_LD_RELAX is not set
+CONFIG_CC_USE_MAKEDEP=y
+CONFIG_CC_USE_GNU_BUILD_ID=y
+CONFIG_CC_HAS_INTTYPES=y
+CONFIG_DISPLAY_TOOL_VERSIONS=y
+
+#
+# Debug Options
+#
+CONFIG_DEBUG_LOG_STATE_TRANSITIONS=y
+# CONFIG_DEBUG_LOOP_TIMES is not set
+CONFIG_DEBUG_LOOP_TIMES_THRESHOLD=2500000
+# CONFIG_DEBUG_IPI_STATS is not set
+# CONFIG_DEBUG_CHUNK_DOWNLOADS is not set
+# CONFIG_DEBUG_MSCGEN_IPI is not set
+# CONFIG_DEBUG_PROFILING_SUPPORT is not set
diff --git a/boards/tysom-m-mpfs250t/def_config_custom b/boards/tysom-m-mpfs250t/def_config_custom
new file mode 100644
index 0000000..0623695
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/def_config_custom
@@ -0,0 +1,104 @@
+# Generated by Kconfiglib (https://github.com/ulfalizer/Kconfiglib)
+
+#
+# Services
+#
+CONFIG_SERVICE_BOOT=y
+
+#
+# Boot Service
+#
+CONFIG_SERVICE_BOOT_SETS_SUPPORT=y
+CONFIG_SERVICE_BOOT_DDR_TARGET_ADDR=0xB0000000
+# CONFIG_SERVICE_BOOT_USE_PAYLOAD is not set
+CONFIG_SERVICE_BOOT_CUSTOM_FLOW=y
+CONFIG_SERVICE_BOOT_MMC_USE_GPT=y
+CONFIG_SERVICE_DDR=y
+CONFIG_SERVICE_GOTO=y
+# CONFIG_SERVICE_CRYPTO is not set
+# CONFIG_SERVICE_FLASHFREEZE is not set
+# CONFIG_SERVICE_POWERMODE is not set
+CONFIG_SERVICE_MMC=y
+
+#
+# MMC Mode
+#
+CONFIG_SERVICE_MMC_MODE_EMMC=y
+CONFIG_SERVICE_MMC_MODE_SDCARD=y
+
+#
+# MMC Voltage
+#
+# CONFIG_SERVICE_MMC_BUS_VOLTAGE_1V8 is not set
+CONFIG_SERVICE_MMC_BUS_VOLTAGE_3V3=y
+# CONFIG_SERVICE_QSPI is not set
+CONFIG_SERVICE_SGDMA=y
+# CONFIG_SERVICE_SPI is not set
+# CONFIG_SERVICE_UART is not set
+# CONFIG_SERVICE_WDOG is not set
+CONFIG_SERVICE_IPI_POLL=y
+CONFIG_SERVICE_OPENSBI=y
+# CONFIG_SERVICE_YMODEM is not set
+CONFIG_SERVICE_USBDMSC=y
+
+#
+# USB Device Mass Storage Class
+#
+CONFIG_SERVICE_USBDMSC_REGISTER=y
+CONFIG_SERVICE_TINYCLI=y
+
+#
+# Tiny Command Line Interface
+#
+CONFIG_SERVICE_TINYCLI_TIMEOUT=5
+# CONFIG_SERVICE_TINYCLI_REGISTER is not set
+
+#
+# Compression
+#
+# CONFIG_COMPRESSION is not set
+
+#
+# General Configuration Options
+#
+CONFIG_OPENSBI=y
+
+#
+# OpenSBI
+#
+# CONFIG_PROVIDE_DTB is not set
+# CONFIG_SUPERLOOP_IN_U_MODE is not set
+
+#
+# Memory Options
+#
+CONFIG_MEMTEST=y
+CONFIG_IPI_MAX_NUM_QUEUE_MESSAGES=16
+# CONFIG_IPI_FIXED_BASE is not set
+CONFIG_USE_PDMA=y
+# CONFIG_INITIALIZE_MEMORIES is not set
+CONFIG_USE_PCIE=y
+
+#
+# Build Options
+#
+CONFIG_COLOR_OUTPUT=y
+CONFIG_USE_LOGO=y
+CONFIG_CC_STACKPROTECTOR_STRONG=y
+# CONFIG_CC_DUMP_STACKSIZE is not set
+# CONFIG_LD_RELAX is not set
+CONFIG_CC_USE_MAKEDEP=y
+CONFIG_CC_USE_GNU_BUILD_ID=y
+CONFIG_CC_HAS_INTTYPES=y
+CONFIG_DISPLAY_TOOL_VERSIONS=y
+
+#
+# Debug Options
+#
+CONFIG_DEBUG_LOG_STATE_TRANSITIONS=y
+# CONFIG_DEBUG_LOOP_TIMES is not set
+CONFIG_DEBUG_LOOP_TIMES_THRESHOLD=2500000
+# CONFIG_DEBUG_IPI_STATS is not set
+# CONFIG_DEBUG_CHUNK_DOWNLOADS is not set
+# CONFIG_DEBUG_MSCGEN_IPI is not set
+# CONFIG_DEBUG_PROFILING_SUPPORT is not set
diff --git a/boards/tysom-m-mpfs250t/hss-envm.ld b/boards/tysom-m-mpfs250t/hss-envm.ld
new file mode 100644
index 0000000..6ec3933
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/hss-envm.ld
@@ -0,0 +1,352 @@
+/*******************************************************************************
+ * Copyright 2019 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * GNU linker script for Hart Software Services (HSS)
+ *
+ */
+
+OUTPUT_ARCH( "riscv" )
+
+/*
+
+ PolarFire SoC Memory map (ditaa diagram)
+ ----------------------------------------
+                                                                                   +-------------+
+                                                      +-----------+                | non-cache   |
+                                                      | non-cache |                |  WCB (SEG1) |
+               +---------------------+                |  (SEG1)   | 0x18_0000_0000 +-------------+
+               | DDR cached          | 0x14_0000_0000 +-----------+                | non-cache   |
+               |  (SEG0)             |                | non-cache |                |  WCB (SEG1) |
+0x10_0000_0000 +---------------------+                |  (SEG1)   |    0xD000_0000 +-------------+
+               | DDR cached          |    0xC000_0000 +-----------+
+               |  (SEG0)             |
+   0x8000_0000 +---------------------+
+               | envm (128KiB)       |
+               |                     |
+   0x2022_0000 +---------------------+
+               | Zero Device         |
+               |                     |
+   0x0A00_0000 +---------------------+
+               | LIM (up to 1920KiB) |
+               |                     |
+   0x0800_0000 +---------------------+
+               | U54_4 ITIM (28KiB)  |
+               |                     |
+   0x0182_0000 +---------------------+
+               | U54_3 ITIM (28KiB)  |
+               |                     |
+   0x0181_8000 +---------------------+
+               | U54_2 ITIM (28KiB)  |
+               |                     |
+   0x0181_0000 +---------------------+
+               | U54_1 ITIM (28KiB)  |
+               |                     |
+   0x0180_8000 +---------------------+
+               | E51 ITIM (28KiB)    |
+               |                     |
+   0x0180_0000 +---------------------+
+               | DTIM (8KiB)         |
+               |                     |
+   0x0100_0000 +---------------------+
+
+ */
+
+/*******************************************************************************
+ *
+ * -- MSS hart Reset vector
+ *
+ * The MSS reset vector for each hart is configured by Libero and stored securely
+ * in the MPFS.
+ *
+ * The most common usage will be where the reset vector for each hart will be set
+ * to the start of the envm at address 0x2022_0000, giving 128K of contiguous
+ * non-volatile storage. Normally this is where the initial boot-loader will
+ * reside.
+ *
+ * Libero outputs the configured reset vector address to the xml file, see
+ * LIBERO_SETTING_RESET_VECTOR_HART0 etc in <hw_memory.h>
+ *
+ * When debugging a bare metal program that is run out of reset from envm, a linker
+ * script will be used whereby the progdtim will run from LIM instead of envm.
+ * In this case, set the reset vector in the linker script to 0x0800_0000.
+ * This means you are not continually programming the envm each time you load a
+ * program and there is no limitation with hardware break points whn debugging.
+ */
+ENTRY(_start)
+
+
+/*******************************************************************************
+ *
+ * Memory Segments
+ *
+ * must be on 4k boundary (0x1000) - corresponds to page size, when using memory mem
+ */
+MEMORY
+{
+    envm (rx)          : ORIGIN = 0x20220000, LENGTH = 128k
+
+    dtim (rwx)         : ORIGIN = 0x01000000, LENGTH = 7k /* DTIM */
+    switch_code (rx)   : ORIGIN = 0x01001c00, LENGTH = 1k /* This 1K of DTIM is used to run code
+                                                           * when switching the envm clock */
+    e51_itim (rwx)     : ORIGIN = 0x01800000, LENGTH = 28k
+    u54_1_itim (rwx)   : ORIGIN = 0x01808000, LENGTH = 28k
+    u54_2_itim (rwx)   : ORIGIN = 0x01810000, LENGTH = 28k
+    u54_3_itim (rwx)   : ORIGIN = 0x01818000, LENGTH = 28k
+    u54_4_itim (rwx)   : ORIGIN = 0x01820000, LENGTH = 28k
+    l2lim (rwx)        : ORIGIN = 0x08000000, LENGTH = 1920k
+    l2zerodevice (rwx) : ORIGIN = 0x0A000000, LENGTH = 512k
+    ddr (rwx)          : ORIGIN = 0x80000000, LENGTH = 1024m
+}
+
+PROVIDE(HEAP_SIZE = 0k);               /* needs to be calculated for your application */
+PROVIDE(STACK_SIZE_PER_HART = 16k);
+
+/*******************************************************************************
+ *
+ * Memory Sections and Placement
+ */
+SECTIONS
+{
+    PROVIDE(__envm_start       = ORIGIN(envm));
+    PROVIDE(__envm_end         = ORIGIN(envm) + LENGTH(envm));
+
+    PROVIDE(__l2lim_start      = ORIGIN(l2lim));
+    PROVIDE(__l2lim_end        = ORIGIN(l2lim) + LENGTH(l2lim));
+
+    PROVIDE(__ddr_start        = ORIGIN(ddr));
+    PROVIDE(__ddr_end          = ORIGIN(ddr) + LENGTH(ddr));
+
+    PROVIDE(__dtim_start       = ORIGIN(dtim));
+    PROVIDE(__dtim_end         = ORIGIN(dtim) + LENGTH(dtim));
+
+    PROVIDE(__e51itim_start    = ORIGIN(e51_itim));
+    PROVIDE(__e51itim_end      = ORIGIN(e51_itim) + LENGTH(e51_itim));
+
+    PROVIDE(__u54_1_itim_start = ORIGIN(u54_1_itim));
+    PROVIDE(__u54_1_itim_end   = ORIGIN(u54_1_itim) + LENGTH(u54_1_itim));
+
+    PROVIDE(__u54_2_itim_start = ORIGIN(u54_2_itim));
+    PROVIDE(__u54_2_itim_end   = ORIGIN(u54_2_itim) + LENGTH(u54_2_itim));
+
+    PROVIDE(__u54_3_itim_start = ORIGIN(u54_3_itim));
+    PROVIDE(__u54_3_itim_end   = ORIGIN(u54_3_itim) + LENGTH(u54_3_itim));
+
+    PROVIDE(__u54_4_itim_start = ORIGIN(u54_4_itim));
+    PROVIDE(__u54_4_itim_end   = ORIGIN(u54_4_itim) + LENGTH(u54_4_itim));
+
+    PROVIDE(__l2lim_start      = ORIGIN(l2lim));
+    PROVIDE(__l2lim_end        = ORIGIN(l2lim) + LENGTH(l2lim));
+
+    /*
+     * Code and RO data lives in envm (flash)
+     */
+    . = __envm_start;
+
+    PROVIDE(_hss_start = .);
+
+    .text : ALIGN(0x10)
+    {
+        *(.entry)
+        . = ALIGN(0x10);
+        *(.text .text.* .gnu.linkonce.t.*)
+        *(.plt)
+        . = ALIGN(0x10);
+
+        KEEP (*crtbegin.o(.ctors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
+        KEEP (*(SORT(.ctors.*)))
+        KEEP (*crtend.o(.ctors))
+        KEEP (*crtbegin.o(.dtors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
+        KEEP (*(SORT(.dtors.*)))
+        KEEP (*crtend.o(.dtors))
+
+        *(.rodata .rodata.* .gnu.linkonce.r.*)
+        *(.srodata.cst16) *(.srodata.cst8) *(.srodata.cst4) *(.srodata.cst2)
+        *(.srodata*)
+        *(.sdata2.*)
+        *(.gcc_except_table)
+        *(.eh_frame_hdr)
+        *(.eh_frame)
+
+        KEEP (*(.init))
+        KEEP (*(.fini))
+
+        PROVIDE_HIDDEN (__preinit_array_start = .);
+        KEEP (*(.preinit_array))
+        PROVIDE_HIDDEN (__preinit_array_end = .);
+        PROVIDE_HIDDEN (__init_array_start = .);
+        KEEP (*(SORT(.init_array.*)))
+        KEEP (*(.init_array))
+        PROVIDE_HIDDEN (__init_array_end = .);
+        PROVIDE_HIDDEN (__fini_array_start = .);
+        KEEP (*(.fini_array))
+        KEEP (*(SORT(.fini_array.*)))
+        PROVIDE_HIDDEN (__fini_array_end = .);
+        . = ALIGN(0x10);
+    } >envm
+
+    .gnu_build_id : ALIGN(8) {
+        PROVIDE(gnu_build_id = .);
+        *(.note.gnu.build-id)
+    } >envm
+
+    PROVIDE(_hss_end = .);
+
+    .l2_scratchpad : ALIGN(0x10)
+    {
+        __l2_scratchpad_load = LOADADDR(.l2_scratchpad);
+        __l2_scratchpad_start = .;
+        __l2_scratchpad_vma_start = .;
+        *(.l2_scratchpad)
+
+        . = ALIGN(0x10);
+        __l2_scratchpad_end = .;
+        __l2_scratchpad_vma_end = .;
+    } >l2lim AT>envm
+
+
+    /*******************************************************************************
+     *
+     * The .ram_code section will contain the code That is run from RAM.
+     * We are using this code to switch the clocks including envm clock.
+     * This can not be done when running from envm
+     * This will need to be copied to ram, before any of this code is run.
+     *
+     */
+    .ram_code : ALIGN(0x10)
+    {
+        __sc_load = LOADADDR (.ram_code);
+        __sc_start = .;
+        *(.ram_codetext)        /* .ram_codetext sections (code) */
+        *(.ram_codetext*)       /* .ram_codetext* sections (code)  */
+        *(.ram_coderodata)      /* read-only data (constants) */
+        *(.ram_coderodata*)
+        . = ALIGN (0x10);
+        __sc_end = .;
+    } >switch_code AT>envm
+
+    /*******************************************************************************
+     *
+     * Short/global data section
+     *
+     */
+    .sdata : ALIGN(0x40) /* short/global data section */
+    {
+        __sdata_load = LOADADDR(.sdata);
+        __sdata_start = .;
+
+        /*
+         * offset used with gp(gloabl pointer) are +/- 12 bits, so set
+         * point to middle of expected sdata range
+         *
+         * If sdata more than 4K, linker used direct addressing.
+         * Perhaps we should add check/warning to linker script if sdata is > 4k
+         */
+        __global_pointer$ = . + 0x800;
+        *(.sdata .sdata.* .gnu.linkonce.s.*)
+        . = ALIGN(0x10);
+        __sdata_end = .;
+    } >l2lim AT >envm
+
+    /*******************************************************************************
+     *
+     * (Explicitly) Initialized data section
+     *
+     */
+    .data : ALIGN(0x40)
+    {
+        __data_load = LOADADDR(.data);
+        __data_start = .;
+        *(.got.plt) *(.got)
+        *(.shdata)
+        *(.data .data.* .gnu.linkonce.d.*)
+        . = ALIGN(0x10);
+        __data_end = .;
+    } >l2lim AT >envm
+
+    /*******************************************************************************
+     *
+     * Uninitialized (zero-initialized) section
+     */
+
+    /*
+     * Short zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     *
+     */
+    .sbss : ALIGN(0x40)
+    {
+        __sbss_start = .;
+        *(.sbss .sbss.* .gnu.linkonce.sb.*)
+        *(.scommon)
+        . = ALIGN(0x10);
+        __sbss_end = .;
+    } >l2lim
+
+    /*
+     * General Zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     */
+    .bss : ALIGN(0x40)
+    {
+        __bss_start = .;
+        *(.shbss)
+        *(.bss .bss.* .gnu.linkonce.b.*)
+        *(COMMON)
+        . = ALIGN(0x10);
+        __bss_end = .;
+    } >l2lim
+
+    /*
+     * Reserved space for Hart stacks
+     */
+    .stack : ALIGN(0x40)
+    {
+        __stack_bottom = .;
+
+        __stack_bottom_h0$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h0$ = .;
+
+        __stack_bottom_h1$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h1$ = .;
+
+        __stack_bottom_h2$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h2$ = .;
+
+        __stack_bottom_h3$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h3$ = .;
+
+        __stack_bottom_h4$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h4$ = .;
+
+        __stack_top = .;
+    } >l2lim
+
+    _end = .;
+
+    /*
+     * End of uninitialized data segment
+     *
+     *******************************************************************************/
+
+    /*
+    .heap : ALIGN(0x10)
+    {
+        __heap_start = .;
+        . += HEAP_SIZE;
+        __heap_end = .;
+        . = ALIGN(0x10);
+        _heap_end = __heap_end;
+    } >dtim
+    */
+}
diff --git a/boards/tysom-m-mpfs250t/hss-l2lim.ld b/boards/tysom-m-mpfs250t/hss-l2lim.ld
new file mode 100644
index 0000000..31ccd79
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/hss-l2lim.ld
@@ -0,0 +1,349 @@
+/*******************************************************************************
+ * Copyright 2019 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * GNU linker script for Hart Software Services (HSS)
+ *
+ */
+
+OUTPUT_ARCH( "riscv" )
+
+/*
+
+ PolarFire SoC Memory map (ditaa diagram)
+ ----------------------------------------
+                                                                                   +-------------+
+                                                      +-----------+                | non-cache   |
+                                                      | non-cache |                |  WCB (SEG1) |
+               +---------------------+                |  (SEG1)   | 0x18_0000_0000 +-------------+
+               | DDR cached          | 0x14_0000_0000 +-----------+                | non-cache   |
+               |  (SEG0)             |                | non-cache |                |  WCB (SEG1) |
+0x10_0000_0000 +---------------------+                |  (SEG1)   |    0xD000_0000 +-------------+
+               | DDR cached          |    0xC000_0000 +-----------+
+               |  (SEG0)             |
+   0x8000_0000 +---------------------+
+               | envm (128KiB)       |
+               |                     |
+   0x2022_0000 +---------------------+
+               | Zero Device         |
+               |                     |
+   0x0A00_0000 +---------------------+
+               | LIM (up to 1920KiB) |
+               |                     |
+   0x0800_0000 +---------------------+
+               | U54_4 ITIM (28KiB)  |
+               |                     |
+   0x0182_0000 +---------------------+
+               | U54_3 ITIM (28KiB)  |
+               |                     |
+   0x0181_8000 +---------------------+
+               | U54_2 ITIM (28KiB)  |
+               |                     |
+   0x0181_0000 +---------------------+
+               | U54_1 ITIM (28KiB)  |
+               |                     |
+   0x0180_8000 +---------------------+
+               | E51 ITIM (28KiB)    |
+               |                     |
+   0x0180_0000 +---------------------+
+               | DTIM (8KiB)         |
+               |                     |
+   0x0100_0000 +---------------------+
+
+ */
+
+/*******************************************************************************
+ *
+ * -- MSS hart Reset vector
+ *
+ * The MSS reset vector for each hart is configured by Libero and stored securely
+ * in the MPFS.
+ *
+ * The most common usage will be where the reset vector for each hart will be set
+ * to the start of the envm at address 0x2022_0000, giving 128K of contiguous
+ * non-volatile storage. Normally this is where the initial boot-loader will
+ * reside.
+ *
+ * Libero outputs the configured reset vector address to the xml file, see
+ * LIBERO_SETTING_RESET_VECTOR_HART0 etc in <hw_memory.h>
+ *
+ * When debugging a bare metal program that is run out of reset from envm, a linker
+ * script will be used whereby the progdtim will run from LIM instead of envm.
+ * In this case, set the reset vector in the linker script to 0x0800_0000.
+ * This means you are not continually programming the envm each time you load a
+ * program and there is no limitation with hardware break points whn debugging.
+ */
+ENTRY(_start)
+
+
+/*******************************************************************************
+ *
+ * Memory Segments
+ *
+ * must be on 4k boundary (0x1000) - corresponds to page size, when using memory mem
+ */
+MEMORY
+{
+    envm (rx)          : ORIGIN = 0x20220000, LENGTH = 128k
+
+    dtim (rwx)         : ORIGIN = 0x01000000, LENGTH = 7k /* DTIM */
+    switch_code (rx)   : ORIGIN = 0x01001c00, LENGTH = 1k /* This 1K of DTIM is used to run code
+                                                           * when switching the envm clock */
+    e51_itim (rwx)     : ORIGIN = 0x01800000, LENGTH = 28k
+    u54_1_itim (rwx)   : ORIGIN = 0x01808000, LENGTH = 28k
+    u54_2_itim (rwx)   : ORIGIN = 0x01810000, LENGTH = 28k
+    u54_3_itim (rwx)   : ORIGIN = 0x01818000, LENGTH = 28k
+    u54_4_itim (rwx)   : ORIGIN = 0x01820000, LENGTH = 28k
+    l2lim (rwx)        : ORIGIN = 0x08000000, LENGTH = 1920k
+    l2zerodevice (rwx) : ORIGIN = 0x0A000000, LENGTH = 512k
+    ddr (rwx)          : ORIGIN = 0x80000000, LENGTH = 1024m
+}
+
+PROVIDE(HEAP_SIZE = 0k);               /* needs to be calculated for your application */
+PROVIDE(STACK_SIZE_PER_HART = 16k);
+
+/*******************************************************************************
+ *
+ * Memory Sections and Placement
+ */
+SECTIONS
+{
+    PROVIDE(__envm_start       = ORIGIN(envm));
+    PROVIDE(__envm_end         = ORIGIN(envm) + LENGTH(envm));
+
+    PROVIDE(__l2lim_start      = ORIGIN(l2lim));
+    PROVIDE(__l2lim_end        = ORIGIN(l2lim) + LENGTH(l2lim));
+
+    PROVIDE(__ddr_start        = ORIGIN(ddr));
+    PROVIDE(__ddr_end          = ORIGIN(ddr) + LENGTH(ddr));
+
+    PROVIDE(__dtim_start       = ORIGIN(dtim));
+    PROVIDE(__dtim_end         = ORIGIN(dtim) + LENGTH(dtim));
+
+    PROVIDE(__e51itim_start    = ORIGIN(e51_itim));
+    PROVIDE(__e51itim_end      = ORIGIN(e51_itim) + LENGTH(e51_itim));
+
+    PROVIDE(__u54_1_itim_start = ORIGIN(u54_1_itim));
+    PROVIDE(__u54_1_itim_end   = ORIGIN(u54_1_itim) + LENGTH(u54_1_itim));
+
+    PROVIDE(__u54_2_itim_start = ORIGIN(u54_2_itim));
+    PROVIDE(__u54_2_itim_end   = ORIGIN(u54_2_itim) + LENGTH(u54_2_itim));
+
+    PROVIDE(__u54_3_itim_start = ORIGIN(u54_3_itim));
+    PROVIDE(__u54_3_itim_end   = ORIGIN(u54_3_itim) + LENGTH(u54_3_itim));
+
+    PROVIDE(__u54_4_itim_start = ORIGIN(u54_4_itim));
+    PROVIDE(__u54_4_itim_end   = ORIGIN(u54_4_itim) + LENGTH(u54_4_itim));
+
+    /*
+     * Code and RO data lives in l2lim
+     */
+    . = __l2lim_start;
+
+    PROVIDE(_hss_start = .);
+
+    .text : ALIGN(0x10)
+    {
+        *(.entry)
+        . = ALIGN(0x10);
+        *(.text .text.* .gnu.linkonce.t.*)
+        *(.plt)
+        . = ALIGN(0x10);
+
+        KEEP (*crtbegin.o(.ctors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
+        KEEP (*(SORT(.ctors.*)))
+        KEEP (*crtend.o(.ctors))
+        KEEP (*crtbegin.o(.dtors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
+        KEEP (*(SORT(.dtors.*)))
+        KEEP (*crtend.o(.dtors))
+
+        *(.rodata .rodata.* .gnu.linkonce.r.*)
+        *(.srodata.cst16) *(.srodata.cst8) *(.srodata.cst4) *(.srodata.cst2)
+        *(.srodata*)
+        *(.sdata2.*)
+        *(.gcc_except_table)
+        *(.eh_frame_hdr)
+        *(.eh_frame)
+
+        KEEP (*(.init))
+        KEEP (*(.fini))
+
+        PROVIDE_HIDDEN (__preinit_array_start = .);
+        KEEP (*(.preinit_array))
+        PROVIDE_HIDDEN (__preinit_array_end = .);
+        PROVIDE_HIDDEN (__init_array_start = .);
+        KEEP (*(SORT(.init_array.*)))
+        KEEP (*(.init_array))
+        PROVIDE_HIDDEN (__init_array_end = .);
+        PROVIDE_HIDDEN (__fini_array_start = .);
+        KEEP (*(.fini_array))
+        KEEP (*(SORT(.fini_array.*)))
+        PROVIDE_HIDDEN (__fini_array_end = .);
+        . = ALIGN(0x10);
+    } >l2lim
+
+    .gnu_build_id : ALIGN(8) {
+        PROVIDE(gnu_build_id = .);
+        *(.note.gnu.build-id)
+    } >l2lim
+
+    PROVIDE(_hss_end = .);
+
+    .l2_scratchpad : ALIGN(0x10)
+    {
+        __l2_scratchpad_load = LOADADDR(.l2_scratchpad);
+        __l2_scratchpad_start = .;
+        __l2_scratchpad_vma_start = .;
+        *(.l2_scratchpad)
+
+        . = ALIGN(0x10);
+        __l2_scratchpad_end = .;
+        __l2_scratchpad_vma_end = .;
+    } >l2lim
+
+
+    /*******************************************************************************
+     *
+     * The .ram_code section will contain the code That is run from RAM.
+     * We are using this code to switch the clocks including envm clock.
+     * This can not be done when running from envm
+     * This will need to be copied to ram, before any of this code is run.
+     *
+     */
+    .ram_code : ALIGN(0x10)
+    {
+        __sc_load = LOADADDR (.ram_code);
+        __sc_start = .;
+        *(.ram_codetext)        /* .ram_codetext sections (code) */
+        *(.ram_codetext*)       /* .ram_codetext* sections (code)  */
+        *(.ram_coderodata)      /* read-only data (constants) */
+        *(.ram_coderodata*)
+        . = ALIGN (0x10);
+        __sc_end = .;
+    } >switch_code
+
+    /*******************************************************************************
+     *
+     * Short/global data section
+     *
+     */
+    .sdata : ALIGN(0x40) /* short/global data section */
+    {
+        __sdata_load = LOADADDR(.sdata);
+        __sdata_start = .;
+
+        /*
+         * offset used with gp(gloabl pointer) are +/- 12 bits, so set
+         * point to middle of expected sdata range
+         *
+         * If sdata more than 4K, linker used direct addressing.
+         * Perhaps we should add check/warning to linker script if sdata is > 4k
+         */
+        __global_pointer$ = . + 0x800;
+        *(.sdata .sdata.* .gnu.linkonce.s.*)
+        . = ALIGN(0x10);
+        __sdata_end = .;
+    } >l2lim
+
+    /*******************************************************************************
+     *
+     * (Explicitly) Initialized data section
+     *
+     */
+    .data : ALIGN(0x40)
+    {
+        __data_load = LOADADDR(.data);
+        __data_start = .;
+        *(.got.plt) *(.got)
+        *(.shdata)
+        *(.data .data.* .gnu.linkonce.d.*)
+        . = ALIGN(0x10);
+        __data_end = .;
+    } >l2lim
+
+    /*******************************************************************************
+     *
+     * Uninitialized (zero-initialized) section
+     */
+
+    /*
+     * Short zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     *
+     */
+    .sbss : ALIGN(0x40)
+    {
+        __sbss_start = .;
+        *(.sbss .sbss.* .gnu.linkonce.sb.*)
+        *(.scommon)
+        . = ALIGN(0x10);
+        __sbss_end = .;
+    } >l2lim
+
+    /*
+     * General Zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     */
+    .bss : ALIGN(0x40)
+    {
+        __bss_start = .;
+        *(.shbss)
+        *(.bss .bss.* .gnu.linkonce.b.*)
+        *(COMMON)
+        . = ALIGN(0x10);
+        __bss_end = .;
+    } >l2lim
+
+    /*
+     * Reserved space for Hart stacks
+     */
+    .stack : ALIGN(0x40)
+    {
+        __stack_bottom = .;
+
+        __stack_bottom_h0$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h0$ = .;
+
+        __stack_bottom_h1$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h1$ = .;
+
+        __stack_bottom_h2$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h2$ = .;
+
+        __stack_bottom_h3$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h3$ = .;
+
+        __stack_bottom_h4$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h4$ = .;
+
+        __stack_top = .;
+    } >l2lim
+
+    _end = .;
+
+    /*
+     * End of uninitialized data segment
+     *
+     *******************************************************************************/
+
+    /*
+    .heap : ALIGN(0x10)
+    {
+        __heap_start = .;
+        . += HEAP_SIZE;
+        __heap_end = .;
+        . = ALIGN(0x10);
+        _heap_end = __heap_end;
+    } >dtim
+    */
+}
diff --git a/boards/tysom-m-mpfs250t/hss.ld b/boards/tysom-m-mpfs250t/hss.ld
new file mode 100644
index 0000000..6ec3933
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/hss.ld
@@ -0,0 +1,352 @@
+/*******************************************************************************
+ * Copyright 2019 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * GNU linker script for Hart Software Services (HSS)
+ *
+ */
+
+OUTPUT_ARCH( "riscv" )
+
+/*
+
+ PolarFire SoC Memory map (ditaa diagram)
+ ----------------------------------------
+                                                                                   +-------------+
+                                                      +-----------+                | non-cache   |
+                                                      | non-cache |                |  WCB (SEG1) |
+               +---------------------+                |  (SEG1)   | 0x18_0000_0000 +-------------+
+               | DDR cached          | 0x14_0000_0000 +-----------+                | non-cache   |
+               |  (SEG0)             |                | non-cache |                |  WCB (SEG1) |
+0x10_0000_0000 +---------------------+                |  (SEG1)   |    0xD000_0000 +-------------+
+               | DDR cached          |    0xC000_0000 +-----------+
+               |  (SEG0)             |
+   0x8000_0000 +---------------------+
+               | envm (128KiB)       |
+               |                     |
+   0x2022_0000 +---------------------+
+               | Zero Device         |
+               |                     |
+   0x0A00_0000 +---------------------+
+               | LIM (up to 1920KiB) |
+               |                     |
+   0x0800_0000 +---------------------+
+               | U54_4 ITIM (28KiB)  |
+               |                     |
+   0x0182_0000 +---------------------+
+               | U54_3 ITIM (28KiB)  |
+               |                     |
+   0x0181_8000 +---------------------+
+               | U54_2 ITIM (28KiB)  |
+               |                     |
+   0x0181_0000 +---------------------+
+               | U54_1 ITIM (28KiB)  |
+               |                     |
+   0x0180_8000 +---------------------+
+               | E51 ITIM (28KiB)    |
+               |                     |
+   0x0180_0000 +---------------------+
+               | DTIM (8KiB)         |
+               |                     |
+   0x0100_0000 +---------------------+
+
+ */
+
+/*******************************************************************************
+ *
+ * -- MSS hart Reset vector
+ *
+ * The MSS reset vector for each hart is configured by Libero and stored securely
+ * in the MPFS.
+ *
+ * The most common usage will be where the reset vector for each hart will be set
+ * to the start of the envm at address 0x2022_0000, giving 128K of contiguous
+ * non-volatile storage. Normally this is where the initial boot-loader will
+ * reside.
+ *
+ * Libero outputs the configured reset vector address to the xml file, see
+ * LIBERO_SETTING_RESET_VECTOR_HART0 etc in <hw_memory.h>
+ *
+ * When debugging a bare metal program that is run out of reset from envm, a linker
+ * script will be used whereby the progdtim will run from LIM instead of envm.
+ * In this case, set the reset vector in the linker script to 0x0800_0000.
+ * This means you are not continually programming the envm each time you load a
+ * program and there is no limitation with hardware break points whn debugging.
+ */
+ENTRY(_start)
+
+
+/*******************************************************************************
+ *
+ * Memory Segments
+ *
+ * must be on 4k boundary (0x1000) - corresponds to page size, when using memory mem
+ */
+MEMORY
+{
+    envm (rx)          : ORIGIN = 0x20220000, LENGTH = 128k
+
+    dtim (rwx)         : ORIGIN = 0x01000000, LENGTH = 7k /* DTIM */
+    switch_code (rx)   : ORIGIN = 0x01001c00, LENGTH = 1k /* This 1K of DTIM is used to run code
+                                                           * when switching the envm clock */
+    e51_itim (rwx)     : ORIGIN = 0x01800000, LENGTH = 28k
+    u54_1_itim (rwx)   : ORIGIN = 0x01808000, LENGTH = 28k
+    u54_2_itim (rwx)   : ORIGIN = 0x01810000, LENGTH = 28k
+    u54_3_itim (rwx)   : ORIGIN = 0x01818000, LENGTH = 28k
+    u54_4_itim (rwx)   : ORIGIN = 0x01820000, LENGTH = 28k
+    l2lim (rwx)        : ORIGIN = 0x08000000, LENGTH = 1920k
+    l2zerodevice (rwx) : ORIGIN = 0x0A000000, LENGTH = 512k
+    ddr (rwx)          : ORIGIN = 0x80000000, LENGTH = 1024m
+}
+
+PROVIDE(HEAP_SIZE = 0k);               /* needs to be calculated for your application */
+PROVIDE(STACK_SIZE_PER_HART = 16k);
+
+/*******************************************************************************
+ *
+ * Memory Sections and Placement
+ */
+SECTIONS
+{
+    PROVIDE(__envm_start       = ORIGIN(envm));
+    PROVIDE(__envm_end         = ORIGIN(envm) + LENGTH(envm));
+
+    PROVIDE(__l2lim_start      = ORIGIN(l2lim));
+    PROVIDE(__l2lim_end        = ORIGIN(l2lim) + LENGTH(l2lim));
+
+    PROVIDE(__ddr_start        = ORIGIN(ddr));
+    PROVIDE(__ddr_end          = ORIGIN(ddr) + LENGTH(ddr));
+
+    PROVIDE(__dtim_start       = ORIGIN(dtim));
+    PROVIDE(__dtim_end         = ORIGIN(dtim) + LENGTH(dtim));
+
+    PROVIDE(__e51itim_start    = ORIGIN(e51_itim));
+    PROVIDE(__e51itim_end      = ORIGIN(e51_itim) + LENGTH(e51_itim));
+
+    PROVIDE(__u54_1_itim_start = ORIGIN(u54_1_itim));
+    PROVIDE(__u54_1_itim_end   = ORIGIN(u54_1_itim) + LENGTH(u54_1_itim));
+
+    PROVIDE(__u54_2_itim_start = ORIGIN(u54_2_itim));
+    PROVIDE(__u54_2_itim_end   = ORIGIN(u54_2_itim) + LENGTH(u54_2_itim));
+
+    PROVIDE(__u54_3_itim_start = ORIGIN(u54_3_itim));
+    PROVIDE(__u54_3_itim_end   = ORIGIN(u54_3_itim) + LENGTH(u54_3_itim));
+
+    PROVIDE(__u54_4_itim_start = ORIGIN(u54_4_itim));
+    PROVIDE(__u54_4_itim_end   = ORIGIN(u54_4_itim) + LENGTH(u54_4_itim));
+
+    PROVIDE(__l2lim_start      = ORIGIN(l2lim));
+    PROVIDE(__l2lim_end        = ORIGIN(l2lim) + LENGTH(l2lim));
+
+    /*
+     * Code and RO data lives in envm (flash)
+     */
+    . = __envm_start;
+
+    PROVIDE(_hss_start = .);
+
+    .text : ALIGN(0x10)
+    {
+        *(.entry)
+        . = ALIGN(0x10);
+        *(.text .text.* .gnu.linkonce.t.*)
+        *(.plt)
+        . = ALIGN(0x10);
+
+        KEEP (*crtbegin.o(.ctors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .ctors))
+        KEEP (*(SORT(.ctors.*)))
+        KEEP (*crtend.o(.ctors))
+        KEEP (*crtbegin.o(.dtors))
+        KEEP (*(EXCLUDE_FILE (*crtend.o) .dtors))
+        KEEP (*(SORT(.dtors.*)))
+        KEEP (*crtend.o(.dtors))
+
+        *(.rodata .rodata.* .gnu.linkonce.r.*)
+        *(.srodata.cst16) *(.srodata.cst8) *(.srodata.cst4) *(.srodata.cst2)
+        *(.srodata*)
+        *(.sdata2.*)
+        *(.gcc_except_table)
+        *(.eh_frame_hdr)
+        *(.eh_frame)
+
+        KEEP (*(.init))
+        KEEP (*(.fini))
+
+        PROVIDE_HIDDEN (__preinit_array_start = .);
+        KEEP (*(.preinit_array))
+        PROVIDE_HIDDEN (__preinit_array_end = .);
+        PROVIDE_HIDDEN (__init_array_start = .);
+        KEEP (*(SORT(.init_array.*)))
+        KEEP (*(.init_array))
+        PROVIDE_HIDDEN (__init_array_end = .);
+        PROVIDE_HIDDEN (__fini_array_start = .);
+        KEEP (*(.fini_array))
+        KEEP (*(SORT(.fini_array.*)))
+        PROVIDE_HIDDEN (__fini_array_end = .);
+        . = ALIGN(0x10);
+    } >envm
+
+    .gnu_build_id : ALIGN(8) {
+        PROVIDE(gnu_build_id = .);
+        *(.note.gnu.build-id)
+    } >envm
+
+    PROVIDE(_hss_end = .);
+
+    .l2_scratchpad : ALIGN(0x10)
+    {
+        __l2_scratchpad_load = LOADADDR(.l2_scratchpad);
+        __l2_scratchpad_start = .;
+        __l2_scratchpad_vma_start = .;
+        *(.l2_scratchpad)
+
+        . = ALIGN(0x10);
+        __l2_scratchpad_end = .;
+        __l2_scratchpad_vma_end = .;
+    } >l2lim AT>envm
+
+
+    /*******************************************************************************
+     *
+     * The .ram_code section will contain the code That is run from RAM.
+     * We are using this code to switch the clocks including envm clock.
+     * This can not be done when running from envm
+     * This will need to be copied to ram, before any of this code is run.
+     *
+     */
+    .ram_code : ALIGN(0x10)
+    {
+        __sc_load = LOADADDR (.ram_code);
+        __sc_start = .;
+        *(.ram_codetext)        /* .ram_codetext sections (code) */
+        *(.ram_codetext*)       /* .ram_codetext* sections (code)  */
+        *(.ram_coderodata)      /* read-only data (constants) */
+        *(.ram_coderodata*)
+        . = ALIGN (0x10);
+        __sc_end = .;
+    } >switch_code AT>envm
+
+    /*******************************************************************************
+     *
+     * Short/global data section
+     *
+     */
+    .sdata : ALIGN(0x40) /* short/global data section */
+    {
+        __sdata_load = LOADADDR(.sdata);
+        __sdata_start = .;
+
+        /*
+         * offset used with gp(gloabl pointer) are +/- 12 bits, so set
+         * point to middle of expected sdata range
+         *
+         * If sdata more than 4K, linker used direct addressing.
+         * Perhaps we should add check/warning to linker script if sdata is > 4k
+         */
+        __global_pointer$ = . + 0x800;
+        *(.sdata .sdata.* .gnu.linkonce.s.*)
+        . = ALIGN(0x10);
+        __sdata_end = .;
+    } >l2lim AT >envm
+
+    /*******************************************************************************
+     *
+     * (Explicitly) Initialized data section
+     *
+     */
+    .data : ALIGN(0x40)
+    {
+        __data_load = LOADADDR(.data);
+        __data_start = .;
+        *(.got.plt) *(.got)
+        *(.shdata)
+        *(.data .data.* .gnu.linkonce.d.*)
+        . = ALIGN(0x10);
+        __data_end = .;
+    } >l2lim AT >envm
+
+    /*******************************************************************************
+     *
+     * Uninitialized (zero-initialized) section
+     */
+
+    /*
+     * Short zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     *
+     */
+    .sbss : ALIGN(0x40)
+    {
+        __sbss_start = .;
+        *(.sbss .sbss.* .gnu.linkonce.sb.*)
+        *(.scommon)
+        . = ALIGN(0x10);
+        __sbss_end = .;
+    } >l2lim
+
+    /*
+     * General Zero-initialized section
+     * The name BSS is an anacronym for "Block Started by Symbol" from a mid 1950s
+     * assembly language for the IBM 704.
+     */
+    .bss : ALIGN(0x40)
+    {
+        __bss_start = .;
+        *(.shbss)
+        *(.bss .bss.* .gnu.linkonce.b.*)
+        *(COMMON)
+        . = ALIGN(0x10);
+        __bss_end = .;
+    } >l2lim
+
+    /*
+     * Reserved space for Hart stacks
+     */
+    .stack : ALIGN(0x40)
+    {
+        __stack_bottom = .;
+
+        __stack_bottom_h0$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h0$ = .;
+
+        __stack_bottom_h1$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h1$ = .;
+
+        __stack_bottom_h2$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h2$ = .;
+
+        __stack_bottom_h3$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h3$ = .;
+
+        __stack_bottom_h4$ = .;
+        . += STACK_SIZE_PER_HART;
+        __stack_top_h4$ = .;
+
+        __stack_top = .;
+    } >l2lim
+
+    _end = .;
+
+    /*
+     * End of uninitialized data segment
+     *
+     *******************************************************************************/
+
+    /*
+    .heap : ALIGN(0x10)
+    {
+        __heap_start = .;
+        . += HEAP_SIZE;
+        __heap_end = .;
+        . = ALIGN(0x10);
+        _heap_end = __heap_end;
+    } >dtim
+    */
+}
diff --git a/boards/tysom-m-mpfs250t/hss_board_init.c b/boards/tysom-m-mpfs250t/hss_board_init.c
new file mode 100644
index 0000000..9990fdd
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/hss_board_init.c
@@ -0,0 +1,71 @@
+/*******************************************************************************
+ * Copyright 2017-2020 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * MPFS HSS Embedded Software
+ *
+ */
+
+/**
+ * \file HSS Board Initalization
+ * \brief Board Initialization
+ */
+
+#include "config.h"
+#include "hss_types.h"
+#include <assert.h>
+
+#include "hss_debug.h"
+
+#include "hss_init.h"
+#include "hss_state_machine.h"
+#include "ssmb/ipi/ssmb_ipi.h"
+#include "hss_registry.h"
+
+/******************************************************************************************************/
+/*!
+ * \brief Board Init Function Registration Table
+ *
+ * The following structure is used to connect in new board init functions.
+ */
+
+#include "hss_init.h"
+#include "hss_boot_pmp.h"
+#include "hss_sys_setup.h"
+#include "hss_board_init.h"
+
+const struct InitFunction /*@null@*/ boardInitFunctions[] = {
+    // Name                     FunctionPointer         Halt   Restart
+    { "HSS_Setup_Clocks",       HSS_Setup_Clocks,       false, false },
+    { "HSS_Setup_PAD_IO",       HSS_Setup_PAD_IO,       false, false },
+    { "HSS_ZeroTIMs",           HSS_ZeroTIMs,           false, false },
+    { "HSS_Setup_PLIC",         HSS_Setup_PLIC,         false, false },
+    { "HSS_Setup_BusErrorUnit", HSS_Setup_BusErrorUnit, false, false },
+    { "HSS_Setup_MPU",          HSS_Setup_MPU,          false, false },
+    { "HSS_DDRInit",            HSS_DDRInit,            false, false },
+    { "HSS_ZeroDDR",            HSS_ZeroDDR,            false, false },
+#ifdef CONFIG_USE_PCIE
+    { "HSS_PCIeInit",           HSS_PCIeInit,           false, false },
+#endif
+};
+
+
+/******************************************************************************************************/
+
+/**
+ * \brief Board Initialization Function
+ *
+ * All other initialization routines to be chained off this...
+ */
+
+/****************************************************************************/
+
+
+#include "mss_sysreg.h"
+bool HSS_BoardInit(void)
+{
+    RunInitFunctions(ARRAY_SIZE(boardInitFunctions), boardInitFunctions);
+
+    return true;
+}
diff --git a/boards/tysom-m-mpfs250t/hss_uart_init.c b/boards/tysom-m-mpfs250t/hss_uart_init.c
new file mode 100644
index 0000000..0bda7f0
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/hss_uart_init.c
@@ -0,0 +1,51 @@
+/*******************************************************************************
+ * Copyright 2019 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * MPFS HSS Embedded Software
+ *
+ */
+
+/**
+ * \file HSS Debug UART Initalization
+ * \brief Debug UART Initialization
+ */
+
+#include "config.h"
+#include "hss_types.h"
+#include "hss_init.h"
+
+#include <assert.h>
+
+#include "hss_debug.h"
+
+#include "drivers/mss_uart/mss_uart.h"
+
+bool HSS_UARTInit(void)
+{
+    // initialise debug UART
+
+#if defined(CONFIG_PLATFORM_MPFS)
+    MSS_UART_init(&g_mss_uart0_lo, MSS_UART_115200_BAUD,
+        MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
+
+    // default all UARTs to 115200 for now
+    // subsequent OS loads can change these if needed...
+    MSS_UART_init(&g_mss_uart1_lo, MSS_UART_115200_BAUD,
+        MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
+
+    MSS_UART_init(&g_mss_uart2_lo, MSS_UART_115200_BAUD,
+        MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
+
+    MSS_UART_init(&g_mss_uart3_lo, MSS_UART_115200_BAUD,
+        MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
+
+    MSS_UART_init(&g_mss_uart4_lo, MSS_UART_115200_BAUD,
+        MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
+#else
+#  error Unknown PLATFORM
+#endif
+
+    return true;
+}
diff --git a/boards/tysom-m-mpfs250t/mpfs_hal_config/mss_sw_config.h b/boards/tysom-m-mpfs250t/mpfs_hal_config/mss_sw_config.h
new file mode 100644
index 0000000..44ab077
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/mpfs_hal_config/mss_sw_config.h
@@ -0,0 +1,180 @@
+/*******************************************************************************
+ * Copyright 2019-2020 Microchip FPGA Embedded Systems Solutions.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * MPFS HAL Embedded Software
+ *
+ */
+
+/*******************************************************************************
+ *
+ * Platform definitions
+ * Version based on requirements of MPFS MSS
+ *
+ */
+ /*========================================================================*//**
+  @mainpage Sample file detailing how mss_sw_config.h should be constructed for
+    the MPFS MSS
+
+    @section intro_sec Introduction
+    The mss_sw_config.h is to be located in the project
+    ./src/platform/config/software/mpfs_hal directory.
+    This file must be hand crafted when using the MPFS MSS.
+
+
+    @section
+
+*//*==========================================================================*/
+
+
+#ifndef USER_CONFIG_MSS_USER_CONFIG_H_
+#define USER_CONFIG_MSS_USER_CONFIG_H_
+
+/*------------------------------------------------------------------------------
+ * MPFS_HAL_FIRST_HART and MPFS_HAL_LAST_HART defines used to specify which
+ * harts to actually start.
+ * Set MPFS_HAL_FIRST_HART to a value other than 0 if you do not want your code
+ * to start and execute code on the E51 hart.
+ * Set MPFS_HAL_LAST_HART to a value smaller than 4 if you do not wish to use
+ * all U54 harts.
+ * Harts that are not started will remain in an infinite WFI loop unless used
+ * through some other method
+ */
+#ifndef MPFS_HAL_FIRST_HART
+#define MPFS_HAL_FIRST_HART  0
+#endif
+
+#ifndef MPFS_HAL_LAST_HART
+#define MPFS_HAL_LAST_HART   4
+#endif
+
+/*------------------------------------------------------------------------------
+ * Markers used to indicate startup status of hart
+ */
+#define HLS_DATA_IN_WFI                     0x12345678U
+#define HLS_DATA_PASSED_WFI                 0x87654321U
+
+/*------------------------------------------------------------------------------
+ * Define the size of the HLS used
+ * In our HAL, we are using Hart Local storage for debug data storage only
+ * as well as flags for wfi instruction management.
+ * The TLS will take memory from top of the stack if allocated
+ *
+ */
+#define HLS_DEBUG_AREA_SIZE     64
+
+/* define the required tick rate in Milliseconds */
+/* if this program is running on one hart only, only that particular hart value
+ * will be used */
+#define HART0_TICK_RATE_MS  5UL
+#define HART1_TICK_RATE_MS  5UL
+#define HART2_TICK_RATE_MS  5UL
+#define HART3_TICK_RATE_MS  5UL
+#define HART4_TICK_RATE_MS  5UL
+
+#define H2F_BASE_ADDRESS 0x20126000     /* or 0x28126000 */
+
+/*
+ * define how you want the Bus Error Unit configured
+ */
+#define BEU_ENABLE                  0x0ULL
+#define BEU_PLIC_INT                0x0ULL
+#define BEU_LOCAL_INT               0x0ULL
+
+/*
+ * Clear memory on startup
+ * 0 => do not clear DTIM and L2
+ * 1 => Clears memory
+ */
+#ifndef MPFS_HAL_CLEAR_MEMORY
+#define MPFS_HAL_CLEAR_MEMORY  0
+#endif
+
+/*
+ * MPFS_HAL_HW_CONFIG
+ * Conditional compile switch is used to determine if MPFS HAL will perform the
+ * hardware configurations or not.
+ * Defined      => This program acts as a First stage bootloader and performs
+ *                 hardware configurations.
+ * Not defined  => This program assumes that the hardware configurations are
+ *                 already performed (Typically by a previous boot stage)
+ *
+ * List of items initialised when MPFS_HAL_HW_CONFIG is enabled
+ * - load virtual rom (see load_virtual_rom(void) in system_startup.c)
+ * - l2 cache config
+ * - Bus error unit config
+ * - MPU config
+ * - pmp config
+ * - I/O, clock and clock mux's, DDR and SGMII
+ * - will start other harts, see text describing MPFS_HAL_FIRST_HART,
+ *   MPFS_HAL_LAST_HART above
+ */
+#ifndef MPFS_HAL_HW_CONFIG
+#define MPFS_HAL_HW_CONFIG
+#endif
+
+/*
+ * If not using item, comment out line below
+ */
+#define SGMII_SUPPORT
+#define DDR_SUPPORT
+#define MSSIO_SUPPORT
+//#define SIMULATION_TEST_FEEDBACK
+//#define E51_ENTER_SLEEP_STATE
+
+/*
+ * DDR software options
+ */
+
+/*
+ * Debug DDR startup through a UART
+ * Comment out in normal operation. May be useful for debug purposes in bring-up
+ * of a new board design.
+ * See the weak function setup_ddr_debug_port(mss_uart_instance_t * uart)
+ * If you need to edit this function, make a copy of of the function without the
+ * weak declaration in your application code.
+ * */
+#define LIBERO_SETTING_TIP_CFG_PARAMS    0x07CFE00FUL
+#define USE_SW_BCLK_SCK_TRAINING                    0x00000001UL
+#define SW_TRAING_BCLK_SCLK_OFFSET                  0x00000004L
+//#define DEBUG_DDR_INIT
+//#define DEBUG_DDR_RD_RW_FAIL
+//#define DEBUG_DDR_RD_RW_PASS
+//#define DEBUG_DDR_CFG_DDR_SGMII_PHY
+//#define DEBUG_DDR_DDRCFG
+
+/*
+ * Set up 1MiB of L2 cache
+ */
+#define LIBERO_SETTING_WAY_ENABLE    0x00000007UL
+
+/*
+ * Libero v12.6 support
+ */
+#if !defined(LIBERO_SETTING_WAY_MASK_M0)
+/*Way mask register master 0 (hart0) */
+#  define LIBERO_SETTING_WAY_MASK_M0    0x00000000UL
+#endif
+
+#if !defined(LIBERO_SETTING_WAY_MASK_M1)
+/*Way mask register master 1 (hart1) */
+#  define LIBERO_SETTING_WAY_MASK_M1    0x00000000UL
+#endif
+
+#if !defined(LIBERO_SETTING_WAY_MASK_M2)
+/*Way mask register master 2 (hart2) */
+#  define LIBERO_SETTING_WAY_MASK_M2    0x00000000UL
+#endif
+
+#if !defined(LIBERO_SETTING_WAY_MASK_M3)
+/*Way mask register master 3 (hart3) */
+#  define LIBERO_SETTING_WAY_MASK_M3    0x00000000UL
+#endif
+
+#if !defined(LIBERO_SETTING_WAY_MASK_M4)
+/*Way mask register master 4 (hart4) */
+#  define LIBERO_SETTING_WAY_MASK_M4    0x00000000UL
+#endif
+
+#endif /* USER_CONFIG_MSS_USER_CONFIG_H_ */
diff --git a/boards/tysom-m-mpfs250t/mpfs_hal_config/readme.txt b/boards/tysom-m-mpfs250t/mpfs_hal_config/readme.txt
new file mode 100644
index 0000000..086c9f1
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/mpfs_hal_config/readme.txt
@@ -0,0 +1,2 @@
+contains user configuration of the platform
+e.g. division of memory between harts etc.
\ No newline at end of file
diff --git a/boards/tysom-m-mpfs250t/soc_fpga_design/xml/Aldec_MSSv2_mss_cfg.xml b/boards/tysom-m-mpfs250t/soc_fpga_design/xml/Aldec_MSSv2_mss_cfg.xml
new file mode 100644
index 0000000..50dc031
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/soc_fpga_design/xml/Aldec_MSSv2_mss_cfg.xml
@@ -0,0 +1,4024 @@
+  <mss xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="mpfs_hw_description.xsd">
+    <design_information>
+      <libero_version>2021.1</libero_version>
+      <design_name>Aldec_MSSv2</design_name>
+      <mpfs_part_no>MPFS250T_ES</mpfs_part_no>
+      <mpfs_package>FCG1152</mpfs_package>
+      <creation_date_time>06-09-2021_11:03:50</creation_date_time>
+      <xml_format_version>0.5.3</xml_format_version>
+    </design_information>
+    <mss_memory_map>
+      <map>
+        <mem_elements>
+          <mem description="Reset vector hart0" name="RESET_VECTOR_HART0" size="0x4">0x20220000</mem>
+          <mem description="Reset vector hart1" name="RESET_VECTOR_HART1" size="0x4">0x20220000</mem>
+          <mem description="Reset vector hart2" name="RESET_VECTOR_HART2" size="0x4">0x20220000</mem>
+          <mem description="Reset vector hart3" name="RESET_VECTOR_HART3" size="0x4">0x20220000</mem>
+          <mem description="Reset vector hart4" name="RESET_VECTOR_HART4" size="0x4">0x20220000</mem>
+          <mem description="example instance of memory" name="DDR_32_CACHE" size="0x100000">0x80000000</mem>
+          <mem description="example instance" name="DDR_32_NON_CACHE" size="0x100000">0xC0000000</mem>
+          <mem description="64 bit address " name="DDR_64_CACHE" size="0x100000">0x1000000000</mem>
+          <mem description="64 bit address " name="DDR_64_NON_CACHE" size="0x100000">0x1400000000</mem>
+          <mem description="example instance" name="DDR_32_WCB" size="0x100000">0xD0000000</mem>
+          <mem description="64 bit address " name="DDR_64_WCB" size="0x100000">0x1800000000</mem>
+          <mem description="Offset and size of reserved sNVM. (Not available to MSS)" name="RESERVED_SNVM" size="0x00000000">0x00000000</mem>
+          <mem description="Offset and size of reserved eNVM  (Not available to MSS)" name="RESERVED_ENVM" size="0x00000000">0x00000000</mem>
+        </mem_elements>
+      </map>
+      <apb_split>
+        <registers>
+          <register address="0x00000000" description="This version incrments when change to format of this file" name="APB_SPLIT_VERSION">
+            <field Type="RW" name="VERSION" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00000004" description="Enabled in configurator when bit set to 1" name="MEM_CONFIGS_ENABLED">
+            <field Type="RW" name="PMP" offset="0" width="0">0x0</field>
+            <field Type="RW" name="MPU" offset="1" width="0">0x0</field>
+          </register>
+          <register address="0x00000008" description="AMP Mode peripheral mapping register.  When the register bit is '0' the peripheral is mapped into the 0x2000000 address range using AXI bus 5 from the Coreplex. When the register bit is '1' the peripheral is mapped into the 0x28000000 address range using AXI bus 6 from the Coreplex." name="APBBUS_CR">
+            <field Type="RW" name="MMUART0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MMUART1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MMUART2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MMUART3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MMUART4" offset="4" width="1">0x0</field>
+            <field Type="RW" name="WDOG0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="WDOG1" offset="6" width="1">0x0</field>
+            <field Type="RW" name="WDOG2" offset="7" width="1">0x0</field>
+            <field Type="RW" name="WDOG3" offset="8" width="1">0x0</field>
+            <field Type="RW" name="WDOG4" offset="9" width="1">0x0</field>
+            <field Type="RW" name="SPI0" offset="10" width="1">0x0</field>
+            <field Type="RW" name="SPI1" offset="11" width="1">0x0</field>
+            <field Type="RW" name="I2C0" offset="12" width="1">0x0</field>
+            <field Type="RW" name="I2C1" offset="13" width="1">0x0</field>
+            <field Type="RW" name="CAN0" offset="14" width="1">0x0</field>
+            <field Type="RW" name="CAN1" offset="15" width="1">0x0</field>
+            <field Type="RW" name="GEM0" offset="16" width="1">0x0</field>
+            <field Type="RW" name="GEM1" offset="17" width="1">0x0</field>
+            <field Type="RW" name="TIMER" offset="18" width="1">0x0</field>
+            <field Type="RW" name="GPIO0" offset="19" width="1">0x0</field>
+            <field Type="RW" name="GPIO1" offset="20" width="1">0x0</field>
+            <field Type="RW" name="GPIO2" offset="21" width="1">0x0</field>
+            <field Type="RW" name="RTC" offset="22" width="1">0x0</field>
+            <field Type="RW" name="H2FINT" offset="23" width="1">0x0</field>
+          </register>
+          <register address="0x00000012" description="AMP context A. When the register bit is '0' the peripheral is not allowed access from context A. " name="CONTEXT_A_EN">
+            <field Type="RW" name="MMUART0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MMUART1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MMUART2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MMUART3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MMUART4" offset="4" width="1">0x0</field>
+            <field Type="RW" name="WDOG0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="WDOG1" offset="6" width="1">0x0</field>
+            <field Type="RW" name="WDOG2" offset="7" width="1">0x0</field>
+            <field Type="RW" name="WDOG3" offset="8" width="1">0x0</field>
+            <field Type="RW" name="WDOG4" offset="9" width="1">0x0</field>
+            <field Type="RW" name="SPI0" offset="10" width="1">0x0</field>
+            <field Type="RW" name="SPI1" offset="11" width="1">0x0</field>
+            <field Type="RW" name="I2C0" offset="12" width="1">0x0</field>
+            <field Type="RW" name="I2C1" offset="13" width="1">0x0</field>
+            <field Type="RW" name="CAN0" offset="14" width="1">0x0</field>
+            <field Type="RW" name="CAN1" offset="15" width="1">0x0</field>
+            <field Type="RW" name="GEM0" offset="16" width="1">0x0</field>
+            <field Type="RW" name="GEM1" offset="17" width="1">0x0</field>
+            <field Type="RW" name="TIMER" offset="18" width="1">0x0</field>
+            <field Type="RW" name="GPIO0" offset="19" width="1">0x0</field>
+            <field Type="RW" name="GPIO1" offset="20" width="1">0x0</field>
+            <field Type="RW" name="GPIO2" offset="21" width="1">0x0</field>
+            <field Type="RW" name="RTC" offset="22" width="1">0x0</field>
+            <field Type="RW" name="H2FINT" offset="23" width="1">0x0</field>
+            <field Type="RW" name="CRYPTO" offset="24" width="1">0x0</field>
+            <field Type="RW" name="USB" offset="25" width="1">0x0</field>
+            <field Type="RW" name="QSPIXIP" offset="26" width="1">0x0</field>
+            <field Type="RW" name="ATHENA" offset="27" width="1">0x0</field>
+            <field Type="RW" name="TRACE" offset="28" width="1">0x0</field>
+            <field Type="RW" name="MAILBOX_SC" offset="29" width="1">0x0</field>
+            <field Type="RW" name="EMMC" offset="30" width="1">0x0</field>
+          </register>
+          <register address="0x00000016" description="AMP context B. When the register bit is '0' the peripheral is not allowed access from context B. " name="CONTEXT_B_EN">
+            <field Type="RW" name="MMUART0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MMUART1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MMUART2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MMUART3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MMUART4" offset="4" width="1">0x0</field>
+            <field Type="RW" name="WDOG0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="WDOG1" offset="6" width="1">0x0</field>
+            <field Type="RW" name="WDOG2" offset="7" width="1">0x0</field>
+            <field Type="RW" name="WDOG3" offset="8" width="1">0x0</field>
+            <field Type="RW" name="WDOG4" offset="9" width="1">0x0</field>
+            <field Type="RW" name="SPI0" offset="10" width="1">0x0</field>
+            <field Type="RW" name="SPI1" offset="11" width="1">0x0</field>
+            <field Type="RW" name="I2C0" offset="12" width="1">0x0</field>
+            <field Type="RW" name="I2C1" offset="13" width="1">0x0</field>
+            <field Type="RW" name="CAN0" offset="14" width="1">0x0</field>
+            <field Type="RW" name="CAN1" offset="15" width="1">0x0</field>
+            <field Type="RW" name="GEM0" offset="16" width="1">0x0</field>
+            <field Type="RW" name="GEM1" offset="17" width="1">0x0</field>
+            <field Type="RW" name="TIMER" offset="18" width="1">0x0</field>
+            <field Type="RW" name="GPIO0" offset="19" width="1">0x0</field>
+            <field Type="RW" name="GPIO1" offset="20" width="1">0x0</field>
+            <field Type="RW" name="GPIO2" offset="21" width="1">0x0</field>
+            <field Type="RW" name="RTC" offset="22" width="1">0x0</field>
+            <field Type="RW" name="H2FINT" offset="23" width="1">0x0</field>
+            <field Type="RW" name="CRYPTO" offset="24" width="1">0x0</field>
+            <field Type="RW" name="USB" offset="25" width="1">0x0</field>
+            <field Type="RW" name="QSPIXIP" offset="26" width="1">0x0</field>
+            <field Type="RW" name="ATHENA" offset="27" width="1">0x0</field>
+            <field Type="RW" name="TRACE" offset="28" width="1">0x0</field>
+            <field Type="RW" name="MAILBOX_SC" offset="29" width="1">0x0</field>
+            <field Type="RW" name="EMMC" offset="30" width="1">0x0</field>
+          </register>
+          <register address="0x00000020" description="When the register bit is '0' hart is not associated with context A." name="CONTEXT_A_HART_EN">
+            <field Type="RW" name="HART0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="HART1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="HART2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="HART3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="HART4" offset="4" width="1">0x0</field>
+          </register>
+          <register address="0x00000024" description="When the register bit is '0' hart is not associated with context B." name="CONTEXT_B_HART_EN">
+            <field Type="RW" name="HART0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="HART1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="HART2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="HART3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="HART4" offset="4" width="1">0x0</field>
+          </register>
+        </registers>
+      </apb_split>
+      <cache>
+        <registers>
+          <register address="0x00000008" description="Way indexes less than or equal to this register value  may be used by the cache. E.g. set to 0x7, will allocate 8 cache ways, 0-7 to cache, and leave 8-15 as LIM. Note 1: Way 0 is always allocated as cache. Note 2: each way is 128KB." name="WAY_ENABLE">
+            <field Type="RW" name="WAY_ENABLE" offset="0" width="8">0x7</field>
+          </register>
+          <register address="0x00000008" description="Way mask register master DMA. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_DMA">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000016" description="Way mask register master DMA. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_AXI4_PORT_0">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000024" description="Way mask register master DMA. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_AXI4_PORT_1">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000032" description="Way mask registerAXI slave port 2. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_AXI4_PORT_2">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000040" description="Way mask register AXI slave port 3. Set field to 1 to disable way from this master. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_AXI4_PORT_3">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000048" description="Way mask register E51 data cache  (hart0). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_E51_DCACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000056" description="Way mask registerE52 instruction cache  (hart0). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_E51_ICACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Way mask register data cache  (hart1). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_1_DCACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000072" description="Way mask register instruction cache  (hart1). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_1_ICACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000080" description="Way mask register data cache  (hart2). Set field to 1 to disable way from this master. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_2_DCACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000088" description="Way mask register instruction cache  (hart2). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_2_ICACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000096" description="Way mask register data cache  (hart3). Set field to 1 to disable way from this master.Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_3_DCACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000104" description="Way mask register  instruction cache(hart3). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_3_ICACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000112" description="Way mask register data cache  (hart4). Set field to 1 to disable way from this master. Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_4_DCACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000120" description="Way mask register instruction cache  (hart4). Set field to zero to disable way from this master. The available cache ways are 0 to number set in WAY_ENABLE register. If using scratch pad memory, the ways you want reserved for scrathpad are not available for selection, you must set to 0.  e.g. If three ways reserved for scratchpad, WAY_MASK_0, WAY_MASK_1 and WAY_MASK_2 will be set to zero for all masters, so they can not evict the way. " name="WAY_MASK_U54_4_ICACHE">
+            <field Type="RW" name="WAY_MASK_0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_5" offset="5" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_6" offset="6" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_7" offset="7" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_8" offset="8" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_9" offset="9" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_10" offset="10" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_11" offset="11" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_12" offset="12" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_13" offset="13" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_14" offset="14" width="1">0x1</field>
+            <field Type="RW" name="WAY_MASK_15" offset="15" width="1">0x1</field>
+          </register>
+          <register address="0x00000136" description="Number of  ways reserved for scratchpad. Note 1: This is not a register Note 2: each way is 128KB. Note 3: Embedded software expects cache ways allocated for scratchpad start at way 0, and work up." name="NUM_SCRATCH_PAD_WAYS">
+            <field Type="RW" name="NUM_OF_WAYS" offset="0" width="8">0x0</field>
+          </register>
+        </registers>
+      </cache>
+      <pmp_h0>
+        <registers>
+          <register address="0x000003A0" description="PMP  configuration for 8 adress regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG0">
+            <field Type="RW" name="PMP0CFG" offset="0" width="8">0x00</field>
+            <field Type="RW" name="PMP1CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP2CFG" offset="16" width="8">0x00</field>
+            <field Type="RW" name="PMP3CFG" offset="24" width="8">0x00</field>
+            <field Type="RW" name="PMP4CFG" offset="32" width="8">0x00</field>
+            <field Type="RW" name="PMP5CFG" offset="40" width="8">0x00</field>
+            <field Type="RW" name="PMP6CFG" offset="48" width="8">0x00</field>
+            <field Type="RW" name="PMP7CFG" offset="56" width="8">0x00</field>
+          </register>
+          <register address="0x000003A2" description="PMP  configuration for 8 address regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG2">
+            <field Type="RW" name="PMP8CFG" offset="0" width="8">0x00</field>
+            <field Type="RW" name="PMP9CFG" offset="8" width="8">0x00</field>
+            <field Type="RW" name="PMP10CFG" offset="16" width="8">0x00</field>
+            <field Type="RW" name="PMP11CFG" offset="24" width="8">0x00</field>
+            <field Type="RW" name="PMP12CFG" offset="32" width="8">0x00</field>
+            <field Type="RW" name="PMP13CFG" offset="40" width="8">0x00</field>
+            <field Type="RW" name="PMP14CFG" offset="48" width="8">0x00</field>
+            <field Type="RW" name="PMP15CFG" offset="56" width="8">0x00</field>
+          </register>
+          <register address="0x000003B0" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR0">
+            <field Type="RW" name="CSR_PMPADDR0" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B1" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR1">
+            <field Type="RW" name="CSR_PMPADDR1" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B2" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR2">
+            <field Type="RW" name="CSR_PMPADDR2" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B3" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR3">
+            <field Type="RW" name="CSR_PMPADDR3" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B4" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR4">
+            <field Type="RW" name="CSR_PMPADDR4" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B5" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR5">
+            <field Type="RW" name="CSR_PMPADDR5" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B6" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR6">
+            <field Type="RW" name="CSR_PMPADDR6" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B7" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR7">
+            <field Type="RW" name="CSR_PMPADDR7" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B8" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR8">
+            <field Type="RW" name="CSR_PMPADDR8" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x000003B9" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR9">
+            <field Type="RW" name="CSR_PMPADDR9" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B10" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR10">
+            <field Type="RW" name="CSR_PMPADDR10" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B11" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR11">
+            <field Type="RW" name="CSR_PMPADDR11" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B12" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR12">
+            <field Type="RW" name="CSR_PMPADDR12" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B13" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR13">
+            <field Type="RW" name="CSR_PMPADDR13" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B14" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR14">
+            <field Type="RW" name="CSR_PMPADDR14" offset="0" width="64">0x00</field>
+          </register>
+          <register address="0x00003B15" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR15">
+            <field Type="RW" name="CSR_PMPADDR15" offset="0" width="64">0x00</field>
+          </register>
+        </registers>
+      </pmp_h0>
+      <pmp_h1>
+        <registers>
+          <register address="0x000003A0" description="PMP  configuration for 8 adress regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG0">
+            <field Type="RW" name="PMP0CFG" offset="0" width="8">0x9F</field>
+            <field Type="RW" name="PMP1CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP2CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP3CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP4CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP5CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP6CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP7CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003A2" description="PMP  configuration for 8 address regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG2">
+            <field Type="RW" name="PMP8CFG" offset="0" width="8">0x0</field>
+            <field Type="RW" name="PMP9CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP10CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP11CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP12CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP13CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP14CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP15CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003B0" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR0">
+            <field Type="RW" name="CSR_PMPADDR0" offset="0" width="64">0xFFFFFFFFFFFFFFFF</field>
+          </register>
+          <register address="0x000003B1" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR1">
+            <field Type="RW" name="CSR_PMPADDR1" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B2" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR2">
+            <field Type="RW" name="CSR_PMPADDR2" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B3" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR3">
+            <field Type="RW" name="CSR_PMPADDR3" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B4" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR4">
+            <field Type="RW" name="CSR_PMPADDR4" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B5" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR5">
+            <field Type="RW" name="CSR_PMPADDR5" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B6" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR6">
+            <field Type="RW" name="CSR_PMPADDR6" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B7" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR7">
+            <field Type="RW" name="CSR_PMPADDR7" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B8" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR8">
+            <field Type="RW" name="CSR_PMPADDR8" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B9" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR9">
+            <field Type="RW" name="CSR_PMPADDR9" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B10" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR10">
+            <field Type="RW" name="CSR_PMPADDR10" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B11" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR11">
+            <field Type="RW" name="CSR_PMPADDR11" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B12" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR12">
+            <field Type="RW" name="CSR_PMPADDR12" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B13" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR13">
+            <field Type="RW" name="CSR_PMPADDR13" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B14" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR14">
+            <field Type="RW" name="CSR_PMPADDR14" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B15" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR15">
+            <field Type="RW" name="CSR_PMPADDR15" offset="0" width="64">0x0</field>
+          </register>
+        </registers>
+      </pmp_h1>
+      <pmp_h2>
+        <registers>
+          <register address="0x000003A0" description="PMP  configuration for 8 adress regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG0">
+            <field Type="RW" name="PMP0CFG" offset="0" width="8">0x9F</field>
+            <field Type="RW" name="PMP1CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP2CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP3CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP4CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP5CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP6CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP7CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003A2" description="PMP  configuration for 8 address regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG2">
+            <field Type="RW" name="PMP8CFG" offset="0" width="8">0x0</field>
+            <field Type="RW" name="PMP9CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP10CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP11CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP12CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP13CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP14CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP15CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003B0" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR0">
+            <field Type="RW" name="CSR_PMPADDR0" offset="0" width="64">0xFFFFFFFFFFFFFFFF</field>
+          </register>
+          <register address="0x000003B1" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR1">
+            <field Type="RW" name="CSR_PMPADDR1" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B2" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR2">
+            <field Type="RW" name="CSR_PMPADDR2" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B3" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR3">
+            <field Type="RW" name="CSR_PMPADDR3" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B4" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR4">
+            <field Type="RW" name="CSR_PMPADDR4" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B5" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR5">
+            <field Type="RW" name="CSR_PMPADDR5" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B6" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR6">
+            <field Type="RW" name="CSR_PMPADDR6" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B7" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR7">
+            <field Type="RW" name="CSR_PMPADDR7" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B8" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR8">
+            <field Type="RW" name="CSR_PMPADDR8" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B9" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR9">
+            <field Type="RW" name="CSR_PMPADDR9" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B10" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR10">
+            <field Type="RW" name="CSR_PMPADDR10" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B11" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR11">
+            <field Type="RW" name="CSR_PMPADDR11" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B12" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR12">
+            <field Type="RW" name="CSR_PMPADDR12" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B13" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR13">
+            <field Type="RW" name="CSR_PMPADDR13" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B14" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR14">
+            <field Type="RW" name="CSR_PMPADDR14" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B15" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR15">
+            <field Type="RW" name="CSR_PMPADDR15" offset="0" width="64">0x0</field>
+          </register>
+        </registers>
+      </pmp_h2>
+      <pmp_h3>
+        <registers>
+          <register address="0x000003A0" description="PMP configuration for 8 adress regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG0">
+            <field Type="RW" name="PMP0CFG" offset="0" width="8">0x9F</field>
+            <field Type="RW" name="PMP1CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP2CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP3CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP4CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP5CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP6CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP7CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003A2" description="PMP configuration for 8 address regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG2">
+            <field Type="RW" name="PMP8CFG" offset="0" width="8">0x0</field>
+            <field Type="RW" name="PMP9CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP10CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP11CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP12CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP13CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP14CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP15CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003B0" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR0">
+            <field Type="RW" name="CSR_PMPADDR0" offset="0" width="64">0xFFFFFFFFFFFFFFFF</field>
+          </register>
+          <register address="0x000003B1" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR1">
+            <field Type="RW" name="CSR_PMPADDR1" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B2" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR2">
+            <field Type="RW" name="CSR_PMPADDR2" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B3" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR3">
+            <field Type="RW" name="CSR_PMPADDR3" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B4" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR4">
+            <field Type="RW" name="CSR_PMPADDR4" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B5" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR5">
+            <field Type="RW" name="CSR_PMPADDR5" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B6" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR6">
+            <field Type="RW" name="CSR_PMPADDR6" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B7" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR7">
+            <field Type="RW" name="CSR_PMPADDR7" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B8" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR8">
+            <field Type="RW" name="CSR_PMPADDR8" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B9" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR9">
+            <field Type="RW" name="CSR_PMPADDR9" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B10" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR10">
+            <field Type="RW" name="CSR_PMPADDR10" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B11" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR11">
+            <field Type="RW" name="CSR_PMPADDR11" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B12" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR12">
+            <field Type="RW" name="CSR_PMPADDR12" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B13" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR13">
+            <field Type="RW" name="CSR_PMPADDR13" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B14" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR14">
+            <field Type="RW" name="CSR_PMPADDR14" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B15" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR15">
+            <field Type="RW" name="CSR_PMPADDR15" offset="0" width="64">0x0</field>
+          </register>
+        </registers>
+      </pmp_h3>
+      <pmp_h4>
+        <registers>
+          <register address="0x000003A0" description="PMP configuration for 8 adress regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG0">
+            <field Type="RW" name="PMP0CFG" offset="0" width="8">0x9F</field>
+            <field Type="RW" name="PMP1CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP2CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP3CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP4CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP5CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP6CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP7CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003A2" description="PMP configuration for 8 address regions, bit 0 read, bit 1 write, bit 2 execute, bit 7 disable, bits 3,4 address format  (0x18 => NAPOT) " name="CSR_PMPCFG2">
+            <field Type="RW" name="PMP8CFG" offset="0" width="8">0x0</field>
+            <field Type="RW" name="PMP9CFG" offset="8" width="8">0x0</field>
+            <field Type="RW" name="PMP10CFG" offset="16" width="8">0x0</field>
+            <field Type="RW" name="PMP11CFG" offset="24" width="8">0x0</field>
+            <field Type="RW" name="PMP12CFG" offset="32" width="8">0x0</field>
+            <field Type="RW" name="PMP13CFG" offset="40" width="8">0x0</field>
+            <field Type="RW" name="PMP14CFG" offset="48" width="8">0x0</field>
+            <field Type="RW" name="PMP15CFG" offset="56" width="8">0x0</field>
+          </register>
+          <register address="0x000003B0" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR0">
+            <field Type="RW" name="CSR_PMPADDR0" offset="0" width="64">0xFFFFFFFFFFFFFFFF</field>
+          </register>
+          <register address="0x000003B1" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR1">
+            <field Type="RW" name="CSR_PMPADDR1" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B2" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR2">
+            <field Type="RW" name="CSR_PMPADDR2" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B3" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR3">
+            <field Type="RW" name="CSR_PMPADDR3" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B4" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR4">
+            <field Type="RW" name="CSR_PMPADDR4" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B5" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR5">
+            <field Type="RW" name="CSR_PMPADDR5" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B6" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR6">
+            <field Type="RW" name="CSR_PMPADDR6" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B7" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR7">
+            <field Type="RW" name="CSR_PMPADDR7" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B8" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR8">
+            <field Type="RW" name="CSR_PMPADDR8" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x000003B9" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR9">
+            <field Type="RW" name="CSR_PMPADDR9" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B10" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR10">
+            <field Type="RW" name="CSR_PMPADDR10" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B11" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR11">
+            <field Type="RW" name="CSR_PMPADDR11" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B12" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR12">
+            <field Type="RW" name="CSR_PMPADDR12" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B13" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR13">
+            <field Type="RW" name="CSR_PMPADDR13" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B14" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR14">
+            <field Type="RW" name="CSR_PMPADDR14" offset="0" width="64">0x0</field>
+          </register>
+          <register address="0x00003B15" description="PMP ADRESS and size, format determined  from bit 3 and 4 of configuration byte in CSR_PMPCFGx" name="CSR_PMPADDR15">
+            <field Type="RW" name="CSR_PMPADDR15" offset="0" width="64">0x0</field>
+          </register>
+        </registers>
+      </pmp_h4>
+      <mpu_fic0>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000064" description="pmp setup register, 64 bits" name="MPU_CFG_PMP8">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000072" description="pmp setup register, 64 bits" name="MPU_CFG_PMP9">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000080" description="pmp setup register, 64 bits" name="MPU_CFG_PMP10">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000088" description="pmp setup register, 64 bits" name="MPU_CFG_PMP11">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000096" description="pmp setup register, 64 bits" name="MPU_CFG_PMP12">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000104" description="pmp setup register, 64 bits" name="MPU_CFG_PMP13">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000112" description="pmp setup register, 64 bits" name="MPU_CFG_PMP14">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000120" description="pmp setup register, 64 bits" name="MPU_CFG_PMP15">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_fic0>
+      <mpu_fic1>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000064" description="pmp setup register, 64 bits" name="MPU_CFG_PMP8">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000072" description="pmp setup register, 64 bits" name="MPU_CFG_PMP9">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000080" description="pmp setup register, 64 bits" name="MPU_CFG_PMP10">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000088" description="pmp setup register, 64 bits" name="MPU_CFG_PMP11">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000096" description="pmp setup register, 64 bits" name="MPU_CFG_PMP12">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000104" description="pmp setup register, 64 bits" name="MPU_CFG_PMP13">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000112" description="pmp setup register, 64 bits" name="MPU_CFG_PMP14">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000120" description="pmp setup register, 64 bits" name="MPU_CFG_PMP15">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_fic1>
+      <mpu_fic2>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_fic2>
+      <mpu_crypto>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_crypto>
+      <mpu_gem0>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_gem0>
+      <mpu_gem1>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_gem1>
+      <mpu_usb>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_usb>
+      <mpu_mmc>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_mmc>
+      <mpu_scb>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000016" description="pmp setup register, 64 bits" name="MPU_CFG_PMP2">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000024" description="pmp setup register, 64 bits" name="MPU_CFG_PMP3">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000032" description="pmp setup register, 64 bits" name="MPU_CFG_PMP4">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000040" description="pmp setup register, 64 bits" name="MPU_CFG_PMP5">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000048" description="pmp setup register, 64 bits" name="MPU_CFG_PMP6">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000056" description="pmp setup register, 64 bits" name="MPU_CFG_PMP7">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_scb>
+      <mpu_trace>
+        <registers>
+          <register address="0x00000000" description="mpu setup register, 64 bits" name="MPU_CFG_PMP0">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+          <register address="0x00000008" description="mpu setup register, 64 bits" name="MPU_CFG_PMP1">
+            <field Type="RW" name="PMP" offset="0" width="38">0xFFFFFFFFF</field>
+            <field Type="RW" name="RESERVED" offset="38" width="18">0x0</field>
+            <field Type="RW" name="MODE" offset="56" width="8">0x1F</field>
+          </register>
+        </registers>
+      </mpu_trace>
+      <nvm_map>
+        <registers>
+          <register address="0" description="Page offset to start page of sNVM available to MSS. Each SNVM module may be stored in any of the following formats, Non-authenticated plaintext, Authenticated plaintext, Authenticated ciphertext. When the data is authenticated 236 bytes of storage per page is available.  When the data is not authenticated 252 bytes may be stored. (Note: Value in decimal)" name="SNVM_MSS_START_PAGE">
+            <field Type="RW" name="START_PAGE_OFFSET" offset="0" width="32">0</field>
+          </register>
+          <register address="0" description="Page offset to end page of sNVM available to MSS (Note: Value in decimal)" name="SNVM_MSS_END_PAGE">
+            <field Type="RW" name="END_PAGE_OFFSET" offset="0" width="32">220</field>
+          </register>
+          <register address="0" description="Page offset to start page of sNVM available to MSS (Note: Value in decimal)" name="ENVM_MSS_START_PAGE">
+            <field Type="RW" name="START_PAGE_OFFSET" offset="0" width="32">0</field>
+          </register>
+          <register address="0" description="Page offset to end page of sNVM available to MSS (Note: Value in decimal)" name="ENVM_MSS_END_PAGE">
+            <field Type="RW" name="END_PAGE_OFFSET" offset="0" width="32">511</field>
+          </register>
+        </registers>
+      </nvm_map>
+    </mss_memory_map>
+    <mss_io>
+      <io_mux>
+        <registers>
+          <register address="0x00000200" description="Selects whether the peripheral is connected to the Fabric or IOMUX structure." name="IOMUX0_CR">
+            <field Type="RW" name="SPI0_FABRIC" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SPI1_FABRIC" offset="1" width="1">0x0</field>
+            <field Type="RW" name="I2C0_FABRIC" offset="2" width="1">0x1</field>
+            <field Type="RW" name="I2C1_FABRIC" offset="3" width="1">0x1</field>
+            <field Type="RW" name="CAN0_FABRIC" offset="4" width="1">0x1</field>
+            <field Type="RW" name="CAN1_FABRIC" offset="5" width="1">0x0</field>
+            <field Type="RW" name="QSPI_FABRIC" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MMUART0_FABRIC" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MMUART1_FABRIC" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MMUART2_FABRIC" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MMUART3_FABRIC" offset="10" width="1">0x1</field>
+            <field Type="RW" name="MMUART4_FABRIC" offset="11" width="1">0x0</field>
+            <field Type="RW" name="MDIO0_FABRIC" offset="12" width="1">0x0</field>
+            <field Type="RW" name="MDIO1_FABRIC" offset="13" width="1">0x0</field>
+          </register>
+          <register address="0x00000204" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="IOMUX1_CR">
+            <field Type="RW" name="PAD0" offset="0" width="4">0x1</field>
+            <field Type="RW" name="PAD1" offset="4" width="4">0x1</field>
+            <field Type="RW" name="PAD2" offset="8" width="4">0x1</field>
+            <field Type="RW" name="PAD3" offset="12" width="4">0x1</field>
+            <field Type="RW" name="PAD4" offset="16" width="4">0x1</field>
+            <field Type="RW" name="PAD5" offset="20" width="4">0x1</field>
+            <field Type="RW" name="PAD6" offset="24" width="4">0x1</field>
+            <field Type="RW" name="PAD7" offset="28" width="4">0x1</field>
+          </register>
+          <register address="0x00000208" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="IOMUX2_CR">
+            <field Type="RW" name="PAD8" offset="0" width="4">0xF</field>
+            <field Type="RW" name="PAD9" offset="4" width="4">0xF</field>
+            <field Type="RW" name="PAD10" offset="8" width="4">0xF</field>
+            <field Type="RW" name="PAD11" offset="12" width="4">0xF</field>
+            <field Type="RW" name="PAD12" offset="16" width="4">0xF</field>
+            <field Type="RW" name="PAD13" offset="20" width="4">0xF</field>
+          </register>
+          <register address="0x0000020C" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="IOMUX3_CR">
+            <field Type="RW" name="PAD14" offset="0" width="4">0x4</field>
+            <field Type="RW" name="PAD15" offset="4" width="4">0x4</field>
+            <field Type="RW" name="PAD16" offset="8" width="4">0x4</field>
+            <field Type="RW" name="PAD17" offset="12" width="4">0x4</field>
+            <field Type="RW" name="PAD18" offset="16" width="4">0x4</field>
+            <field Type="RW" name="PAD19" offset="20" width="4">0x4</field>
+            <field Type="RW" name="PAD20" offset="24" width="4">0x4</field>
+            <field Type="RW" name="PAD21" offset="28" width="4">0x4</field>
+          </register>
+          <register address="0x00000210" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="IOMUX4_CR">
+            <field Type="RW" name="PAD22" offset="0" width="4">0x4</field>
+            <field Type="RW" name="PAD23" offset="4" width="4">0x4</field>
+            <field Type="RW" name="PAD24" offset="8" width="4">0x4</field>
+            <field Type="RW" name="PAD25" offset="12" width="4">0x4</field>
+            <field Type="RW" name="PAD26" offset="16" width="4">0xC</field>
+            <field Type="RW" name="PAD27" offset="20" width="4">0xC</field>
+            <field Type="RW" name="PAD28" offset="24" width="4">0x8</field>
+            <field Type="RW" name="PAD29" offset="28" width="4">0x8</field>
+          </register>
+          <register address="0x00000214" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="IOMUX5_CR">
+            <field Type="RW" name="PAD30" offset="0" width="4">0x3</field>
+            <field Type="RW" name="PAD31" offset="4" width="4">0x3</field>
+            <field Type="RW" name="PAD32" offset="8" width="4">0x3</field>
+            <field Type="RW" name="PAD33" offset="12" width="4">0x3</field>
+            <field Type="RW" name="PAD34" offset="16" width="4">0xB</field>
+            <field Type="RW" name="PAD35" offset="20" width="4">0xF</field>
+            <field Type="RW" name="PAD36" offset="24" width="4">0xF</field>
+            <field Type="RW" name="PAD37" offset="28" width="4">0xB</field>
+          </register>
+          <register address="0x00000218" description="Sets whether the MMC/SD Voltage select lines are inverted on entry to the IOMUX structure" name="IOMUX6_CR">
+            <field Type="RW" name="VLT_SEL" offset="0" width="1">0x0</field>
+            <field Type="RW" name="VLT_EN" offset="1" width="1">0x0</field>
+            <field Type="RW" name="VLT_CMD_DIR" offset="2" width="1">0x0</field>
+            <field Type="RW" name="VLT_DIR_0" offset="3" width="1">0x0</field>
+            <field Type="RW" name="VLT_DIR_1_3" offset="4" width="1">0x0</field>
+            <field Type="RW" name="SD_LED" offset="5" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_0" offset="6" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_1" offset="7" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_2" offset="8" width="1">0x0</field>
+          </register>
+          <register address="0x00000230" description="Configures the MSSIO block using SCB write" name="MSSIO_BANK4_CFG_CR">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x7</field>
+            <field Type="RW" name="RESERVED0" offset="6" width="2">0x00</field>
+            <field Type="RW" name="BANK_NCODE" offset="8" width="6">0x9</field>
+            <field Type="RW" name="RESERVED1" offset="14" width="2">0x0</field>
+            <field Type="RW" name="VS" offset="16" width="4">0x8</field>
+            <field Type="RW" name="RESERVED2" offset="20" width="12">0x0</field>
+          </register>
+          <register address="0x00000234" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_0_1_CR">
+            <field Type="RW" name="IO_CFG_0" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_1" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000238" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_2_3_CR">
+            <field Type="RW" name="IO_CFG_2" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_3" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x0000023C" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_4_5_CR">
+            <field Type="RW" name="IO_CFG_4" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_5" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000240" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_6_7_CR">
+            <field Type="RW" name="IO_CFG_6" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_7" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000244" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_8_9_CR">
+            <field Type="RW" name="IO_CFG_8" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_9" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000248" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_10_11_CR">
+            <field Type="RW" name="IO_CFG_10" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_11" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x0000024C" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK4_IO_CFG_12_13_CR">
+            <field Type="RW" name="IO_CFG_12" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_13" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000250" description="Configures the MSSIO block using SCB write" name="MSSIO_BANK2_CFG_CR">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x7</field>
+            <field Type="RW" name="RESERVED0" offset="6" width="2">0x00</field>
+            <field Type="RW" name="BANK_NCODE" offset="8" width="6">0x9</field>
+            <field Type="RW" name="RESERVED1" offset="14" width="2">0x0</field>
+            <field Type="RW" name="VS" offset="16" width="4">0x8</field>
+            <field Type="RW" name="RESERVED2" offset="20" width="12">0x0</field>
+          </register>
+          <register address="0x00000254" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_0_1_CR">
+            <field Type="RW" name="IO_CFG_0" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_1" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000258" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_2_3_CR">
+            <field Type="RW" name="IO_CFG_2" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_3" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x0000025C" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_4_5_CR">
+            <field Type="RW" name="IO_CFG_4" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_5" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000260" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_6_7_CR">
+            <field Type="RW" name="IO_CFG_6" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_7" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000264" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_8_9_CR">
+            <field Type="RW" name="IO_CFG_8" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_9" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000268" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_10_11_CR">
+            <field Type="RW" name="IO_CFG_10" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_11" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x0000026C" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_12_13_CR">
+            <field Type="RW" name="IO_CFG_12" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_13" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000270" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_14_15_CR">
+            <field Type="RW" name="IO_CFG_14" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_15" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000274" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_16_17_CR">
+            <field Type="RW" name="IO_CFG_16" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_17" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000278" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_18_19_CR">
+            <field Type="RW" name="IO_CFG_18" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_19" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x0000027C" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_20_21_CR">
+            <field Type="RW" name="IO_CFG_20" offset="0" width="16">0x0129</field>
+            <field Type="RW" name="IO_CFG_21" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000280" description="IO electrical configuration for MSSIO pad" name="MSSIO_BANK2_IO_CFG_22_23_CR">
+            <field Type="RW" name="IO_CFG_22" offset="0" width="16">0x0829</field>
+            <field Type="RW" name="IO_CFG_23" offset="16" width="16">0x0829</field>
+          </register>
+          <register address="0x00000278" description="default dpc values for MSSIO bank 2 " name="MSSIO_VB2_CFG">
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_0" offset="3" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_2" offset="5" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_3" offset="6" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_CLAMP" offset="7" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_ENHYST" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LOCKDN_EN" offset="9" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPD" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPU" offset="11" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_ATP_EN" offset="12" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_PERSIST_EN" offset="13" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_BYPASS_EN" offset="14" width="1">0x0</field>
+            <field Type="R" name="RESERVED" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x0000027C" description="default dpc values for MSSIO bank 4 " name="MSSIO_VB4_CFG">
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_0" offset="3" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_2" offset="5" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_3" offset="6" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_CLAMP" offset="7" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_ENHYST" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LOCKDN_EN" offset="9" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPD" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPU" offset="11" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_ATP_EN" offset="12" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_PERSIST_EN" offset="13" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_BYPASS_EN" offset="14" width="1">0x0</field>
+            <field Type="R" name="RESERVED" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x0000027C" description="Indicates if eMMC is configured for use (bit 0 == 1), If SD is configued for use (bit 1 == 1). Bit 2 indicates which one should be used by default on MSS embedded software startup ( bit2 == 0,  implies  default is eMMC, bit2 == 1,  implies  default is SD). The eMMC configuration is always defined in xml tag (io_mux, the SD configuration is always defined in xml tag (io_mux_alt). All other elements in the (o_mux) and (io_mux_alt) not releating to eMMC/SD differences should be the same values." name="MSSIO_CONFIGURATION_OPTIONS">
+            <field Type="RW" name="EMMC_CONFIGURED" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SD_CONFIGURED" offset="1" width="1">0x0</field>
+            <field Type="RW" name="DEFAULT_ON_START" offset="2" width="1">0x0</field>
+          </register>
+        </registers>
+      </io_mux>
+      <io_mux_alt>
+        <registers>
+          <register address="0x00000200" description="Selects whether the peripheral is connected to the Fabric or IOMUX structure." name="ALT_IOMUX0_CR">
+            <field Type="RW" name="SPI0_FABRIC" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SPI1_FABRIC" offset="1" width="1">0x0</field>
+            <field Type="RW" name="I2C0_FABRIC" offset="2" width="1">0x0</field>
+            <field Type="RW" name="I2C1_FABRIC" offset="3" width="1">0x0</field>
+            <field Type="RW" name="CAN0_FABRIC" offset="4" width="1">0x0</field>
+            <field Type="RW" name="CAN1_FABRIC" offset="5" width="1">0x0</field>
+            <field Type="RW" name="QSPI_FABRIC" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MMUART0_FABRIC" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MMUART1_FABRIC" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MMUART2_FABRIC" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MMUART3_FABRIC" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MMUART4_FABRIC" offset="11" width="1">0x0</field>
+            <field Type="RW" name="MDIO0_FABRIC" offset="12" width="1">0x0</field>
+            <field Type="RW" name="MDIO1_FABRIC" offset="13" width="1">0x0</field>
+          </register>
+          <register address="0x00000204" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="ALT_IOMUX1_CR">
+            <field Type="RW" name="PAD0" offset="0" width="4">0x0</field>
+            <field Type="RW" name="PAD1" offset="4" width="4">0x0</field>
+            <field Type="RW" name="PAD2" offset="8" width="4">0x0</field>
+            <field Type="RW" name="PAD3" offset="12" width="4">0x0</field>
+            <field Type="RW" name="PAD4" offset="16" width="4">0x0</field>
+            <field Type="RW" name="PAD5" offset="20" width="4">0x0</field>
+            <field Type="RW" name="PAD6" offset="24" width="4">0x0</field>
+            <field Type="RW" name="PAD7" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x00000208" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="ALT_IOMUX2_CR">
+            <field Type="RW" name="PAD8" offset="0" width="4">0x0</field>
+            <field Type="RW" name="PAD9" offset="4" width="4">0x0</field>
+            <field Type="RW" name="PAD10" offset="8" width="4">0x0</field>
+            <field Type="RW" name="PAD11" offset="12" width="4">0x0</field>
+            <field Type="RW" name="PAD12" offset="16" width="4">0x0</field>
+            <field Type="RW" name="PAD13" offset="20" width="4">0x0</field>
+          </register>
+          <register address="0x0000020C" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="ALT_IOMUX3_CR">
+            <field Type="RW" name="PAD14" offset="0" width="4">0x0</field>
+            <field Type="RW" name="PAD15" offset="4" width="4">0x0</field>
+            <field Type="RW" name="PAD16" offset="8" width="4">0x0</field>
+            <field Type="RW" name="PAD17" offset="12" width="4">0x0</field>
+            <field Type="RW" name="PAD18" offset="16" width="4">0x0</field>
+            <field Type="RW" name="PAD19" offset="20" width="4">0x0</field>
+            <field Type="RW" name="PAD20" offset="24" width="4">0x0</field>
+            <field Type="RW" name="PAD21" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x00000210" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="ALT_IOMUX4_CR">
+            <field Type="RW" name="PAD22" offset="0" width="4">0x0</field>
+            <field Type="RW" name="PAD23" offset="4" width="4">0x0</field>
+            <field Type="RW" name="PAD24" offset="8" width="4">0x0</field>
+            <field Type="RW" name="PAD25" offset="12" width="4">0x0</field>
+            <field Type="RW" name="PAD26" offset="16" width="4">0x0</field>
+            <field Type="RW" name="PAD27" offset="20" width="4">0x0</field>
+            <field Type="RW" name="PAD28" offset="24" width="4">0x0</field>
+            <field Type="RW" name="PAD29" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x00000214" description="Configures the IO Mux structure for each IO pad.  0  implies  SD/SDIO, 1 implies  EMMC, 2 implies QSPI, 3 implies SPI,4 implies USB,5 implies MMUART,6 implies I2C,7 implies CAN,8 implies MDIO,9 implies Miscellaneous,0xA implies Reserved (Equivalent to Tristate),0xB implies GPIO ,0xC implies Fabric-test,0xD implies Logic 0,0xE implies Logic 1, 0xF implies Tristate" name="ALT_IOMUX5_CR">
+            <field Type="RW" name="PAD30" offset="0" width="4">0x0</field>
+            <field Type="RW" name="PAD31" offset="4" width="4">0x0</field>
+            <field Type="RW" name="PAD32" offset="8" width="4">0x0</field>
+            <field Type="RW" name="PAD33" offset="12" width="4">0x0</field>
+            <field Type="RW" name="PAD34" offset="16" width="4">0x0</field>
+            <field Type="RW" name="PAD35" offset="20" width="4">0x0</field>
+            <field Type="RW" name="PAD36" offset="24" width="4">0x0</field>
+            <field Type="RW" name="PAD37" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x00000218" description="Sets whether the MMC/SD Voltage select lines are inverted on entry to the IOMUX structure" name="ALT_IOMUX6_CR">
+            <field Type="RW" name="VLT_SEL" offset="0" width="1">0x0</field>
+            <field Type="RW" name="VLT_EN" offset="1" width="1">0x0</field>
+            <field Type="RW" name="VLT_CMD_DIR" offset="2" width="1">0x0</field>
+            <field Type="RW" name="VLT_DIR_0" offset="3" width="1">0x0</field>
+            <field Type="RW" name="VLT_DIR_1_3" offset="4" width="1">0x0</field>
+            <field Type="RW" name="SD_LED" offset="5" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_0" offset="6" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_1" offset="7" width="1">0x0</field>
+            <field Type="RW" name="SD_VOLT_2" offset="8" width="1">0x0</field>
+          </register>
+          <register address="0x00000230" description="Configures the MSSIO block using SCB write" name="ALT_MSSIO_BANK4_CFG_CR">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x3F</field>
+            <field Type="RW" name="RESERVED0" offset="6" width="2">0x00</field>
+            <field Type="RW" name="BANK_NCODE" offset="8" width="6">0x3F</field>
+            <field Type="RW" name="RESERVED1" offset="14" width="2">0x0</field>
+            <field Type="RW" name="VS" offset="16" width="4">0x0</field>
+            <field Type="RW" name="RESERVED2" offset="20" width="12">0x0</field>
+          </register>
+          <register address="0x00000234" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_0_1_CR">
+            <field Type="RW" name="IO_CFG_0" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_1" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000238" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_2_3_CR">
+            <field Type="RW" name="IO_CFG_2" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_3" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x0000023C" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_4_5_CR">
+            <field Type="RW" name="IO_CFG_4" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_5" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000240" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_6_7_CR">
+            <field Type="RW" name="IO_CFG_6" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_7" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000244" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_8_9_CR">
+            <field Type="RW" name="IO_CFG_8" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_9" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000248" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_10_11_CR">
+            <field Type="RW" name="IO_CFG_10" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_11" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x0000024C" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK4_IO_CFG_12_13_CR">
+            <field Type="RW" name="IO_CFG_12" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_13" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000250" description="Configures the MSSIO block using SCB write" name="ALT_MSSIO_BANK2_CFG_CR">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x3F</field>
+            <field Type="RW" name="RESERVED0" offset="6" width="2">0x00</field>
+            <field Type="RW" name="BANK_NCODE" offset="8" width="6">0x3F</field>
+            <field Type="RW" name="RESERVED1" offset="14" width="2">0x0</field>
+            <field Type="RW" name="VS" offset="16" width="4">0x0</field>
+            <field Type="RW" name="RESERVED2" offset="20" width="12">0x0</field>
+          </register>
+          <register address="0x00000254" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_0_1_CR">
+            <field Type="RW" name="IO_CFG_0" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_1" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000258" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_2_3_CR">
+            <field Type="RW" name="IO_CFG_2" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_3" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x0000025C" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_4_5_CR">
+            <field Type="RW" name="IO_CFG_4" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_5" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000260" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_6_7_CR">
+            <field Type="RW" name="IO_CFG_6" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_7" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000264" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_8_9_CR">
+            <field Type="RW" name="IO_CFG_8" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_9" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000268" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_10_11_CR">
+            <field Type="RW" name="IO_CFG_10" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_11" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x0000026C" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_12_13_CR">
+            <field Type="RW" name="IO_CFG_12" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_13" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000270" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_14_15_CR">
+            <field Type="RW" name="IO_CFG_14" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_15" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000274" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_16_17_CR">
+            <field Type="RW" name="IO_CFG_16" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_17" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000278" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_18_19_CR">
+            <field Type="RW" name="IO_CFG_18" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_19" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x0000027C" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_20_21_CR">
+            <field Type="RW" name="IO_CFG_20" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_21" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000280" description="IO electrical configuration for MSSIO pad" name="ALT_MSSIO_BANK2_IO_CFG_22_23_CR">
+            <field Type="RW" name="IO_CFG_22" offset="0" width="16">0x0</field>
+            <field Type="RW" name="IO_CFG_23" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000278" description="default dpc values for MSSIO bank 2 " name="ALT_MSSIO_VB2_CFG">
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_0" offset="3" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_2" offset="5" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_3" offset="6" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_CLAMP" offset="7" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_ENHYST" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LOCKDN_EN" offset="9" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPD" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPU" offset="11" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_ATP_EN" offset="12" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_PERSIST_EN" offset="13" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_BYPASS_EN" offset="14" width="1">0x0</field>
+            <field Type="R" name="RESERVED" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x0000027C" description="default dpc values for MSSIO bank 4 " name="ALT_MSSIO_VB4_CFG">
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_IBUFMD_2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_0" offset="3" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_2" offset="5" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_DRV_3" offset="6" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_CLAMP" offset="7" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_ENHYST" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LOCKDN_EN" offset="9" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPD" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_WPU" offset="11" width="1">0x1</field>
+            <field Type="RW" name="DPC_IO_CFG_ATP_EN" offset="12" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_PERSIST_EN" offset="13" width="1">0x0</field>
+            <field Type="RW" name="DPC_IO_CFG_LP_BYPASS_EN" offset="14" width="1">0x0</field>
+            <field Type="R" name="RESERVED" offset="15" width="17">0x0</field>
+          </register>
+        </registers>
+      </io_mux_alt>
+      <hsio>
+        <registers>
+          <register address="0x00000000" description="User trim options- set option to 1 to use" name="TRIM_OPTIONS">
+            <field Type="" name="TRIM_DDR_OPTION" offset="0" width="1">0x0</field>
+            <field Type="" name="TRIM_SGMII_OPTION" offset="1" width="1">0x0</field>
+          </register>
+          <register address="0x00000000" description="Manual trim values" name="DDR_IOC_REG0">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x0</field>
+            <field Type="RW" name="BANK_NCODE" offset="6" width="6">0x0</field>
+          </register>
+          <register address="0x00000000" description="Manual trim values" name="SGMII_IOC_REG0">
+            <field Type="RW" name="BANK_PCODE" offset="0" width="6">0x0</field>
+            <field Type="RW" name="BANK_NCODE" offset="6" width="6">0x0</field>
+          </register>
+        </registers>
+      </hsio>
+    </mss_io>
+    <mss_sgmii>
+      <tip>
+        <registers>
+          <register address="0x00000004" description="SGMII mode control (SEU)" name="SGMII_MODE">
+            <field Type="RW" name="REG_PLL_EN" offset="0" width="1">0x1</field>
+            <field Type="RW" name="REG_DLL_EN" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_PVT_EN" offset="2" width="1">0x1</field>
+            <field Type="RW" name="REG_BC_VRGEN_EN" offset="3" width="1">0x1</field>
+            <field Type="RW" name="REG_TX0_EN" offset="4" width="1">0x1</field>
+            <field Type="RW" name="REG_RX0_EN" offset="5" width="1">0x1</field>
+            <field Type="RW" name="REG_TX1_EN" offset="6" width="1">0x1</field>
+            <field Type="RW" name="REG_RX1_EN" offset="7" width="1">0x1</field>
+            <field Type="RW" name="REG_DLL_LOCK_FLT" offset="8" width="2">0x2</field>
+            <field Type="RW" name="REG_DLL_ADJ_CODE" offset="10" width="4">0x9</field>
+            <field Type="RW" name="REG_CH0_CDR_RESET_B" offset="14" width="1">0x1</field>
+            <field Type="RW" name="REG_CH1_CDR_RESET_B" offset="15" width="1">0x1</field>
+            <field Type="RW" name="REG_BC_VRGEN" offset="16" width="6">0x00</field>
+            <field Type="RW" name="REG_CDR_MOVE_STEP" offset="22" width="1">0x1</field>
+            <field Type="RW" name="REG_REFCLK_EN_RDIFF" offset="23" width="1">0x1</field>
+            <field Type="RW" name="REG_BC_VS" offset="24" width="4">0x8</field>
+            <field Type="RW" name="REG_REFCLK_EN_UDRIVE_P" offset="28" width="1">0x0</field>
+            <field Type="RW" name="REG_REFCLK_EN_INS_HYST_P" offset="29" width="1">0x0</field>
+            <field Type="RW" name="REG_REFCLK_EN_UDRIVE_N" offset="30" width="1">0x0</field>
+            <field Type="RW" name="REG_REFCLK_EN_INS_HYST_N" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000008" description="PLL control register (SEU)" name="PLL_CNTL">
+            <field Type="RW" name="REG_PLL_POSTDIV" offset="0" width="7">0x1</field>
+            <field Type="RO" name="ARO_PLL0_LOCK" offset="7" width="1">
+            </field>
+            <field Type="RW" name="REG_PLL_RFDIV" offset="8" width="6">0x1</field>
+            <field Type="RW" name="REG_PLL_REG_RFCLK_SEL" offset="14" width="1">0x0</field>
+            <field Type="RW" name="REG_PLL_LP_REQUIRES_LOCK" offset="15" width="1">0x0</field>
+            <field Type="RW" name="REG_PLL_INTIN" offset="16" width="12">0x14</field>
+            <field Type="RW" name="REG_PLL_BWI" offset="28" width="2">0x0</field>
+            <field Type="RW" name="REG_PLL_BWP" offset="30" width="2">0x2</field>
+          </register>
+          <register address="0x0000000C" description="Channel0 control register" name="CH0_CNTL">
+            <field Type="RW" name="REG_TX0_WPU_P" offset="0" width="1">0x0</field>
+            <field Type="RW" name="REG_TX0_WPD_P" offset="1" width="1">0x0</field>
+            <field Type="RW" name="REG_TX0_SLEW_P" offset="2" width="2">0x0</field>
+            <field Type="RW" name="REG_TX0_DRV_P" offset="4" width="4">0x7</field>
+            <field Type="RW" name="REG_TX0_ODT_P" offset="8" width="4">0x7</field>
+            <field Type="RW" name="REG_TX0_ODT_STATIC_P" offset="12" width="3">0x7</field>
+            <field Type="RW" name="REG_RX0_TIM_LONG" offset="15" width="1">0x0</field>
+            <field Type="RW" name="REG_RX0_WPU_P" offset="16" width="1">0x0</field>
+            <field Type="RW" name="REG_RX0_WPD_P" offset="17" width="1">0x0</field>
+            <field Type="RW" name="REG_RX0_IBUFMD_P" offset="18" width="3">0x4</field>
+            <field Type="RW" name="REG_RX0_EYEWIDTH_P" offset="21" width="3">0x7</field>
+            <field Type="RW" name="REG_RX0_ODT_P" offset="24" width="4">0x7</field>
+            <field Type="RW" name="REG_RX0_ODT_STATIC_P" offset="28" width="3">0x3</field>
+            <field Type="RW" name="REG_RX0_EN_FLAG_N" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000010" description="Channel1 control register" name="CH1_CNTL">
+            <field Type="RW" name="REG_TX1_WPU_P" offset="0" width="1">0x0</field>
+            <field Type="RW" name="REG_TX1_WPD_P" offset="1" width="1">0x0</field>
+            <field Type="RW" name="REG_TX1_SLEW_P" offset="2" width="2">0x0</field>
+            <field Type="RW" name="REG_TX1_DRV_P" offset="4" width="4">0x7</field>
+            <field Type="RW" name="REG_TX1_ODT_P" offset="8" width="4">0x7</field>
+            <field Type="RW" name="REG_TX1_ODT_STATIC_P" offset="12" width="3">0x7</field>
+            <field Type="RW" name="REG_RX1_TIM_LONG" offset="15" width="1">0x0</field>
+            <field Type="RW" name="REG_RX1_WPU_P" offset="16" width="1">0x0</field>
+            <field Type="RW" name="REG_RX1_WPD_P" offset="17" width="1">0x0</field>
+            <field Type="RW" name="REG_RX1_IBUFMD_P" offset="18" width="3">0x4</field>
+            <field Type="RW" name="REG_RX1_EYEWIDTH_P" offset="21" width="3">0x7</field>
+            <field Type="RW" name="REG_RX1_ODT_P" offset="24" width="4">0x7</field>
+            <field Type="RW" name="REG_RX1_ODT_STATIC_P" offset="28" width="3">0x3</field>
+            <field Type="RW" name="REG_RX1_EN_FLAG_N" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000014" description="Recalibration control register" name="RECAL_CNTL">
+            <field Type="RW" name="REG_RECAL_DIFF_RANGE" offset="0" width="5">0x8</field>
+            <field Type="RW" name="REG_RECAL_START_EN" offset="5" width="1">0x0</field>
+            <field Type="RW" name="REG_PVT_CALIB_START" offset="6" width="1">0x1</field>
+            <field Type="RW" name="REG_PVT_CALIB_LOCK" offset="7" width="1">0x1</field>
+            <field Type="RW" name="REG_RECAL_UPD" offset="8" width="1">0x0</field>
+            <field Type="RW" name="BC_VRGEN_DIRECTION" offset="9" width="1">0x0</field>
+            <field Type="RW" name="BC_VRGEN_LOAD" offset="10" width="1">0x0</field>
+            <field Type="RW" name="BC_VRGEN_MOVE" offset="11" width="1">0x0</field>
+            <field Type="RW" name="REG_PVT_REG_CALIB_CLKDIV" offset="12" width="2">0x2</field>
+            <field Type="RW" name="REG_PVT_REG_CALIB_DIFFR_VSEL" offset="14" width="2">0x0</field>
+            <field Type="RO" name="SRO_DLL_90_CODE" offset="16" width="7">
+            </field>
+            <field Type="RO" name="SRO_DLL_LOCK" offset="23" width="1">
+            </field>
+            <field Type="RO" name="SRO_DLL_ST_CODE" offset="24" width="7">
+            </field>
+            <field Type="RO" name="SRO_RECAL_START" offset="31" width="1">
+            </field>
+          </register>
+          <register address="0x00000018" description="Clock input and routing control registers" name="CLK_CNTL">
+            <field Type="RW" name="REG_REFCLK_EN_TERM_P" offset="0" width="2">0x0</field>
+            <field Type="RW" name="REG_REFCLK_EN_RXMODE_P" offset="2" width="2">0x3</field>
+            <field Type="RW" name="REG_REFCLK_EN_TERM_N" offset="4" width="2">0x0</field>
+            <field Type="RW" name="REG_REFCLK_EN_RXMODE_N" offset="6" width="2">0x3</field>
+            <field Type="RW" name="REG_REFCLK_CLKBUF_EN_PULLUP" offset="8" width="1">0x0</field>
+            <field Type="RW" name="REG_CLKMUX_FCLK_SEL" offset="9" width="3">0x0</field>
+            <field Type="RW" name="REG_CLKMUX_PLL0_RFCLK0_SEL" offset="12" width="2">0x1</field>
+            <field Type="RW" name="REG_CLKMUX_PLL0_RFCLK1_SEL" offset="14" width="2">0x1</field>
+            <field Type="RW" name="REG_CLKMUX_SPARE0" offset="16" width="16">0xf000</field>
+          </register>
+          <register address="0x0000001C" description="Dynamic control registers" name="DYN_CNTL">
+            <field Type="RW" name="REG_PLL_DYNEN" offset="0" width="1">0x0</field>
+            <field Type="RW" name="REG_DLL_DYNEN" offset="1" width="1">0x0</field>
+            <field Type="RW" name="REG_PVT_DYNEN" offset="2" width="1">0x0</field>
+            <field Type="RW" name="REG_BC_DYNEN" offset="3" width="1">0x0</field>
+            <field Type="RW" name="REG_CLKMUX_DYNEN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="REG_LANE0_DYNEN" offset="5" width="1">0x0</field>
+            <field Type="RW" name="REG_LANE1_DYNEN" offset="6" width="1">0x0</field>
+            <field Type="RO" name="BC_VRGEN_OOR" offset="7" width="1">
+            </field>
+            <field Type="RW" name="REG_PLL_SOFT_RESET_PERIPH" offset="8" width="1">0x0</field>
+            <field Type="RW" name="REG_DLL_SOFT_RESET_PERIPH" offset="9" width="1">0x0</field>
+            <field Type="RW" name="REG_PVT_SOFT_RESET_PERIPH" offset="10" width="1">0x0</field>
+            <field Type="RW" name="REG_BC_SOFT_RESET_PERIPH" offset="11" width="1">0x0</field>
+            <field Type="RW" name="REG_CLKMUX_SOFT_RESET_PERIPH" offset="12" width="1">0x0</field>
+            <field Type="RW" name="REG_LANE0_SOFT_RESET_PERIPH" offset="13" width="1">0x0</field>
+            <field Type="RW" name="REG_LANE1_SOFT_RESET_PERIPH" offset="14" width="1">0x0</field>
+            <field Type="RO" name="PVT_CALIB_STATUS" offset="15" width="1">
+            </field>
+            <field Type="RO" name="ARO_PLL0_VCO0PH_SEL" offset="16" width="3">
+            </field>
+            <field Type="RO" name="ARO_PLL0_VCO1PH_SEL" offset="19" width="3">
+            </field>
+            <field Type="RO" name="ARO_PLL0_VCO2PH_SEL" offset="22" width="3">
+            </field>
+            <field Type="RO" name="ARO_PLL0_VCO3PH_SEL" offset="25" width="3">
+            </field>
+            <field Type="RO" name="ARO_REF_DIFFR" offset="28" width="4">
+            </field>
+          </register>
+          <register address="0x00000020" description="PVT calibrator status registers" name="PVT_STAT">
+            <field Type="RO" name="ARO_REF_PCODE" offset="0" width="6">
+            </field>
+            <field Type="RO" name="ARO_IOEN_BNK" offset="6" width="1">
+            </field>
+            <field Type="RO" name="ARO_IOEN_BNK_B" offset="7" width="1">
+            </field>
+            <field Type="RO" name="ARO_REF_NCODE" offset="8" width="6">
+            </field>
+            <field Type="RO" name="ARO_CALIB_STATUS" offset="14" width="1">
+            </field>
+            <field Type="RO" name="ARO_CALIB_STATUS_B" offset="15" width="1">
+            </field>
+            <field Type="RO" name="ARO_PCODE" offset="16" width="6">
+            </field>
+            <field Type="RO" name="ARO_CALIB_INTRPT" offset="22" width="1">
+            </field>
+            <field Type="RO" name="PVT_CALIB_INTRPT" offset="23" width="1">
+            </field>
+            <field Type="RO" name="ARO_NCODE" offset="24" width="6">
+            </field>
+            <field Type="RW" name="PVT_CALIB_LOCK" offset="30" width="1">0x0</field>
+            <field Type="RW" name="PVT_CALIB_START" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000024" description="Spare control register" name="SPARE_CNTL">
+            <field Type="RW" name="REG_SPARE" offset="0" width="32">0xFF000000</field>
+          </register>
+          <register address="0x00000028" description="Spare status register" name="SPARE_STAT">
+            <field Type="RO" name="SRO_SPARE" offset="0" width="32">
+            </field>
+          </register>
+        </registers>
+      </tip>
+    </mss_sgmii>
+    <mss_ddr>
+      <options>
+        <registers>
+          <register address="0" description="Tip config: Referenced receivers in the CA bus are turned on for CA training. These burn static power.(0x01 => turn off ; 0x00 => no action )" name="CA_BUS_RX_OFF_POST_TRAINING">
+            <field Type="RW" name="CA_BUS_RX_OFF_POST_TRAINING" offset="0" width="1">0x1</field>
+          </register>
+          <register address="4" description="Tip config: 1 => 1 rank, 3 => 2 ranks" name="USER_INPUT_PHY_RANKS_TO_TRAIN">
+            <field Type="RW" name="USER_INPUT_PHY_RANKS_TO_TRAIN" offset="0" width="2">0x1</field>
+          </register>
+          <register address="8" description="Tip config: Pick what trainings we want performed by the TIP, default is 0x1F" name="TRAINING_SKIP_SETTING">
+            <field Type="RW" name="SKIP_BCLKSCLK_TIP_TRAINING" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SKIP_ADDCMD_TIP_TRAINING" offset="1" width="1">0x0</field>
+            <field Type="RW" name="SKIP_WRLVL_TIP_TRAINING" offset="2" width="1">0x0</field>
+            <field Type="RW" name="SKIP_RDGATE_TIP_TRAINING" offset="3" width="1">0x0</field>
+            <field Type="RW" name="SKIP_DQ_DQS_OPT_TIP_TRAINING" offset="4" width="1">0x0</field>
+          </register>
+          <register address="C" description="Tip config: default: 0x2,0x4,0x0,0x1F,0x1F" name="TIP_CFG_PARAMS">
+            <field Type="RW" name="ADDCMD_OFFSET" offset="0" width="3">0x3</field>
+            <field Type="RW" name="BCKLSCLK_OFFSET" offset="3" width="3">0x0</field>
+            <field Type="RW" name="WRCALIB_WRITE_COUNT" offset="6" width="7"> 0x0</field>
+            <field Type="RW" name="READ_GATE_MIN_READS" offset="13" width="8">0x7F</field>
+            <field Type="RW" name="ADDRCMD_WAIT_COUNT" offset="22" width="8"> 0x1F</field>
+          </register>
+          <register address="10" description="in simulation we need to set this to 2, for hardware it will be dependent on the trace lengths" name="TIP_CONFIG_PARAMS_BCLK_VCOPHS_OFFSET">
+            <field Type="RW" name="TIP_CONFIG_PARAMS_BCLK_VCOPHS" offset="0" width="32">0x02</field>
+          </register>
+        </registers>
+      </options>
+      <io_bank>
+        <registers>
+          <register address="0x00000004" description="DPC Bits Register" name="DPC_BITS">
+            <field Type="RW" name="DPC_VS" offset="0" width="4">0x3</field>
+            <field Type="RW" name="DPC_VRGEN_H" offset="4" width="6">0x16</field>
+            <field Type="RW" name="DPC_VRGEN_EN_H" offset="10" width="1">0x1</field>
+            <field Type="RW" name="DPC_MOVE_EN_H" offset="11" width="1">0x0</field>
+            <field Type="RW" name="DPC_VRGEN_V" offset="12" width="6">0xE</field>
+            <field Type="RW" name="DPC_VRGEN_EN_V" offset="18" width="1">0x1</field>
+            <field Type="RW" name="DPC_MOVE_EN_V" offset="19" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE01" offset="20" width="12">0x0</field>
+          </register>
+          <register address="0x00000008" description="Need to be set by software in all modes but OFF mode. Decoding options should follow ODT_STR table, depends on drive STR setting" name="RPC_ODT_DQ">
+            <field Type="RW" name="RPC_ODT_DQ" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00000012" description="Need to be set by software in all modes but OFF mode. Decoding options should follow ODT_STR table, depends on drive STR setting" name="RPC_ODT_DQS">
+            <field Type="RW" name="RPC_ODT_DQS" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00000016" description="Need to be set by software in all modes but OFF mode. Decoding options should follow ODT_STR table, depends on drive STR setting" name="RPC_ODT_ADDCMD">
+            <field Type="RW" name="RPC_ODT_ADDCMD" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00000020" description="Need to be set by software in all modes but OFF mode. Decoding options should follow ODT_STR table, depends on drive STR setting" name="RPC_ODT_CLK">
+            <field Type="RW" name="RPC_ODT_CLK" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00000024" description="0x2000 73A8  (rpc10_ODT)" name="RPC_ODT_STATIC_DQ">
+            <field Type="RW" name="RPC_ODT_STATIC_DQ" offset="0" width="32">0x6</field>
+          </register>
+          <register address="0x00000028" description="0x2000 73AC   (rpc11_ODT)" name="RPC_ODT_STATIC_DQS">
+            <field Type="RW" name="RPC_ODT_STATIC_DQS" offset="0" width="32">0x6</field>
+          </register>
+          <register address="0x00000032" description="0x2000 739C  (rpc7_ODT)" name="RPC_ODT_STATIC_ADDCMD">
+            <field Type="RW" name="RPC_ODT_STATIC_ADDCMD" offset="0" width="32">0x7</field>
+          </register>
+          <register address="0x00000036" description="0x2000 73A4  (rpc9_ODT)" name="RPC_ODT_STATIC_CLKP">
+            <field Type="RW" name="RPC_ODT_STATIC_CLKP" offset="0" width="32">0x7</field>
+          </register>
+          <register address="0x00000040" description="0x2000 73A0  (rpc8_ODT)" name="RPC_ODT_STATIC_CLKN">
+            <field Type="RW" name="RPC_ODT_STATIC_CLKN" offset="0" width="32">0x7</field>
+          </register>
+          <register address="0x00000044" description="0x2000 757C  (rpc95)" name="RPC_IBUFMD_ADDCMD">
+            <field Type="RW" name="RPC_IBUFMD_ADDCMD" offset="0" width="32">0x3</field>
+          </register>
+          <register address="0x00000048" description="0x2000 7580   (rpc96)" name="RPC_IBUFMD_CLK">
+            <field Type="RW" name="RPC_IBUFMD_CLK" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x00000052" description="0x2000 7584  (rpc97)" name="RPC_IBUFMD_DQ">
+            <field Type="RW" name="RPC_IBUFMD_DQ" offset="0" width="32">0x3</field>
+          </register>
+          <register address="0x00000056" description="0x2000 7588 (rpc98)" name="RPC_IBUFMD_DQS">
+            <field Type="RW" name="RPC_IBUFMD_DQS" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x00000060" description="bits 15:14 connect to pc_ibufmx DQ/DQS/DM bits 13:12 connect to pc_ibufmx CA/CK Check at ioa pc bit" name="RPC_SPARE0_DQ">
+            <field Type="RW" name="RPC_SPARE0_DQ" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_ADDCMD0_OVRT9">
+            <field Type="RW" name="MSS_DDR_CK0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CK_N0" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A0" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A1" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A2" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A3" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A4" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A5" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A6" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A7" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A8" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A9" offset="11" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_ADDCMD1_OVRT10">
+            <field Type="RW" name="MSS_DDR_CK1" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CK_N1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A10" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A11" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A12" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A13" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A14" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A15" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A16" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR3_WE_N" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BA0" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BA1" offset="11" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5. " name="RPC_EN_ADDCMD2_OVRT11">
+            <field Type="RW" name="MSS_DDR_RAM_RST_N" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BG0" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BG1" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CS0" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CKE0" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_ODT0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CS1" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CKE1" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ODT1" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ACT_N" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_PARITY" offset="10" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ALERT_N" offset="11" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_DATA0_OVRT12">
+            <field Type="RW" name="MSS_DDR_DQ0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P0" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ4" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ5" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ6" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ7" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM0" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_DATA1_OVRT13">
+            <field Type="RW" name="MSS_DDR_DQ8" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ9" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ10" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ11" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N1" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ12" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ13" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ14" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ15" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM1" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_DATA2_OVRT14">
+            <field Type="RW" name="MSS_DDR_DQ16" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ17" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ18" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ19" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P2" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N2" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ20" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ21" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ22" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ23" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM2" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_DATA3_OVRT15">
+            <field Type="RW" name="MSS_DDR_DQ24" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ25" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ26" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ27" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P3" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N3" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ28" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ29" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ30" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ31" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM3" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Overrides the I/O, used to disable specific DDR I/0. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC_EN_ECC_OVRT16">
+            <field Type="RW" name="MSS_DDR_DQ32" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ33" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ34" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ35" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P4" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N4" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM4" offset="6" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC235_WPD_ADD_CMD0">
+            <field Type="RW" name="MSS_DDR_CK0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CK_N0" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A0" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A1" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A2" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A3" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A4" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A5" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A6" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A7" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A8" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A9" offset="11" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC236_WPD_ADD_CMD1">
+            <field Type="RW" name="MSS_DDR_CK1" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CK_N1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A10" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A11" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A12" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A13" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A14" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A15" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_A16" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR3_WE_N" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BA0" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BA1" offset="11" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5. Note: For LPDDR4 need to over-ride MSS_DDR_ODT0 and MSS_DDR_ODT1 and eanble PU  i.e. (set OVR_EN ==1 , wpu == 0 , wpd == 1 )" name="RPC237_WPD_ADD_CMD2">
+            <field Type="RW" name="MSS_DDR_RAM_RST_N" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BG0" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_BG1" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CS0" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CKE0" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_ODT0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CS1" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_CKE1" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_ODT1" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_ACT_N" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_PARITY" offset="10" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_ALERT_N" offset="11" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC238_WPD_DATA0">
+            <field Type="RW" name="MSS_DDR_DQ0" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ1" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ2" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ3" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P0" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N0" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ4" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ5" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ6" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ7" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM0" offset="10" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC239_WPD_DATA1">
+            <field Type="RW" name="MSS_DDR_DQ8" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ9" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ10" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ11" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P1" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N1" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ12" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ13" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ14" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ15" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM1" offset="10" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC240_WPD_DATA2">
+            <field Type="RW" name="MSS_DDR_DQ16" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ17" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ18" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ19" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P2" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N2" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ20" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ21" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ22" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ23" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM2" offset="10" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC241_WPD_DATA3">
+            <field Type="RW" name="MSS_DDR_DQ24" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ25" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ26" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ27" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P3" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N3" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ28" offset="6" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ29" offset="7" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ30" offset="8" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ31" offset="9" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM3" offset="10" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-downs when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC242_WPD_ECC">
+            <field Type="RW" name="MSS_DDR_DQ32" offset="0" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ33" offset="1" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ34" offset="2" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQ35" offset="3" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_P4" offset="4" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DQS_N4" offset="5" width="1">0x0</field>
+            <field Type="RW" name="MSS_DDR_DM4" offset="6" width="1">0x0</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC243_WPU_ADD_CMD0">
+            <field Type="RW" name="MSS_DDR_CK0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CK_N0" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A0" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A1" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A2" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A3" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A4" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A5" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A6" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A7" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A8" offset="10" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A9" offset="11" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC244_WPU_ADD_CMD1">
+            <field Type="RW" name="MSS_DDR_CK1" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CK_N1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A10" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A11" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A12" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A13" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A14" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A15" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_A16" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR3_WE_N" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_BA0" offset="10" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_BA1" offset="11" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC245_WPU_ADD_CMD2">
+            <field Type="RW" name="MSS_DDR_RAM_RST_N" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_BG0" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_BG1" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CS0" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CKE0" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ODT0" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CS1" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_CKE1" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ODT1" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ACT_N" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_PARITY" offset="10" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_ALERT_N" offset="11" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC246_WPU_DATA0">
+            <field Type="RW" name="MSS_DDR_DQ0" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ1" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ2" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ3" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_P0" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_N0" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ4" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ5" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ6" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ7" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DM0" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC247_WPU_DATA1">
+            <field Type="RW" name="MSS_DDR_DQ8" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ9" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ10" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ11" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_P1" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_N1" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ12" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ13" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ14" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ15" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DM1" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC248_WPU_DATA2">
+            <field Type="RW" name="MSS_DDR_DQ16" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ17" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ18" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ19" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_P2" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_N2" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ20" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ21" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ22" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ23" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DM2" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC249_WPU_DATA3">
+            <field Type="RW" name="MSS_DDR_DQ24" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ25" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ26" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ27" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_P3" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_N3" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ28" offset="6" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ29" offset="7" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ30" offset="8" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ31" offset="9" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DM3" offset="10" width="1">0x1</field>
+          </register>
+          <register address="0x00000064" description="Sets pull-ups when override enabled. Each bit corresponding to an IO in corresponding IOG lane, starting from p_pair0 to n_pair5." name="RPC250_WPU_ECC">
+            <field Type="RW" name="MSS_DDR_DQ32" offset="0" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ33" offset="1" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ34" offset="2" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQ35" offset="3" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_P4" offset="4" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DQS_N4" offset="5" width="1">0x1</field>
+            <field Type="RW" name="MSS_DDR_DM4" offset="6" width="1">0x1</field>
+          </register>
+        </registers>
+      </io_bank>
+      <mode>
+        <registers>
+          <register address="0x00000004" description="DDRPHY MODE (binary)- 000 ddr3, 001 ddr33L, 010 ddr4, 011 LPDDR3, 100 LPDDR4, 111 OFF_MODE" name="DDRPHY_MODE">
+            <field Type="RW" name="DDRMODE" offset="0" width="3">0x2</field>
+            <field Type="RW" name="ECC" offset="3" width="1">0x1</field>
+            <field Type="RW" name="CRC" offset="4" width="1">0x0</field>
+            <field Type="RW" name="BUS_WIDTH" offset="5" width="3">0x1</field>
+            <field Type="RW" name="DMI_DBI" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DQ_DRIVE" offset="9" width="2">0x0</field>
+            <field Type="RW" name="DQS_DRIVE" offset="11" width="2">0x0</field>
+            <field Type="RW" name="ADD_CMD_DRIVE" offset="13" width="2">0x1</field>
+            <field Type="RW" name="CLOCK_OUT_DRIVE" offset="15" width="2">0x0</field>
+            <field Type="RW" name="DQ_TERMINATION" offset="17" width="2">0x0</field>
+            <field Type="RW" name="DQS_TERMINATION" offset="19" width="2">0x0</field>
+            <field Type="RW" name="ADD_CMD_INPUT_PIN_TERMINATION" offset="21" width="2">0x0</field>
+            <field Type="RW" name="PRESET_ODT_CLK" offset="23" width="2">0x0</field>
+            <field Type="RW" name="POWER_DOWN" offset="25" width="1">0x0</field>
+            <field Type="RW" name="RANK" offset="26" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVED" offset="27" width="5">0x0</field>
+          </register>
+          <register address="0x00000008" description="number of lanes used for data-  does not include ECC, infer from mode register" name="DATA_LANES_USED">
+            <field Type="RW" name="DATA_LANES" offset="0" width="3">0x5</field>
+          </register>
+        </registers>
+      </mode>
+      <off_mode>
+        <registers>
+          <register address="0x00000004" description="DDRPHY MODE Register, ddr off" name="DDRPHY_MODE_OFF">
+            <field Type="RW" name="DDRMODE" offset="0" width="3">0x0</field>
+            <field Type="RW" name="ECC" offset="3" width="1">0x0</field>
+            <field Type="RW" name="CRC" offset="4" width="1">0x0</field>
+            <field Type="RW" name="BUS_WIDTH" offset="5" width="3">0x0</field>
+            <field Type="RW" name="DMI_DBI" offset="8" width="1">0x0</field>
+            <field Type="RW" name="DQ_DRIVE" offset="9" width="2">0x0</field>
+            <field Type="RW" name="DQS_DRIVE" offset="11" width="2">0x0</field>
+            <field Type="RW" name="ADD_CMD_DRIVE" offset="13" width="2">0x0</field>
+            <field Type="RW" name="CLOCK_OUT_DRIVE" offset="15" width="2">0x0</field>
+            <field Type="RW" name="DQ_TERMINATION" offset="17" width="2">0x0</field>
+            <field Type="RW" name="DQS_TERMINATION" offset="19" width="2">0x0</field>
+            <field Type="RW" name="ADD_CMD_INPUT_PIN_TERMINATION" offset="21" width="2">0x0</field>
+            <field Type="RW" name="PRESET_ODT_CLK" offset="23" width="2">0x0</field>
+            <field Type="RW" name="POWER_DOWN" offset="25" width="1">0x0</field>
+            <field Type="RW" name="RANK" offset="26" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVED" offset="27" width="5">0x0</field>
+          </register>
+          <register address="0x00000004" description="DPC Bits Register off mode" name="DPC_BITS_OFF_MODE">
+            <field Type="RW" name="DPC_VS" offset="0" width="4">0x0</field>
+            <field Type="RW" name="DPC_VRGEN_H" offset="4" width="6">0x0</field>
+            <field Type="RW" name="DPC_VRGEN_EN_H" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DPC_MOVE_EN_H" offset="11" width="1">0x0</field>
+            <field Type="RW" name="DPC_VRGEN_V" offset="12" width="6">0x0</field>
+            <field Type="RW" name="DPC_VRGEN_EN_V" offset="18" width="1">0x0</field>
+            <field Type="RW" name="DPC_MOVE_EN_V" offset="19" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE01" offset="20" width="12">0x0</field>
+          </register>
+        </registers>
+      </off_mode>
+      <segs>
+        <registers>
+          <register address="0x00000000" description="Cached access at 0x00_8000_0000 (-0x80+0x00) " name="SEG0_0">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x7F80</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000004" description="Cached access at 0x10_0000_000" name="SEG0_1">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x7030</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000008" description="not used" name="SEG0_2">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000012" description="not used" name="SEG0_3">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000016" description="not used" name="SEG0_4">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000020" description="not used" name="SEG0_5">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="6">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000024" description="not used" name="SEG0_6">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000028" description="not used" name="SEG0_7">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000000" description="not used" name="SEG1_0">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000004" description="not used" name="SEG1_1">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000008" description="Non-Cached access at 0x00_c000_0000" name="SEG1_2">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x7FB0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000012" description="Non-Cached access at 0x14_0000_0000" name="SEG1_3">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000016" description="Non-Cached WCB access at 0x00_d000_0000" name="SEG1_4">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x7FA0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000020" description="Non-Cached WCB  0x18_0000_0000" name="SEG1_5">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="6">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x1</field>
+          </register>
+          <register address="0x00000024" description="Trace - Trace not in use here so can be left as 0" name="SEG1_6">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000028" description="not used" name="SEG1_7">
+            <field Type="RW" name="ADDRESS_OFFSET" offset="0" width="15">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="16">0x0</field>
+            <field Type="RW" name="LOCKED" offset="31" width="1">0x0</field>
+          </register>
+        </registers>
+      </segs>
+      <ddrc>
+        <registers>
+          <register address="0x00002400" description="IP Blk = ADDR_MAP Access=RW " name="CFG_MANUAL_ADDRESS_MAP">
+            <field Type="RW" name="CFG_MANUAL_ADDRESS_MAP" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00002404" description="IP Blk = ADDR_MAP Access=RW " name="CFG_CHIPADDR_MAP">
+            <field Type="RW" name="CFG_CHIPADDR_MAP" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002408" description="IP Blk = ADDR_MAP Access=RW " name="CFG_CIDADDR_MAP">
+            <field Type="RW" name="CFG_CIDADDR_MAP" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000240C" description="IP Blk = ADDR_MAP Access=RW " name="CFG_MB_AUTOPCH_COL_BIT_POS_LOW">
+            <field Type="RW" name="CFG_MB_AUTOPCH_COL_BIT_POS_LOW" offset="0" width="32">0x00000004</field>
+          </register>
+          <register address="0x00002410" description="IP Blk = ADDR_MAP Access=RW " name="CFG_MB_AUTOPCH_COL_BIT_POS_HIGH">
+            <field Type="RW" name="CFG_MB_AUTOPCH_COL_BIT_POS_HIGH" offset="0" width="32">0x0000000A</field>
+          </register>
+          <register address="0x00002414" description="IP Blk = ADDR_MAP Access=RW " name="CFG_BANKADDR_MAP_0">
+            <field Type="RW" name="CFG_BANKADDR_MAP_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002418" description="IP Blk = ADDR_MAP Access=RW " name="CFG_BANKADDR_MAP_1">
+            <field Type="RW" name="CFG_BANKADDR_MAP_1" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000241C" description="IP Blk = ADDR_MAP Access=RW " name="CFG_ROWADDR_MAP_0">
+            <field Type="RW" name="CFG_ROWADDR_MAP_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002420" description="IP Blk = ADDR_MAP Access=RW " name="CFG_ROWADDR_MAP_1">
+            <field Type="RW" name="CFG_ROWADDR_MAP_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002424" description="IP Blk = ADDR_MAP Access=RW " name="CFG_ROWADDR_MAP_2">
+            <field Type="RW" name="CFG_ROWADDR_MAP_2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002428" description="IP Blk = ADDR_MAP Access=RW " name="CFG_ROWADDR_MAP_3">
+            <field Type="RW" name="CFG_ROWADDR_MAP_3" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000242C" description="IP Blk = ADDR_MAP Access=RW " name="CFG_COLADDR_MAP_0">
+            <field Type="RW" name="CFG_COLADDR_MAP_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002430" description="IP Blk = ADDR_MAP Access=RW " name="CFG_COLADDR_MAP_1">
+            <field Type="RW" name="CFG_COLADDR_MAP_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002434" description="IP Blk = ADDR_MAP Access=RW " name="CFG_COLADDR_MAP_2">
+            <field Type="RW" name="CFG_COLADDR_MAP_2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002800" description="IP Blk = MC_BASE3 Access=RW " name="CFG_VRCG_ENABLE">
+            <field Type="RW" name="CFG_VRCG_ENABLE" offset="0" width="32">0x00000140</field>
+          </register>
+          <register address="0x00002804" description="IP Blk = MC_BASE3 Access=RW " name="CFG_VRCG_DISABLE">
+            <field Type="RW" name="CFG_VRCG_DISABLE" offset="0" width="32">0x000000A0</field>
+          </register>
+          <register address="0x00002808" description="IP Blk = MC_BASE3 Access=RW " name="CFG_WRITE_LATENCY_SET">
+            <field Type="RW" name="CFG_WRITE_LATENCY_SET" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000280C" description="IP Blk = MC_BASE3 Access=RW " name="CFG_THERMAL_OFFSET">
+            <field Type="RW" name="CFG_THERMAL_OFFSET" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002810" description="IP Blk = MC_BASE3 Access=RW " name="CFG_SOC_ODT">
+            <field Type="RW" name="CFG_SOC_ODT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002814" description="IP Blk = MC_BASE3 Access=RW " name="CFG_ODTE_CK">
+            <field Type="RW" name="CFG_ODTE_CK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002818" description="IP Blk = MC_BASE3 Access=RW " name="CFG_ODTE_CS">
+            <field Type="RW" name="CFG_ODTE_CS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000281C" description="IP Blk = MC_BASE3 Access=RW " name="CFG_ODTD_CA">
+            <field Type="RW" name="CFG_ODTD_CA" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002820" description="IP Blk = MC_BASE3 Access=RW " name="CFG_LPDDR4_FSP_OP">
+            <field Type="RW" name="CFG_LPDDR4_FSP_OP" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00002824" description="IP Blk = MC_BASE3 Access=RW " name="CFG_GENERATE_REFRESH_ON_SRX">
+            <field Type="RW" name="CFG_GENERATE_REFRESH_ON_SRX" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00002828" description="IP Blk = MC_BASE3 Access=RW " name="CFG_DBI_CL">
+            <field Type="RW" name="CFG_DBI_CL" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x0000282C" description="IP Blk = MC_BASE3 Access=RW " name="CFG_NON_DBI_CL">
+            <field Type="RW" name="CFG_NON_DBI_CL" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x00002830" description="IP Blk = MC_BASE3 Access=RW " name="INIT_FORCE_WRITE_DATA_0">
+            <field Type="RW" name="INIT_FORCE_WRITE_DATA_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C00" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WRITE_CRC">
+            <field Type="RW" name="CFG_WRITE_CRC" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C04" description="IP Blk = MC_BASE1 Access=RW " name="CFG_MPR_READ_FORMAT">
+            <field Type="RW" name="CFG_MPR_READ_FORMAT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C08" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WR_CMD_LAT_CRC_DM">
+            <field Type="RW" name="CFG_WR_CMD_LAT_CRC_DM" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C0C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_FINE_GRAN_REF_MODE">
+            <field Type="RW" name="CFG_FINE_GRAN_REF_MODE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C10" description="IP Blk = MC_BASE1 Access=RW " name="CFG_TEMP_SENSOR_READOUT">
+            <field Type="RW" name="CFG_TEMP_SENSOR_READOUT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C14" description="IP Blk = MC_BASE1 Access=RW " name="CFG_PER_DRAM_ADDR_EN">
+            <field Type="RW" name="CFG_PER_DRAM_ADDR_EN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C18" description="IP Blk = MC_BASE1 Access=RW " name="CFG_GEARDOWN_MODE">
+            <field Type="RW" name="CFG_GEARDOWN_MODE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C1C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WR_PREAMBLE">
+            <field Type="RW" name="CFG_WR_PREAMBLE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C20" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RD_PREAMBLE">
+            <field Type="RW" name="CFG_RD_PREAMBLE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C24" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RD_PREAMB_TRN_MODE">
+            <field Type="RW" name="CFG_RD_PREAMB_TRN_MODE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C28" description="IP Blk = MC_BASE1 Access=RW " name="CFG_SR_ABORT">
+            <field Type="RW" name="CFG_SR_ABORT" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C2C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CS_TO_CMDADDR_LATENCY">
+            <field Type="RW" name="CFG_CS_TO_CMDADDR_LATENCY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C30" description="IP Blk = MC_BASE1 Access=RW " name="CFG_INT_VREF_MON">
+            <field Type="RW" name="CFG_INT_VREF_MON" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C34" description="IP Blk = MC_BASE1 Access=RW " name="CFG_TEMP_CTRL_REF_MODE">
+            <field Type="RW" name="CFG_TEMP_CTRL_REF_MODE" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00003C38" description="IP Blk = MC_BASE1 Access=RW " name="CFG_TEMP_CTRL_REF_RANGE">
+            <field Type="RW" name="CFG_TEMP_CTRL_REF_RANGE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C3C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_MAX_PWR_DOWN_MODE">
+            <field Type="RW" name="CFG_MAX_PWR_DOWN_MODE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C40" description="IP Blk = MC_BASE1 Access=RW " name="CFG_READ_DBI">
+            <field Type="RW" name="CFG_READ_DBI" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C44" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WRITE_DBI">
+            <field Type="RW" name="CFG_WRITE_DBI" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C48" description="IP Blk = MC_BASE1 Access=RW " name="CFG_DATA_MASK">
+            <field Type="RW" name="CFG_DATA_MASK" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C4C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CA_PARITY_PERSIST_ERR">
+            <field Type="RW" name="CFG_CA_PARITY_PERSIST_ERR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C50" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RTT_PARK">
+            <field Type="RW" name="CFG_RTT_PARK" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C54" description="IP Blk = MC_BASE1 Access=RW " name="CFG_ODT_INBUF_4_PD">
+            <field Type="RW" name="CFG_ODT_INBUF_4_PD" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00003C58" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CA_PARITY_ERR_STATUS">
+            <field Type="RW" name="CFG_CA_PARITY_ERR_STATUS" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C5C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CRC_ERROR_CLEAR">
+            <field Type="RW" name="CFG_CRC_ERROR_CLEAR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003C60" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CA_PARITY_LATENCY">
+            <field Type="RW" name="CFG_CA_PARITY_LATENCY" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C64" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CCD_S">
+            <field Type="RW" name="CFG_CCD_S" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x00003C68" description="IP Blk = MC_BASE1 Access=RW " name="CFG_CCD_L">
+            <field Type="RW" name="CFG_CCD_L" offset="0" width="32">0x5</field>
+          </register>
+          <register address="0x00003C6C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_VREFDQ_TRN_ENABLE">
+            <field Type="RW" name="CFG_VREFDQ_TRN_ENABLE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C70" description="IP Blk = MC_BASE1 Access=RW " name="CFG_VREFDQ_TRN_RANGE">
+            <field Type="RW" name="CFG_VREFDQ_TRN_RANGE" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00003C74" description="IP Blk = MC_BASE1 Access=RW " name="CFG_VREFDQ_TRN_VALUE">
+            <field Type="RW" name="CFG_VREFDQ_TRN_VALUE" offset="0" width="32">0x1E</field>
+          </register>
+          <register address="0x00003C78" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RRD_S">
+            <field Type="RW" name="CFG_RRD_S" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x00003C7C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RRD_L">
+            <field Type="RW" name="CFG_RRD_L" offset="0" width="32">0x5</field>
+          </register>
+          <register address="0x00003C80" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WTR_S">
+            <field Type="RW" name="CFG_WTR_S" offset="0" width="32">0x3</field>
+          </register>
+          <register address="0x00003C84" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WTR_L">
+            <field Type="RW" name="CFG_WTR_L" offset="0" width="32">0x6</field>
+          </register>
+          <register address="0x00003C88" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WTR_S_CRC_DM">
+            <field Type="RW" name="CFG_WTR_S_CRC_DM" offset="0" width="32">0x8</field>
+          </register>
+          <register address="0x00003C8C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WTR_L_CRC_DM">
+            <field Type="RW" name="CFG_WTR_L_CRC_DM" offset="0" width="32">0xB</field>
+          </register>
+          <register address="0x00003C90" description="IP Blk = MC_BASE1 Access=RW " name="CFG_WR_CRC_DM">
+            <field Type="RW" name="CFG_WR_CRC_DM" offset="0" width="32">0x11</field>
+          </register>
+          <register address="0x00003C94" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC1">
+            <field Type="RW" name="CFG_RFC1" offset="0" width="32">0x118</field>
+          </register>
+          <register address="0x00003C98" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC2">
+            <field Type="RW" name="CFG_RFC2" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003C9C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC4">
+            <field Type="RW" name="CFG_RFC4" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003CC4" description="IP Blk = MC_BASE1 Access=RW " name="CFG_NIBBLE_DEVICES">
+            <field Type="RW" name="CFG_NIBBLE_DEVICES" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003CE0" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS0_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS0_0" offset="0" width="32">0x81881881</field>
+          </register>
+          <register address="0x00003CE4" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS0_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS0_1" offset="0" width="32">0x00008818</field>
+          </register>
+          <register address="0x00003CE8" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS1_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS1_0" offset="0" width="32">0xa92a92a9</field>
+          </register>
+          <register address="0x00003CEC" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS1_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS1_1" offset="0" width="32">0x00002a92</field>
+          </register>
+          <register address="0x00003CF0" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS2_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS2_0" offset="0" width="32">0xc28c28c2</field>
+          </register>
+          <register address="0x00003CF4" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS2_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS2_1" offset="0" width="32">0x00008c28</field>
+          </register>
+          <register address="0x00003CF8" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS3_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS3_0" offset="0" width="32">0xea2ea2ea</field>
+          </register>
+          <register address="0x00003CFC" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS3_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS3_1" offset="0" width="32">0x00002ea2</field>
+          </register>
+          <register address="0x00003D00" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS4_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS4_0" offset="0" width="32">0x03903903</field>
+          </register>
+          <register address="0x00003D04" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS4_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS4_1" offset="0" width="32">0x00009039</field>
+          </register>
+          <register address="0x00003D08" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS5_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS5_0" offset="0" width="32">0x2b32b32b</field>
+          </register>
+          <register address="0x00003D0C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS5_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS5_1" offset="0" width="32">0x000032b3</field>
+          </register>
+          <register address="0x00003D10" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS6_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS6_0" offset="0" width="32">0x44944944</field>
+          </register>
+          <register address="0x00003D14" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS6_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS6_1" offset="0" width="32">0x00009449</field>
+          </register>
+          <register address="0x00003D18" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS7_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS7_0" offset="0" width="32">0x6c36c36c</field>
+          </register>
+          <register address="0x00003D1C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS7_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS7_1" offset="0" width="32">0x000036c3</field>
+          </register>
+          <register address="0x00003D20" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS8_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS8_0" offset="0" width="32">0x85985985</field>
+          </register>
+          <register address="0x00003D24" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS8_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS8_1" offset="0" width="32">0x00009859</field>
+          </register>
+          <register address="0x00003D28" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS9_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS9_0" offset="0" width="32">0xad3ad3ad</field>
+          </register>
+          <register address="0x00003D2C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS9_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS9_1" offset="0" width="32">0x00003ad3</field>
+          </register>
+          <register address="0x00003D30" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS10_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS10_0" offset="0" width="32">0xc69c69c6</field>
+          </register>
+          <register address="0x00003D34" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS10_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS10_1" offset="0" width="32">0x00009c69</field>
+          </register>
+          <register address="0x00003D38" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS11_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS11_0" offset="0" width="32">0xee3ee3ee</field>
+          </register>
+          <register address="0x00003D3C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS11_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS11_1" offset="0" width="32">0x00003ee3</field>
+          </register>
+          <register address="0x00003D40" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS12_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS12_0" offset="0" width="32">0x07a07a07</field>
+          </register>
+          <register address="0x00003D44" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS12_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS12_1" offset="0" width="32">0x0000a07a</field>
+          </register>
+          <register address="0x00003D48" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS13_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS13_0" offset="0" width="32">0x2f42f42f</field>
+          </register>
+          <register address="0x00003D4C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS13_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS13_1" offset="0" width="32">0x000042f4</field>
+          </register>
+          <register address="0x00003D50" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS14_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS14_0" offset="0" width="32">0x48a48a48</field>
+          </register>
+          <register address="0x00003D54" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS14_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS14_1" offset="0" width="32">0x0000a48a</field>
+          </register>
+          <register address="0x00003D58" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS15_0">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS15_0" offset="0" width="32">0x70470470</field>
+          </register>
+          <register address="0x00003D5C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_BIT_MAP_INDEX_CS15_1">
+            <field Type="RW" name="CFG_BIT_MAP_INDEX_CS15_1" offset="0" width="32">0x00004704</field>
+          </register>
+          <register address="0x00003D60" description="IP Blk = MC_BASE1 Access=RW " name="CFG_NUM_LOGICAL_RANKS_PER_3DS">
+            <field Type="RW" name="CFG_NUM_LOGICAL_RANKS_PER_3DS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00003D64" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC_DLR1">
+            <field Type="RW" name="CFG_RFC_DLR1" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003D68" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC_DLR2">
+            <field Type="RW" name="CFG_RFC_DLR2" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003D6C" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RFC_DLR4">
+            <field Type="RW" name="CFG_RFC_DLR4" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003D70" description="IP Blk = MC_BASE1 Access=RW " name="CFG_RRD_DLR">
+            <field Type="RW" name="CFG_RRD_DLR" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003D74" description="IP Blk = MC_BASE1 Access=RW " name="CFG_FAW_DLR">
+            <field Type="RW" name="CFG_FAW_DLR" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00003D98" description="IP Blk = MC_BASE1 Access=RW " name="CFG_ADVANCE_ACTIVATE_READY">
+            <field Type="RW" name="CFG_ADVANCE_ACTIVATE_READY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004000" description="IP Blk = MC_BASE2 Access=RW " name="CTRLR_SOFT_RESET_N">
+            <field Type="RW" name="CTRLR_SOFT_RESET_N" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00004008" description="IP Blk = MC_BASE2 Access=RW " name="CFG_LOOKAHEAD_PCH">
+            <field Type="RW" name="CFG_LOOKAHEAD_PCH" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000400C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_LOOKAHEAD_ACT">
+            <field Type="RW" name="CFG_LOOKAHEAD_ACT" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004010" description="IP Blk = MC_BASE2 Access=RW " name="INIT_AUTOINIT_DISABLE">
+            <field Type="RW" name="INIT_AUTOINIT_DISABLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004014" description="IP Blk = MC_BASE2 Access=RW " name="INIT_FORCE_RESET">
+            <field Type="RW" name="INIT_FORCE_RESET" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004018" description="IP Blk = MC_BASE2 Access=RW " name="INIT_GEARDOWN_EN">
+            <field Type="RW" name="INIT_GEARDOWN_EN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000401C" description="IP Blk = MC_BASE2 Access=RW " name="INIT_DISABLE_CKE">
+            <field Type="RW" name="INIT_DISABLE_CKE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004020" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CS">
+            <field Type="RW" name="INIT_CS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004024" description="IP Blk = MC_BASE2 Access=RW " name="INIT_PRECHARGE_ALL">
+            <field Type="RW" name="INIT_PRECHARGE_ALL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004028" description="IP Blk = MC_BASE2 Access=RW " name="INIT_REFRESH">
+            <field Type="RW" name="INIT_REFRESH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000402C" description="IP Blk = MC_BASE2 Access=RW " name="INIT_ZQ_CAL_REQ">
+            <field Type="RW" name="INIT_ZQ_CAL_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004034" description="IP Blk = MC_BASE2 Access=RW " name="CFG_BL">
+            <field Type="RW" name="CFG_BL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004038" description="IP Blk = MC_BASE2 Access=RW " name="CTRLR_INIT">
+            <field Type="RW" name="CTRLR_INIT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004040" description="IP Blk = MC_BASE2 Access=RW " name="CFG_AUTO_REF_EN">
+            <field Type="RW" name="CFG_AUTO_REF_EN" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00004044" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RAS">
+            <field Type="RW" name="CFG_RAS" offset="0" width="32">0x1C</field>
+          </register>
+          <register address="0x00004048" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RCD">
+            <field Type="RW" name="CFG_RCD" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x0000404C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RRD">
+            <field Type="RW" name="CFG_RRD" offset="0" width="32">0x00000007</field>
+          </register>
+          <register address="0x00004050" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RP">
+            <field Type="RW" name="CFG_RP" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x00004054" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RC">
+            <field Type="RW" name="CFG_RC" offset="0" width="32">0x27</field>
+          </register>
+          <register address="0x00004058" description="IP Blk = MC_BASE2 Access=RW " name="CFG_FAW">
+            <field Type="RW" name="CFG_FAW" offset="0" width="32">0x14</field>
+          </register>
+          <register address="0x0000405C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RFC">
+            <field Type="RW" name="CFG_RFC" offset="0" width="32">0x00000076</field>
+          </register>
+          <register address="0x00004060" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RTP">
+            <field Type="RW" name="CFG_RTP" offset="0" width="32">0x6</field>
+          </register>
+          <register address="0x00004064" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WR">
+            <field Type="RW" name="CFG_WR" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x00004068" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WTR">
+            <field Type="RW" name="CFG_WTR" offset="0" width="32">0x00000008</field>
+          </register>
+          <register address="0x00004070" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PASR">
+            <field Type="RW" name="CFG_PASR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004074" description="IP Blk = MC_BASE2 Access=RW " name="CFG_XP">
+            <field Type="RW" name="CFG_XP" offset="0" width="32">0x00000003</field>
+          </register>
+          <register address="0x00004078" description="IP Blk = MC_BASE2 Access=RW " name="CFG_XSR">
+            <field Type="RW" name="CFG_XSR" offset="0" width="32">0x00000024</field>
+          </register>
+          <register address="0x00004080" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CL">
+            <field Type="RW" name="CFG_CL" offset="0" width="32">0xC</field>
+          </register>
+          <register address="0x00004088" description="IP Blk = MC_BASE2 Access=RW " name="CFG_READ_TO_WRITE">
+            <field Type="RW" name="CFG_READ_TO_WRITE" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x0000408C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WRITE_TO_WRITE">
+            <field Type="RW" name="CFG_WRITE_TO_WRITE" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00004090" description="IP Blk = MC_BASE2 Access=RW " name="CFG_READ_TO_READ">
+            <field Type="RW" name="CFG_READ_TO_READ" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x00004094" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WRITE_TO_READ">
+            <field Type="RW" name="CFG_WRITE_TO_READ" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00004098" description="IP Blk = MC_BASE2 Access=RW " name="CFG_READ_TO_WRITE_ODT">
+            <field Type="RW" name="CFG_READ_TO_WRITE_ODT" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x0000409C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WRITE_TO_WRITE_ODT">
+            <field Type="RW" name="CFG_WRITE_TO_WRITE_ODT" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x000040A0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_READ_TO_READ_ODT">
+            <field Type="RW" name="CFG_READ_TO_READ_ODT" offset="0" width="32">0x2</field>
+          </register>
+          <register address="0x000040A4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WRITE_TO_READ_ODT">
+            <field Type="RW" name="CFG_WRITE_TO_READ_ODT" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x000040A8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MIN_READ_IDLE">
+            <field Type="RW" name="CFG_MIN_READ_IDLE" offset="0" width="32">0x7</field>
+          </register>
+          <register address="0x000040AC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MRD">
+            <field Type="RW" name="CFG_MRD" offset="0" width="32">0x00000010</field>
+          </register>
+          <register address="0x000040B0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_BT">
+            <field Type="RW" name="CFG_BT" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040B4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DS">
+            <field Type="RW" name="CFG_DS" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040B8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_QOFF">
+            <field Type="RW" name="CFG_QOFF" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040C4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RTT">
+            <field Type="RW" name="CFG_RTT" offset="0" width="32">0x7</field>
+          </register>
+          <register address="0x000040C8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DLL_DISABLE">
+            <field Type="RW" name="CFG_DLL_DISABLE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040CC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_REF_PER">
+            <field Type="RW" name="CFG_REF_PER" offset="0" width="32">0x1860</field>
+          </register>
+          <register address="0x000040D0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_STARTUP_DELAY">
+            <field Type="RW" name="CFG_STARTUP_DELAY" offset="0" width="32">0x27100</field>
+          </register>
+          <register address="0x000040D4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MEM_COLBITS">
+            <field Type="RW" name="CFG_MEM_COLBITS" offset="0" width="32">0xA</field>
+          </register>
+          <register address="0x000040D8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MEM_ROWBITS">
+            <field Type="RW" name="CFG_MEM_ROWBITS" offset="0" width="32">0xF</field>
+          </register>
+          <register address="0x000040DC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MEM_BANKBITS">
+            <field Type="RW" name="CFG_MEM_BANKBITS" offset="0" width="32">0x4</field>
+          </register>
+          <register address="0x000040E0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS0">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS0" offset="0" width="32">0x00</field>
+          </register>
+          <register address="0x000040E4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS1">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS1" offset="0" width="32">0x00</field>
+          </register>
+          <register address="0x000040E8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS2">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS2" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040EC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS3">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS3" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040F0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS4">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS4" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040F4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS5">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS5" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040F8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS6">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS6" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000040FC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_MAP_CS7">
+            <field Type="RW" name="CFG_ODT_RD_MAP_CS7" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004120" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS0">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS0" offset="0" width="32">0x01</field>
+          </register>
+          <register address="0x00004124" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS1">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS1" offset="0" width="32">0x00</field>
+          </register>
+          <register address="0x00004128" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS2">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS2" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000412C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS3">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS3" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004130" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS4">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS4" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004134" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS5">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS5" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004138" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS6">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS6" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000413C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_MAP_CS7">
+            <field Type="RW" name="CFG_ODT_WR_MAP_CS7" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004160" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_TURN_ON">
+            <field Type="RW" name="CFG_ODT_RD_TURN_ON" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004164" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_TURN_ON">
+            <field Type="RW" name="CFG_ODT_WR_TURN_ON" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004168" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_RD_TURN_OFF">
+            <field Type="RW" name="CFG_ODT_RD_TURN_OFF" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000416C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_WR_TURN_OFF">
+            <field Type="RW" name="CFG_ODT_WR_TURN_OFF" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004178" description="IP Blk = MC_BASE2 Access=RW " name="CFG_EMR3">
+            <field Type="RW" name="CFG_EMR3" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000417C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_TWO_T">
+            <field Type="RW" name="CFG_TWO_T" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004180" description="IP Blk = MC_BASE2 Access=RW " name="CFG_TWO_T_SEL_CYCLE">
+            <field Type="RW" name="CFG_TWO_T_SEL_CYCLE" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00004184" description="IP Blk = MC_BASE2 Access=RW " name="CFG_REGDIMM">
+            <field Type="RW" name="CFG_REGDIMM" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004188" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MOD">
+            <field Type="RW" name="CFG_MOD" offset="0" width="32">0x18</field>
+          </register>
+          <register address="0x0000418C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_XS">
+            <field Type="RW" name="CFG_XS" offset="0" width="32">0x120</field>
+          </register>
+          <register address="0x00004190" description="IP Blk = MC_BASE2 Access=RW " name="CFG_XSDLL">
+            <field Type="RW" name="CFG_XSDLL" offset="0" width="32">0x00000200</field>
+          </register>
+          <register address="0x00004194" description="IP Blk = MC_BASE2 Access=RW " name="CFG_XPR">
+            <field Type="RW" name="CFG_XPR" offset="0" width="32">0x120</field>
+          </register>
+          <register address="0x00004198" description="IP Blk = MC_BASE2 Access=RW " name="CFG_AL_MODE">
+            <field Type="RW" name="CFG_AL_MODE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x0000419C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CWL">
+            <field Type="RW" name="CFG_CWL" offset="0" width="32">0xB</field>
+          </register>
+          <register address="0x000041A0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_BL_MODE">
+            <field Type="RW" name="CFG_BL_MODE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041A4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_TDQS">
+            <field Type="RW" name="CFG_TDQS" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041A8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RTT_WR">
+            <field Type="RW" name="CFG_RTT_WR" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041AC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_LP_ASR">
+            <field Type="RW" name="CFG_LP_ASR" offset="0" width="32">0x3</field>
+          </register>
+          <register address="0x000041B0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_AUTO_SR">
+            <field Type="RW" name="CFG_AUTO_SR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041B4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_SRT">
+            <field Type="RW" name="CFG_SRT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041B8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ADDR_MIRROR">
+            <field Type="RW" name="CFG_ADDR_MIRROR" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041BC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_TYPE">
+            <field Type="RW" name="CFG_ZQ_CAL_TYPE" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x000041C0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_PER">
+            <field Type="RW" name="CFG_ZQ_CAL_PER" offset="0" width="32">0x27100</field>
+          </register>
+          <register address="0x000041C4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_AUTO_ZQ_CAL_EN">
+            <field Type="RW" name="CFG_AUTO_ZQ_CAL_EN" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041C8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MEMORY_TYPE">
+            <field Type="RW" name="CFG_MEMORY_TYPE" offset="0" width="32">0x80</field>
+          </register>
+          <register address="0x000041CC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ONLY_SRANK_CMDS">
+            <field Type="RW" name="CFG_ONLY_SRANK_CMDS" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041D0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_NUM_RANKS">
+            <field Type="RW" name="CFG_NUM_RANKS" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x000041D4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_QUAD_RANK">
+            <field Type="RW" name="CFG_QUAD_RANK" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041DC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_EARLY_RANK_TO_WR_START">
+            <field Type="RW" name="CFG_EARLY_RANK_TO_WR_START" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041E0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_EARLY_RANK_TO_RD_START">
+            <field Type="RW" name="CFG_EARLY_RANK_TO_RD_START" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000041E4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PASR_BANK">
+            <field Type="RW" name="CFG_PASR_BANK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041E8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PASR_SEG">
+            <field Type="RW" name="CFG_PASR_SEG" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041EC" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MRR_MODE">
+            <field Type="RW" name="INIT_MRR_MODE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041F0" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MR_W_REQ">
+            <field Type="RW" name="INIT_MR_W_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041F4" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MR_ADDR">
+            <field Type="RW" name="INIT_MR_ADDR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041F8" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MR_WR_DATA">
+            <field Type="RW" name="INIT_MR_WR_DATA" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000041FC" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MR_WR_MASK">
+            <field Type="RW" name="INIT_MR_WR_MASK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004200" description="IP Blk = MC_BASE2 Access=RW " name="INIT_NOP">
+            <field Type="RW" name="INIT_NOP" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004204" description="IP Blk = MC_BASE2 Access=RW " name="CFG_INIT_DURATION">
+            <field Type="RW" name="CFG_INIT_DURATION" offset="0" width="32">0x000029B0</field>
+          </register>
+          <register address="0x00004208" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQINIT_CAL_DURATION">
+            <field Type="RW" name="CFG_ZQINIT_CAL_DURATION" offset="0" width="32">0x400</field>
+          </register>
+          <register address="0x0000420C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_L_DURATION">
+            <field Type="RW" name="CFG_ZQ_CAL_L_DURATION" offset="0" width="32">0x200</field>
+          </register>
+          <register address="0x00004210" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_S_DURATION">
+            <field Type="RW" name="CFG_ZQ_CAL_S_DURATION" offset="0" width="32">0x80</field>
+          </register>
+          <register address="0x00004214" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_R_DURATION">
+            <field Type="RW" name="CFG_ZQ_CAL_R_DURATION" offset="0" width="32">0x0000000b</field>
+          </register>
+          <register address="0x00004218" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MRR">
+            <field Type="RW" name="CFG_MRR" offset="0" width="32">0x00000002</field>
+          </register>
+          <register address="0x0000421C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MRW">
+            <field Type="RW" name="CFG_MRW" offset="0" width="32">0x00000010</field>
+          </register>
+          <register address="0x00004220" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ODT_POWERDOWN">
+            <field Type="RW" name="CFG_ODT_POWERDOWN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004224" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WL">
+            <field Type="RW" name="CFG_WL" offset="0" width="32">0x00000009</field>
+          </register>
+          <register address="0x00004228" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RL">
+            <field Type="RW" name="CFG_RL" offset="0" width="32">0x0000000C</field>
+          </register>
+          <register address="0x0000422C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CAL_READ_PERIOD">
+            <field Type="RW" name="CFG_CAL_READ_PERIOD" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004230" description="IP Blk = MC_BASE2 Access=RW " name="CFG_NUM_CAL_READS">
+            <field Type="RW" name="CFG_NUM_CAL_READS" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00004234" description="IP Blk = MC_BASE2 Access=RW " name="INIT_SELF_REFRESH">
+            <field Type="RW" name="INIT_SELF_REFRESH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000423C" description="IP Blk = MC_BASE2 Access=RW " name="INIT_POWER_DOWN">
+            <field Type="RW" name="INIT_POWER_DOWN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004244" description="IP Blk = MC_BASE2 Access=RW " name="INIT_FORCE_WRITE">
+            <field Type="RW" name="INIT_FORCE_WRITE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004248" description="IP Blk = MC_BASE2 Access=RW " name="INIT_FORCE_WRITE_CS">
+            <field Type="RW" name="INIT_FORCE_WRITE_CS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000424C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_INIT_DISABLE">
+            <field Type="RW" name="CFG_CTRLR_INIT_DISABLE" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004258" description="IP Blk = MC_BASE2 Access=RW " name="INIT_RDIMM_COMPLETE">
+            <field Type="RW" name="INIT_RDIMM_COMPLETE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000425C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RDIMM_LAT">
+            <field Type="RW" name="CFG_RDIMM_LAT" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00004260" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RDIMM_BSIDE_INVERT">
+            <field Type="RW" name="CFG_RDIMM_BSIDE_INVERT" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00004264" description="IP Blk = MC_BASE2 Access=RW " name="CFG_LRDIMM">
+            <field Type="RW" name="CFG_LRDIMM" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004268" description="IP Blk = MC_BASE2 Access=RW " name="INIT_MEMORY_RESET_MASK">
+            <field Type="RW" name="INIT_MEMORY_RESET_MASK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000426C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RD_PREAMB_TOGGLE">
+            <field Type="RW" name="CFG_RD_PREAMB_TOGGLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004270" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RD_POSTAMBLE">
+            <field Type="RW" name="CFG_RD_POSTAMBLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004274" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PU_CAL">
+            <field Type="RW" name="CFG_PU_CAL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004278" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DQ_ODT">
+            <field Type="RW" name="CFG_DQ_ODT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000427C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CA_ODT">
+            <field Type="RW" name="CFG_CA_ODT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004280" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQLATCH_DURATION">
+            <field Type="RW" name="CFG_ZQLATCH_DURATION" offset="0" width="32">0x00000030</field>
+          </register>
+          <register address="0x00004284" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CAL_SELECT">
+            <field Type="RW" name="INIT_CAL_SELECT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004288" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CAL_L_R_REQ">
+            <field Type="RW" name="INIT_CAL_L_R_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000428C" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CAL_L_B_SIZE">
+            <field Type="RW" name="INIT_CAL_L_B_SIZE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042A0" description="IP Blk = MC_BASE2 Access=RW " name="INIT_RWFIFO">
+            <field Type="RW" name="INIT_RWFIFO" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042A4" description="IP Blk = MC_BASE2 Access=RW " name="INIT_RD_DQCAL">
+            <field Type="RW" name="INIT_RD_DQCAL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042A8" description="IP Blk = MC_BASE2 Access=RW " name="INIT_START_DQSOSC">
+            <field Type="RW" name="INIT_START_DQSOSC" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042AC" description="IP Blk = MC_BASE2 Access=RW " name="INIT_STOP_DQSOSC">
+            <field Type="RW" name="INIT_STOP_DQSOSC" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042B0" description="IP Blk = MC_BASE2 Access=RW " name="INIT_ZQ_CAL_START">
+            <field Type="RW" name="INIT_ZQ_CAL_START" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042B4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_WR_POSTAMBLE">
+            <field Type="RW" name="CFG_WR_POSTAMBLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042BC" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CAL_L_ADDR_0">
+            <field Type="RW" name="INIT_CAL_L_ADDR_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042C0" description="IP Blk = MC_BASE2 Access=RW " name="INIT_CAL_L_ADDR_1">
+            <field Type="RW" name="INIT_CAL_L_ADDR_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042C4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLUPD_TRIG">
+            <field Type="RW" name="CFG_CTRLUPD_TRIG" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000042C8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLUPD_START_DELAY">
+            <field Type="RW" name="CFG_CTRLUPD_START_DELAY" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000042CC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DFI_T_CTRLUPD_MAX">
+            <field Type="RW" name="CFG_DFI_T_CTRLUPD_MAX" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000042D0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_SEL">
+            <field Type="RW" name="CFG_CTRLR_BUSY_SEL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042D4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_VALUE">
+            <field Type="RW" name="CFG_CTRLR_BUSY_VALUE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042D8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_TURN_OFF_DELAY">
+            <field Type="RW" name="CFG_CTRLR_BUSY_TURN_OFF_DELAY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042DC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_SLOW_RESTART_WINDOW">
+            <field Type="RW" name="CFG_CTRLR_BUSY_SLOW_RESTART_WINDOW" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042E0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_RESTART_HOLDOFF">
+            <field Type="RW" name="CFG_CTRLR_BUSY_RESTART_HOLDOFF" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042E4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PARITY_RDIMM_DELAY">
+            <field Type="RW" name="CFG_PARITY_RDIMM_DELAY" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x000042E8" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CTRLR_BUSY_ENABLE">
+            <field Type="RW" name="CFG_CTRLR_BUSY_ENABLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042EC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ASYNC_ODT">
+            <field Type="RW" name="CFG_ASYNC_ODT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042F0" description="IP Blk = MC_BASE2 Access=RW " name="CFG_ZQ_CAL_DURATION">
+            <field Type="RW" name="CFG_ZQ_CAL_DURATION" offset="0" width="32">0x00000640</field>
+          </register>
+          <register address="0x000042F4" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MRRI">
+            <field Type="RW" name="CFG_MRRI" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042F8" description="IP Blk = MC_BASE2 Access=RW " name="INIT_ODT_FORCE_EN">
+            <field Type="RW" name="INIT_ODT_FORCE_EN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x000042FC" description="IP Blk = MC_BASE2 Access=RW " name="INIT_ODT_FORCE_RANK">
+            <field Type="RW" name="INIT_ODT_FORCE_RANK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004300" description="IP Blk = MC_BASE2 Access=RW " name="CFG_PHYUPD_ACK_DELAY">
+            <field Type="RW" name="CFG_PHYUPD_ACK_DELAY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004304" description="IP Blk = MC_BASE2 Access=RW " name="CFG_MIRROR_X16_BG0_BG1">
+            <field Type="RW" name="CFG_MIRROR_X16_BG0_BG1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004308" description="IP Blk = MC_BASE2 Access=RW " name="INIT_PDA_MR_W_REQ">
+            <field Type="RW" name="INIT_PDA_MR_W_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000430C" description="IP Blk = MC_BASE2 Access=RW " name="INIT_PDA_NIBBLE_SELECT">
+            <field Type="RW" name="INIT_PDA_NIBBLE_SELECT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004310" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DRAM_CLK_DISABLE_IN_SELF_REFRESH">
+            <field Type="RW" name="CFG_DRAM_CLK_DISABLE_IN_SELF_REFRESH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004314" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CKSRE">
+            <field Type="RW" name="CFG_CKSRE" offset="0" width="32">0x00000008</field>
+          </register>
+          <register address="0x00004318" description="IP Blk = MC_BASE2 Access=RW " name="CFG_CKSRX">
+            <field Type="RW" name="CFG_CKSRX" offset="0" width="32">0x0000000b</field>
+          </register>
+          <register address="0x0000431C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_RCD_STAB">
+            <field Type="RW" name="CFG_RCD_STAB" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004320" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DFI_T_CTRL_DELAY">
+            <field Type="RW" name="CFG_DFI_T_CTRL_DELAY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004324" description="IP Blk = MC_BASE2 Access=RW " name="CFG_DFI_T_DRAM_CLK_ENABLE">
+            <field Type="RW" name="CFG_DFI_T_DRAM_CLK_ENABLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004328" description="IP Blk = MC_BASE2 Access=RW " name="CFG_IDLE_TIME_TO_SELF_REFRESH">
+            <field Type="RW" name="CFG_IDLE_TIME_TO_SELF_REFRESH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000432C" description="IP Blk = MC_BASE2 Access=RW " name="CFG_IDLE_TIME_TO_POWER_DOWN">
+            <field Type="RW" name="CFG_IDLE_TIME_TO_POWER_DOWN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004330" description="IP Blk = MC_BASE2 Access=RW " name="CFG_BURST_RW_REFRESH_HOLDOFF">
+            <field Type="RW" name="CFG_BURST_RW_REFRESH_HOLDOFF" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004384" description="IP Blk = MC_BASE2 Access=RW " name="CFG_BG_INTERLEAVE">
+            <field Type="RW" name="CFG_BG_INTERLEAVE" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x000043FC" description="IP Blk = MC_BASE2 Access=RW " name="CFG_REFRESH_DURING_PHY_TRAINING">
+            <field Type="RW" name="CFG_REFRESH_DURING_PHY_TRAINING" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C00" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P0">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C04" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P1">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C08" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P2">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C0C" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P3">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P3" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C10" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P4">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P4" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C14" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P5">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P5" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C18" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P6">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P6" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00004C1C" description="IP Blk = MPFE Access=RW " name="CFG_STARVE_TIMEOUT_P7">
+            <field Type="RW" name="CFG_STARVE_TIMEOUT_P7" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005000" description="IP Blk = REORDER Access=RW " name="CFG_REORDER_EN">
+            <field Type="RW" name="CFG_REORDER_EN" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00005004" description="IP Blk = REORDER Access=RW " name="CFG_REORDER_QUEUE_EN">
+            <field Type="RW" name="CFG_REORDER_QUEUE_EN" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00005008" description="IP Blk = REORDER Access=RW " name="CFG_INTRAPORT_REORDER_EN">
+            <field Type="RW" name="CFG_INTRAPORT_REORDER_EN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000500C" description="IP Blk = REORDER Access=RW " name="CFG_MAINTAIN_COHERENCY">
+            <field Type="RW" name="CFG_MAINTAIN_COHERENCY" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00005010" description="IP Blk = REORDER Access=RW " name="CFG_Q_AGE_LIMIT">
+            <field Type="RW" name="CFG_Q_AGE_LIMIT" offset="0" width="32">0x000000FF</field>
+          </register>
+          <register address="0x00005018" description="IP Blk = REORDER Access=RW " name="CFG_RO_CLOSED_PAGE_POLICY">
+            <field Type="RW" name="CFG_RO_CLOSED_PAGE_POLICY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000501C" description="IP Blk = REORDER Access=RW " name="CFG_REORDER_RW_ONLY">
+            <field Type="RW" name="CFG_REORDER_RW_ONLY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005020" description="IP Blk = REORDER Access=RW " name="CFG_RO_PRIORITY_EN">
+            <field Type="RW" name="CFG_RO_PRIORITY_EN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005400" description="IP Blk = RMW Access=RW " name="CFG_DM_EN">
+            <field Type="RW" name="CFG_DM_EN" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00005404" description="IP Blk = RMW Access=RW " name="CFG_RMW_EN">
+            <field Type="RW" name="CFG_RMW_EN" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00005800" description="IP Blk = ECC Access=RW " name="CFG_ECC_CORRECTION_EN">
+            <field Type="RW" name="CFG_ECC_CORRECTION_EN" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x00005840" description="IP Blk = ECC Access=RW " name="CFG_ECC_BYPASS">
+            <field Type="RW" name="CFG_ECC_BYPASS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005844" description="IP Blk = ECC Access=RW " name="INIT_WRITE_DATA_1B_ECC_ERROR_GEN">
+            <field Type="RW" name="INIT_WRITE_DATA_1B_ECC_ERROR_GEN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005848" description="IP Blk = ECC Access=RW " name="INIT_WRITE_DATA_2B_ECC_ERROR_GEN">
+            <field Type="RW" name="INIT_WRITE_DATA_2B_ECC_ERROR_GEN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000585C" description="IP Blk = ECC Access=RW " name="CFG_ECC_1BIT_INT_THRESH">
+            <field Type="RW" name="CFG_ECC_1BIT_INT_THRESH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00005C00" description="IP Blk = READ_CAPT Access=RW " name="INIT_READ_CAPTURE_ADDR">
+            <field Type="RW" name="INIT_READ_CAPTURE_ADDR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006400" description="IP Blk = MTA Access=RW " name="CFG_ERROR_GROUP_SEL">
+            <field Type="RW" name="CFG_ERROR_GROUP_SEL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006404" description="IP Blk = MTA Access=RW " name="CFG_DATA_SEL">
+            <field Type="RW" name="CFG_DATA_SEL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006408" description="IP Blk = MTA Access=RW " name="CFG_TRIG_MODE">
+            <field Type="RW" name="CFG_TRIG_MODE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000640C" description="IP Blk = MTA Access=RW " name="CFG_POST_TRIG_CYCS">
+            <field Type="RW" name="CFG_POST_TRIG_CYCS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006410" description="IP Blk = MTA Access=RW " name="CFG_TRIG_MASK">
+            <field Type="RW" name="CFG_TRIG_MASK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006414" description="IP Blk = MTA Access=RW " name="CFG_EN_MASK">
+            <field Type="RW" name="CFG_EN_MASK" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006418" description="IP Blk = MTA Access=RW " name="MTC_ACQ_ADDR">
+            <field Type="RW" name="MTC_ACQ_ADDR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006430" description="IP Blk = MTA Access=RW " name="CFG_TRIG_MT_ADDR_0">
+            <field Type="RW" name="CFG_TRIG_MT_ADDR_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006434" description="IP Blk = MTA Access=RW " name="CFG_TRIG_MT_ADDR_1">
+            <field Type="RW" name="CFG_TRIG_MT_ADDR_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006438" description="IP Blk = MTA Access=RW " name="CFG_TRIG_ERR_MASK_0">
+            <field Type="RW" name="CFG_TRIG_ERR_MASK_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000643C" description="IP Blk = MTA Access=RW " name="CFG_TRIG_ERR_MASK_1">
+            <field Type="RW" name="CFG_TRIG_ERR_MASK_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006440" description="IP Blk = MTA Access=RW " name="CFG_TRIG_ERR_MASK_2">
+            <field Type="RW" name="CFG_TRIG_ERR_MASK_2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006444" description="IP Blk = MTA Access=RW " name="CFG_TRIG_ERR_MASK_3">
+            <field Type="RW" name="CFG_TRIG_ERR_MASK_3" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006448" description="IP Blk = MTA Access=RW " name="CFG_TRIG_ERR_MASK_4">
+            <field Type="RW" name="CFG_TRIG_ERR_MASK_4" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000644C" description="IP Blk = MTA Access=RW " name="MTC_ACQ_WR_DATA_0">
+            <field Type="RW" name="MTC_ACQ_WR_DATA_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006450" description="IP Blk = MTA Access=RW " name="MTC_ACQ_WR_DATA_1">
+            <field Type="RW" name="MTC_ACQ_WR_DATA_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006454" description="IP Blk = MTA Access=RW " name="MTC_ACQ_WR_DATA_2">
+            <field Type="RW" name="MTC_ACQ_WR_DATA_2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000652C" description="IP Blk = MTA Access=RW " name="CFG_PRE_TRIG_CYCS">
+            <field Type="RW" name="CFG_PRE_TRIG_CYCS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00006550" description="IP Blk = MTA Access=RW " name="CFG_DATA_SEL_FIRST_ERROR">
+            <field Type="RW" name="CFG_DATA_SEL_FIRST_ERROR" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00007C00" description="IP Blk = DYN_WIDTH_ADJ Access=RW " name="CFG_DQ_WIDTH">
+            <field Type="RW" name="CFG_DQ_WIDTH" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00007C04" description="IP Blk = DYN_WIDTH_ADJ Access=RW " name="CFG_ACTIVE_DQ_SEL">
+            <field Type="RW" name="CFG_ACTIVE_DQ_SEL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0000800C" description="IP Blk = CA_PAR_ERR Access=RW " name="INIT_CA_PARITY_ERROR_GEN_REQ">
+            <field Type="RW" name="INIT_CA_PARITY_ERROR_GEN_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00008010" description="IP Blk = CA_PAR_ERR Access=RW " name="INIT_CA_PARITY_ERROR_GEN_CMD">
+            <field Type="RW" name="INIT_CA_PARITY_ERROR_GEN_CMD" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010000" description="IP Blk = DFI Access=RW " name="CFG_DFI_T_RDDATA_EN">
+            <field Type="RW" name="CFG_DFI_T_RDDATA_EN" offset="0" width="32">0x14</field>
+          </register>
+          <register address="0x00010004" description="IP Blk = DFI Access=RW " name="CFG_DFI_T_PHY_RDLAT">
+            <field Type="RW" name="CFG_DFI_T_PHY_RDLAT" offset="0" width="32">0x6</field>
+          </register>
+          <register address="0x00010008" description="IP Blk = DFI Access=RW " name="CFG_DFI_T_PHY_WRLAT">
+            <field Type="RW" name="CFG_DFI_T_PHY_WRLAT" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x0001000C" description="IP Blk = DFI Access=RW " name="CFG_DFI_PHYUPD_EN">
+            <field Type="RW" name="CFG_DFI_PHYUPD_EN" offset="0" width="32">0x00000001</field>
+          </register>
+          <register address="0x00010010" description="IP Blk = DFI Access=RW " name="INIT_DFI_LP_DATA_REQ">
+            <field Type="RW" name="INIT_DFI_LP_DATA_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010014" description="IP Blk = DFI Access=RW " name="INIT_DFI_LP_CTRL_REQ">
+            <field Type="RW" name="INIT_DFI_LP_CTRL_REQ" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0001001C" description="IP Blk = DFI Access=RW " name="INIT_DFI_LP_WAKEUP">
+            <field Type="RW" name="INIT_DFI_LP_WAKEUP" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010020" description="IP Blk = DFI Access=RW " name="INIT_DFI_DRAM_CLK_DISABLE">
+            <field Type="RW" name="INIT_DFI_DRAM_CLK_DISABLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010030" description="IP Blk = DFI Access=RW " name="CFG_DFI_DATA_BYTE_DISABLE">
+            <field Type="RW" name="CFG_DFI_DATA_BYTE_DISABLE" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0001003C" description="IP Blk = DFI Access=RW " name="CFG_DFI_LVL_SEL">
+            <field Type="RW" name="CFG_DFI_LVL_SEL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010040" description="IP Blk = DFI Access=RW " name="CFG_DFI_LVL_PERIODIC">
+            <field Type="RW" name="CFG_DFI_LVL_PERIODIC" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010044" description="IP Blk = DFI Access=RW " name="CFG_DFI_LVL_PATTERN">
+            <field Type="RW" name="CFG_DFI_LVL_PATTERN" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00010050" description="IP Blk = DFI Access=RW " name="PHY_DFI_INIT_START">
+            <field Type="RW" name="PHY_DFI_INIT_START" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00012C18" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_START_ADDRESS_AXI1_0">
+            <field Type="RW" name="CFG_AXI_START_ADDRESS_AXI1_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00012C1C" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_START_ADDRESS_AXI1_1">
+            <field Type="RW" name="CFG_AXI_START_ADDRESS_AXI1_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00012C20" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_START_ADDRESS_AXI2_0">
+            <field Type="RW" name="CFG_AXI_START_ADDRESS_AXI2_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00012C24" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_START_ADDRESS_AXI2_1">
+            <field Type="RW" name="CFG_AXI_START_ADDRESS_AXI2_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00012F18" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_END_ADDRESS_AXI1_0">
+            <field Type="RW" name="CFG_AXI_END_ADDRESS_AXI1_0" offset="0" width="32">0x7FFFFFFF</field>
+          </register>
+          <register address="0x00012F1C" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_END_ADDRESS_AXI1_1">
+            <field Type="RW" name="CFG_AXI_END_ADDRESS_AXI1_1" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00012F20" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_END_ADDRESS_AXI2_0">
+            <field Type="RW" name="CFG_AXI_END_ADDRESS_AXI2_0" offset="0" width="32">0x7FFFFFFF</field>
+          </register>
+          <register address="0x00012F24" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_END_ADDRESS_AXI2_1">
+            <field Type="RW" name="CFG_AXI_END_ADDRESS_AXI2_1" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00013218" description="IP Blk = AXI_IF Access=RW " name="CFG_MEM_START_ADDRESS_AXI1_0">
+            <field Type="RW" name="CFG_MEM_START_ADDRESS_AXI1_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0001321C" description="IP Blk = AXI_IF Access=RW " name="CFG_MEM_START_ADDRESS_AXI1_1">
+            <field Type="RW" name="CFG_MEM_START_ADDRESS_AXI1_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00013220" description="IP Blk = AXI_IF Access=RW " name="CFG_MEM_START_ADDRESS_AXI2_0">
+            <field Type="RW" name="CFG_MEM_START_ADDRESS_AXI2_0" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00013224" description="IP Blk = AXI_IF Access=RW " name="CFG_MEM_START_ADDRESS_AXI2_1">
+            <field Type="RW" name="CFG_MEM_START_ADDRESS_AXI2_1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00013514" description="IP Blk = AXI_IF Access=RW " name="CFG_ENABLE_BUS_HOLD_AXI1">
+            <field Type="RW" name="CFG_ENABLE_BUS_HOLD_AXI1" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00013518" description="IP Blk = AXI_IF Access=RW " name="CFG_ENABLE_BUS_HOLD_AXI2">
+            <field Type="RW" name="CFG_ENABLE_BUS_HOLD_AXI2" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x00013690" description="IP Blk = AXI_IF Access=RW " name="CFG_AXI_AUTO_PCH">
+            <field Type="RW" name="CFG_AXI_AUTO_PCH" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C000" description="IP Blk = csr_custom Access=RW " name="PHY_RESET_CONTROL">
+            <field Type="RW" name="PHY_RESET_CONTROL" offset="0" width="32">0x8001</field>
+          </register>
+          <register address="0x0003C004" description="IP Blk = csr_custom Access=RW " name="PHY_PC_RANK">
+            <field Type="RW" name="PHY_PC_RANK" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x0003C008" description="IP Blk = csr_custom Access=RW " name="PHY_RANKS_TO_TRAIN">
+            <field Type="RW" name="PHY_RANKS_TO_TRAIN" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x0003C00C" description="IP Blk = csr_custom Access=RW " name="PHY_WRITE_REQUEST">
+            <field Type="RW" name="PHY_WRITE_REQUEST" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C014" description="IP Blk = csr_custom Access=RW " name="PHY_READ_REQUEST">
+            <field Type="RW" name="PHY_READ_REQUEST" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C01C" description="IP Blk = csr_custom Access=RW " name="PHY_WRITE_LEVEL_DELAY">
+            <field Type="RW" name="PHY_WRITE_LEVEL_DELAY" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C020" description="IP Blk = csr_custom Access=RW " name="PHY_GATE_TRAIN_DELAY">
+            <field Type="RW" name="PHY_GATE_TRAIN_DELAY" offset="0" width="32">0x2F</field>
+          </register>
+          <register address="0x0003C024" description="IP Blk = csr_custom Access=RW " name="PHY_EYE_TRAIN_DELAY">
+            <field Type="RW" name="PHY_EYE_TRAIN_DELAY" offset="0" width="32">0x3F</field>
+          </register>
+          <register address="0x0003C028" description="IP Blk = csr_custom Access=RW " name="PHY_EYE_PAT">
+            <field Type="RW" name="PHY_EYE_PAT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C02C" description="IP Blk = csr_custom Access=RW " name="PHY_START_RECAL">
+            <field Type="RW" name="PHY_START_RECAL" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C030" description="IP Blk = csr_custom Access=RW " name="PHY_CLR_DFI_LVL_PERIODIC">
+            <field Type="RW" name="PHY_CLR_DFI_LVL_PERIODIC" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C034" description="IP Blk = csr_custom Access=RW " name="PHY_TRAIN_STEP_ENABLE">
+            <field Type="RW" name="PHY_TRAIN_STEP_ENABLE" offset="0" width="32">0x18</field>
+          </register>
+          <register address="0x0003C038" description="IP Blk = csr_custom Access=RW " name="PHY_LPDDR_DQ_CAL_PAT">
+            <field Type="RW" name="PHY_LPDDR_DQ_CAL_PAT" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C03C" description="IP Blk = csr_custom Access=RW " name="PHY_INDPNDT_TRAINING">
+            <field Type="RW" name="PHY_INDPNDT_TRAINING" offset="0" width="32">0x1</field>
+          </register>
+          <register address="0x0003C040" description="IP Blk = csr_custom Access=RW " name="PHY_ENCODED_QUAD_CS">
+            <field Type="RW" name="PHY_ENCODED_QUAD_CS" offset="0" width="32">0x00000000</field>
+          </register>
+          <register address="0x0003C044" description="IP Blk = csr_custom Access=RW " name="PHY_HALF_CLK_DLY_ENABLE">
+            <field Type="RW" name="PHY_HALF_CLK_DLY_ENABLE" offset="0" width="32">0x00000000</field>
+          </register>
+        </registers>
+      </ddrc>
+    </mss_ddr>
+    <mss_clocks>
+      <clocks>
+        <registers>
+          <register address="0" description="Ref Clock rate in MHz" name="MSS_EXT_SGMII_REF_CLK">
+            <field Type="RW" name="MSS_EXT_SGMII_REF_CLK" offset="0" width="32">125000000</field>
+          </register>
+          <register address="0" description="CPU Clock rate in MHz" name="MSS_COREPLEX_CPU_CLK">
+            <field Type="RW" name="MSS_COREPLEX_CPU_CLK" offset="0" width="32">600000000</field>
+          </register>
+          <register address="0" description="System Clock rate in MHz static power." name="MSS_SYSTEM_CLK">
+            <field Type="RW" name="MSS_SYSTEM_CLK" offset="0" width="32">600000000</field>
+          </register>
+          <register address="0" description="RTC toggle Clock rate in MHz static power." name="MSS_RTC_TOGGLE_CLK">
+            <field Type="RW" name="MSS_RTC_TOGGLE_CLK" offset="0" width="32">1000000</field>
+          </register>
+          <register address="0" description="AXI Clock rate in MHz static power." name="MSS_AXI_CLK">
+            <field Type="RW" name="MSS_AXI_CLK" offset="0" width="32">300000000</field>
+          </register>
+          <register address="0" description="AXI Clock rate in MHz static power." name="MSS_APB_AHB_CLK">
+            <field Type="RW" name="MSS_APB_AHB_CLK" offset="0" width="32">150000000</field>
+          </register>
+        </registers>
+      </clocks>
+      <mss_sys>
+        <registers>
+          <register address="0x00000008" description="Master clock config  (00=/1 01=/2 10=/4 11=/8 )" name="CLOCK_CONFIG_CR">
+            <field Type="RW" name="DIVIDER_CPU" offset="0" width="2">0x0</field>
+            <field Type="RW" name="DIVIDER_AXI" offset="2" width="2">0x1</field>
+            <field Type="RW" name="DIVIDER_APB_AHB" offset="4" width="2">0x2</field>
+          </register>
+          <register address="0x0000000C" description="RTC clock divider" name="RTC_CLOCK_CR">
+            <field Type="RW" name="PERIOD" offset="0" width="12">0x7D</field>
+          </register>
+          <register address="0x000000B8" description="ENVM AHB Controller setup - - Clock period = (Value+1) * (1000/AHBFREQMHZ) e.g. 7 will generate a 40ns period 25MHz clock if the AHB clock is 200MHz" name="ENVM_CR">
+            <field Type="RW" name="CLOCK_PERIOD" offset="0" width="6">0x6</field>
+            <field Type="RW" name="CLOCK_CONTINUOUS" offset="8" width="1">0x0</field>
+            <field Type="RW" name="CLOCK_SUPPRESS" offset="9" width="1">0x0</field>
+            <field Type="RW" name="READAHEAD" offset="16" width="1">0x1</field>
+            <field Type="RW" name="SLOWREAD" offset="17" width="1">0x0</field>
+            <field Type="RW" name="INTERRUPT_ENABLE" offset="18" width="1">0x1</field>
+            <field Type="RW" name="TIMER" offset="24" width="8">0x40</field>
+          </register>
+        </registers>
+      </mss_sys>
+      <mss_pll>
+        <registers>
+          <register address="0x00000004" description="PLL control register" name="PLL_CTRL">
+            <field Type="RW" name="REG_POWERDOWN_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="REG_RFDIV_EN" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ0_EN" offset="2" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ1_EN" offset="3" width="1">0x0</field>
+            <field Type="RW" name="REG_DIVQ2_EN" offset="4" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ3_EN" offset="5" width="1">0x1</field>
+            <field Type="RW" name="REG_RFCLK_SEL" offset="6" width="1">0x0</field>
+            <field Type="RW" name="RESETONLOCK" offset="7" width="1">0x0</field>
+            <field Type="RW" name="BYPCK_SEL" offset="8" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASS_GO_B" offset="12" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE10" offset="13" width="3">0x0</field>
+            <field Type="RW" name="REG_BYPASSPRE" offset="16" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASSPOST" offset="20" width="4">0x0</field>
+            <field Type="RW" name="LP_REQUIRES_LOCK" offset="24" width="1">0x1</field>
+            <field Type="RO" name="LOCK" offset="25" width="1">0x0</field>
+            <field Type="RW" name="LOCK_INT_EN" offset="26" width="1">0x0</field>
+            <field Type="RW" name="UNLOCK_INT_EN" offset="27" width="1">0x0</field>
+            <field Type="SW1C" name="LOCK_INT" offset="28" width="1">0x0</field>
+            <field Type="SW1C" name="UNLOCK_INT" offset="29" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE11" offset="30" width="1">0x0</field>
+            <field Type="RO" name="LOCK_B" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000008" description="PLL reference and feedback registers" name="PLL_REF_FB">
+            <field Type="RW" name="FSE_B" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FBCK_SEL" offset="1" width="2">0x0</field>
+            <field Type="RW" name="FOUTFB_SELMUX_EN" offset="3" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE12" offset="4" width="4">0x0</field>
+            <field Type="RW" name="RFDIV" offset="8" width="6">0x5</field>
+            <field Type="RSVD" name="RESERVE13" offset="14" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE14" offset="16" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE15" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x0000000C" description="PLL fractional register" name="PLL_FRACN">
+            <field Type="RW" name="FRACN_EN" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FRACN_DAC_EN" offset="1" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE16" offset="2" width="6">0x0</field>
+            <field Type="RSVD" name="RESERVE17" offset="8" width="24">0x0</field>
+          </register>
+          <register address="0x00000010" description="PLL 0/1 division registers" name="PLL_DIV_0_1">
+            <field Type="RO" name="VCO0PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV0_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE18" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST0DIV" offset="8" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE19" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO1PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV1_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE20" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST1DIV" offset="24" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE21" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000014" description="PLL 2/3 division registers" name="PLL_DIV_2_3">
+            <field Type="RO" name="VCO2PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV2_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE22" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST2DIV" offset="8" width="7">0x3</field>
+            <field Type="RSVD" name="RESERVE23" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO3PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV3_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE24" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST3DIV" offset="24" width="7">0x4B</field>
+            <field Type="RW" name="CKPOST3_SEL" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000018" description="PLL control register" name="PLL_CTRL2">
+            <field Type="RW" name="BWI" offset="0" width="2">0x0</field>
+            <field Type="RW" name="BWP" offset="2" width="2">0x0</field>
+            <field Type="RW" name="IREF_EN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="IREF_TOGGLE" offset="5" width="1">0x1</field>
+            <field Type="RSVD" name="RESERVE25" offset="6" width="3">0x0</field>
+            <field Type="RW" name="LOCKCNT" offset="9" width="4">0x8</field>
+            <field Type="RSVD" name="RESERVE26" offset="13" width="4">0x0</field>
+            <field Type="RW" name="ATEST_EN" offset="17" width="1">0x0</field>
+            <field Type="RW" name="ATEST_SEL" offset="18" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE27" offset="21" width="11">0x0</field>
+          </register>
+          <register address="0x0000001C" description="PLL calibration register" name="PLL_CAL">
+            <field Type="RW" name="DSKEWCALCNT" offset="0" width="3">0x6</field>
+            <field Type="RW" name="DSKEWCAL_EN" offset="3" width="1">0x0</field>
+            <field Type="RW" name="DSKEWCALBYP" offset="4" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE28" offset="5" width="3">0x0</field>
+            <field Type="RW" name="DSKEWCALIN" offset="8" width="7">0xd</field>
+            <field Type="RSVD" name="RESERVE29" offset="15" width="1">0x0</field>
+            <field Type="RO" name="DSKEWCALOUT" offset="16" width="7">0x0</field>
+            <field Type="RSVD" name="RESERVE30" offset="23" width="9">0x0</field>
+          </register>
+          <register address="0x00000020" description="PLL phase registers" name="PLL_PHADJ">
+            <field Type="RW" name="PLL_REG_SYNCREFDIV_EN" offset="0" width="1">0x1</field>
+            <field Type="RW" name="PLL_REG_ENABLE_SYNCREFDIV" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_OUT0_PHSINIT" offset="2" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT1_PHSINIT" offset="5" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT2_PHSINIT" offset="8" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT3_PHSINIT" offset="11" width="3">0x8</field>
+            <field Type="RW" name="REG_LOADPHS_B" offset="14" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE31" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x00000024" description="SSCG registers 0" name="SSCG_REG_0">
+            <field Type="RW" name="DIVVAL" offset="0" width="6">0x0</field>
+            <field Type="RW" name="FRACIN" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE00" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x00000028" description="SSCG registers 1" name="SSCG_REG_1">
+            <field Type="RW" name="DOWNSPREAD" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SSMD" offset="1" width="5">0x0</field>
+            <field Type="RO" name="FRACMOD" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE01" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x0000002C" description="SSCG registers 2" name="SSCG_REG_2">
+            <field Type="RW" name="INTIN" offset="0" width="12">0x60</field>
+            <field Type="RO" name="INTMOD" offset="12" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE02" offset="24" width="8">0x0</field>
+          </register>
+          <register address="0x00000030" description="SSCG registers 3" name="SSCG_REG_3">
+            <field Type="RW" name="SSE_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="SEL_EXTWAVE" offset="1" width="2">0x0</field>
+            <field Type="RW" name="EXT_MAXADDR" offset="3" width="8">0x0</field>
+            <field Type="RO" name="TBLADDR" offset="11" width="8">0x0</field>
+            <field Type="RW" name="RANDOM_FILTER" offset="19" width="1">0x0</field>
+            <field Type="RW" name="RANDOM_SEL" offset="20" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE03" offset="22" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE04" offset="23" width="9">0x0</field>
+          </register>
+        </registers>
+      </mss_pll>
+      <sgmii_pll>
+        <registers>
+          <register address="0x00000000" description="This is a compulsory register for all SCB slaves and must be at the same offset in all slaves to facilitate global soft reset of all SCB registers with a single broadcast write from the SCB master." name="SOFT_RESET">
+            <field Type="RST" name="NV_MAP" offset="0" width="1">0x0</field>
+            <field Type="RST" name="V_MAP" offset="1" width="1">0x0</field>
+            <field Type="RST" name="PERIPH" offset="8" width="1">0x0</field>
+            <field Type="ID" name="BLOCKID" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000004" description="PLL control register" name="PLL_CTRL">
+            <field Type="RW" name="REG_POWERDOWN_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="REG_RFDIV_EN" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ0_EN" offset="2" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ1_EN" offset="3" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ2_EN" offset="4" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ3_EN" offset="5" width="1">0x1</field>
+            <field Type="RW" name="REG_RFCLK_SEL" offset="6" width="1">0x0</field>
+            <field Type="RW" name="RESETONLOCK" offset="7" width="1">0x0</field>
+            <field Type="RW" name="BYPCK_SEL" offset="8" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASS_GO_B" offset="12" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE10" offset="13" width="3">0x0</field>
+            <field Type="RW" name="REG_BYPASSPRE" offset="16" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASSPOST" offset="20" width="4">0x0</field>
+            <field Type="RW" name="LP_REQUIRES_LOCK" offset="24" width="1">0x1</field>
+            <field Type="RO" name="LOCK" offset="25" width="1">0x0</field>
+            <field Type="RW" name="LOCK_INT_EN" offset="26" width="1">0x0</field>
+            <field Type="RW" name="UNLOCK_INT_EN" offset="27" width="1">0x0</field>
+            <field Type="SW1C" name="LOCK_INT" offset="28" width="1">0x0</field>
+            <field Type="SW1C" name="UNLOCK_INT" offset="29" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE11" offset="30" width="1">0x0</field>
+            <field Type="RO" name="LOCK_B" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000008" description="PLL reference and feedback registers" name="PLL_REF_FB">
+            <field Type="RW" name="FSE_B" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FBCK_SEL" offset="1" width="2">0x0</field>
+            <field Type="RW" name="FOUTFB_SELMUX_EN" offset="3" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE12" offset="4" width="4">0x0</field>
+            <field Type="RW" name="RFDIV" offset="8" width="6">0x1</field>
+            <field Type="RSVD" name="RESERVE13" offset="14" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE14" offset="16" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE15" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x0000000C" description="PLL fractional register" name="PLL_FRACN">
+            <field Type="RW" name="FRACN_EN" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FRACN_DAC_EN" offset="1" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE16" offset="2" width="6">0x0</field>
+            <field Type="RSVD" name="RESERVE17" offset="8" width="24">0x0</field>
+          </register>
+          <register address="0x00000010" description="PLL 0/1 division registers" name="PLL_DIV_0_1">
+            <field Type="RO" name="VCO0PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV0_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE18" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST0DIV" offset="8" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE19" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO1PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV1_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE20" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST1DIV" offset="24" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE21" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000014" description="PLL 2/3 division registers" name="PLL_DIV_2_3">
+            <field Type="RO" name="VCO2PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV2_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE22" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST2DIV" offset="8" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE23" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO3PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV3_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE24" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST3DIV" offset="24" width="7">0x1</field>
+            <field Type="RW" name="CKPOST3_SEL" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000018" description="PLL control register" name="PLL_CTRL2">
+            <field Type="RW" name="BWI" offset="0" width="2">0x0</field>
+            <field Type="RW" name="BWP" offset="2" width="2">0x0</field>
+            <field Type="RW" name="IREF_EN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="IREF_TOGGLE" offset="5" width="1">0x1</field>
+            <field Type="RSVD" name="RESERVE25" offset="6" width="3">0x0</field>
+            <field Type="RW" name="LOCKCNT" offset="9" width="4">0x8</field>
+            <field Type="RSVD" name="RESERVE26" offset="13" width="4">0x0</field>
+            <field Type="RW" name="ATEST_EN" offset="17" width="1">0x0</field>
+            <field Type="RW" name="ATEST_SEL" offset="18" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE27" offset="21" width="11">0x0</field>
+          </register>
+          <register address="0x0000001C" description="PLL calibration register" name="PLL_CAL">
+            <field Type="RW" name="DSKEWCALCNT" offset="0" width="3">0x6</field>
+            <field Type="RW" name="DSKEWCAL_EN" offset="3" width="1">0x0</field>
+            <field Type="RW" name="DSKEWCALBYP" offset="4" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE28" offset="5" width="3">0x0</field>
+            <field Type="RW" name="DSKEWCALIN" offset="8" width="7">0xd</field>
+            <field Type="RSVD" name="RESERVE29" offset="15" width="1">0x0</field>
+            <field Type="RO" name="DSKEWCALOUT" offset="16" width="7">0x0</field>
+            <field Type="RSVD" name="RESERVE30" offset="23" width="9">0x0</field>
+          </register>
+          <register address="0x00000020" description="PLL phase registers" name="PLL_PHADJ">
+            <field Type="RW" name="PLL_REG_SYNCREFDIV_EN" offset="0" width="1">0x1</field>
+            <field Type="RW" name="PLL_REG_ENABLE_SYNCREFDIV" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_OUT0_PHSINIT" offset="2" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT1_PHSINIT" offset="5" width="3">0x2</field>
+            <field Type="RW" name="REG_OUT2_PHSINIT" offset="8" width="3">0x4</field>
+            <field Type="RW" name="REG_OUT3_PHSINIT" offset="11" width="3">0x6</field>
+            <field Type="RW" name="REG_LOADPHS_B" offset="14" width="1">0x1</field>
+            <field Type="RSVD" name="RESERVE31" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x00000024" description="SSCG registers 0" name="SSCG_REG_0">
+            <field Type="RW" name="DIVVAL" offset="0" width="6">0x0</field>
+            <field Type="RW" name="FRACIN" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE00" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x00000028" description="SSCG registers 1" name="SSCG_REG_1">
+            <field Type="RW" name="DOWNSPREAD" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SSMD" offset="1" width="5">0x0</field>
+            <field Type="RO" name="FRACMOD" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE01" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x0000002C" description="SSCG registers 2" name="SSCG_REG_2">
+            <field Type="RW" name="INTIN" offset="0" width="12">0x14</field>
+            <field Type="RO" name="INTMOD" offset="12" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE02" offset="24" width="8">0x0</field>
+          </register>
+          <register address="0x00000030" description="SSCG registers 3" name="SSCG_REG_3">
+            <field Type="RW" name="SSE_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="SEL_EXTWAVE" offset="1" width="2">0x0</field>
+            <field Type="RW" name="EXT_MAXADDR" offset="3" width="8">0x0</field>
+            <field Type="RO" name="TBLADDR" offset="11" width="8">0x0</field>
+            <field Type="RW" name="RANDOM_FILTER" offset="19" width="1">0x0</field>
+            <field Type="RW" name="RANDOM_SEL" offset="20" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE03" offset="22" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE04" offset="23" width="9">0x0</field>
+          </register>
+        </registers>
+      </sgmii_pll>
+      <ddr_pll>
+        <registers>
+          <register address="0x00000000" description="This is a compulsory register for all SCB slaves and must be at the same offset in all slaves to facilitate global soft reset of all SCB registers with a single broadcast write from the SCB master." name="SOFT_RESET">
+            <field Type="RST" name="NV_MAP" offset="0" width="1">DDR3</field>
+            <field Type="RST" name="V_MAP" offset="1" width="1">0x0</field>
+            <field Type="RST" name="PERIPH" offset="8" width="1">0x0</field>
+            <field Type="ID" name="BLOCKID" offset="16" width="16">0x0</field>
+          </register>
+          <register address="0x00000004" description="PLL control register" name="PLL_CTRL">
+            <field Type="RW" name="REG_POWERDOWN_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="REG_RFDIV_EN" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ0_EN" offset="2" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ1_EN" offset="3" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ2_EN" offset="4" width="1">0x1</field>
+            <field Type="RW" name="REG_DIVQ3_EN" offset="5" width="1">0x1</field>
+            <field Type="RW" name="REG_RFCLK_SEL" offset="6" width="1">0x0</field>
+            <field Type="RW" name="RESETONLOCK" offset="7" width="1">0x0</field>
+            <field Type="RW" name="BYPCK_SEL" offset="8" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASS_GO_B" offset="12" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE10" offset="13" width="3">0x0</field>
+            <field Type="RW" name="REG_BYPASSPRE" offset="16" width="4">0x0</field>
+            <field Type="RW" name="REG_BYPASSPOST" offset="20" width="4">0x0</field>
+            <field Type="RW" name="LP_REQUIRES_LOCK" offset="24" width="1">0x1</field>
+            <field Type="RO" name="LOCK" offset="25" width="1">0x0</field>
+            <field Type="RW" name="LOCK_INT_EN" offset="26" width="1">0x0</field>
+            <field Type="RW" name="UNLOCK_INT_EN" offset="27" width="1">0x0</field>
+            <field Type="SW1C" name="LOCK_INT" offset="28" width="1">0x0</field>
+            <field Type="SW1C" name="UNLOCK_INT" offset="29" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE11" offset="30" width="1">0x0</field>
+            <field Type="RO" name="LOCK_B" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000008" description="PLL reference and feedback registers" name="PLL_REF_FB">
+            <field Type="RW" name="FSE_B" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FBCK_SEL" offset="1" width="2">0x0</field>
+            <field Type="RW" name="FOUTFB_SELMUX_EN" offset="3" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE12" offset="4" width="4">0x0</field>
+            <field Type="RW" name="RFDIV" offset="8" width="6">0x5</field>
+            <field Type="RSVD" name="RESERVE13" offset="14" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE14" offset="16" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE15" offset="28" width="4">0x0</field>
+          </register>
+          <register address="0x0000000C" description="PLL fractional register" name="PLL_FRACN">
+            <field Type="RW" name="FRACN_EN" offset="0" width="1">0x0</field>
+            <field Type="RW" name="FRACN_DAC_EN" offset="1" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE16" offset="2" width="6">0x0</field>
+            <field Type="RSVD" name="RESERVE17" offset="8" width="24">0x0</field>
+          </register>
+          <register address="0x00000010" description="PLL 0/1 division registers" name="PLL_DIV_0_1">
+            <field Type="RO" name="VCO0PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV0_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE18" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST0DIV" offset="8" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE19" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO1PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV1_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE20" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST1DIV" offset="24" width="7">0x2</field>
+            <field Type="RSVD" name="RESERVE21" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000014" description="PLL 2/3 division registers" name="PLL_DIV_2_3">
+            <field Type="RO" name="VCO2PH_SEL" offset="0" width="3">0x0</field>
+            <field Type="RW" name="DIV2_START" offset="3" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE22" offset="6" width="2">0x0</field>
+            <field Type="RW" name="POST2DIV" offset="8" width="7">0x1</field>
+            <field Type="RSVD" name="RESERVE23" offset="15" width="1">0x0</field>
+            <field Type="RO" name="VCO3PH_SEL" offset="16" width="3">0x0</field>
+            <field Type="RW" name="DIV3_START" offset="19" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE24" offset="22" width="2">0x0</field>
+            <field Type="RW" name="POST3DIV" offset="24" width="7">0x1</field>
+            <field Type="RW" name="CKPOST3_SEL" offset="31" width="1">0x0</field>
+          </register>
+          <register address="0x00000018" description="PLL control register" name="PLL_CTRL2">
+            <field Type="RW" name="BWI" offset="0" width="2">0x0</field>
+            <field Type="RW" name="BWP" offset="2" width="2">0x0</field>
+            <field Type="RW" name="IREF_EN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="IREF_TOGGLE" offset="5" width="1">0x1</field>
+            <field Type="RSVD" name="RESERVE25" offset="6" width="3">0x0</field>
+            <field Type="RW" name="LOCKCNT" offset="9" width="4">0x8</field>
+            <field Type="RSVD" name="RESERVE26" offset="13" width="4">0x0</field>
+            <field Type="RW" name="ATEST_EN" offset="17" width="1">0x0</field>
+            <field Type="RW" name="ATEST_SEL" offset="18" width="3">0x0</field>
+            <field Type="RSVD" name="RESERVE27" offset="21" width="11">0x0</field>
+          </register>
+          <register address="0x0000001C" description="PLL calibration register" name="PLL_CAL">
+            <field Type="RW" name="DSKEWCALCNT" offset="0" width="3">0x6</field>
+            <field Type="RW" name="DSKEWCAL_EN" offset="3" width="1">0x0</field>
+            <field Type="RW" name="DSKEWCALBYP" offset="4" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE28" offset="5" width="3">0x0</field>
+            <field Type="RW" name="DSKEWCALIN" offset="8" width="7">0xd</field>
+            <field Type="RSVD" name="RESERVE29" offset="15" width="1">0x0</field>
+            <field Type="RO" name="DSKEWCALOUT" offset="16" width="7">0x0</field>
+            <field Type="RSVD" name="RESERVE30" offset="23" width="9">0x0</field>
+          </register>
+          <register address="0x00000020" description="PLL phase registers" name="PLL_PHADJ">
+            <field Type="RW" name="PLL_REG_SYNCREFDIV_EN" offset="0" width="1">0x1</field>
+            <field Type="RW" name="PLL_REG_ENABLE_SYNCREFDIV" offset="1" width="1">0x1</field>
+            <field Type="RW" name="REG_OUT0_PHSINIT" offset="2" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT1_PHSINIT" offset="5" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT2_PHSINIT" offset="8" width="3">0x0</field>
+            <field Type="RW" name="REG_OUT3_PHSINIT" offset="11" width="3">0x2</field>
+            <field Type="RW" name="REG_LOADPHS_B" offset="14" width="1">0x1</field>
+            <field Type="RSVD" name="RESERVE31" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x00000024" description="SSCG registers 0" name="SSCG_REG_0">
+            <field Type="RW" name="DIVVAL" offset="0" width="6">0x0</field>
+            <field Type="RW" name="FRACIN" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE00" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x00000028" description="SSCG registers 1" name="SSCG_REG_1">
+            <field Type="RW" name="DOWNSPREAD" offset="0" width="1">0x0</field>
+            <field Type="RW" name="SSMD" offset="1" width="5">0x0</field>
+            <field Type="RO" name="FRACMOD" offset="6" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE01" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x0000002C" description="SSCG registers 2" name="SSCG_REG_2">
+            <field Type="RW" name="INTIN" offset="0" width="12">0x80</field>
+            <field Type="RO" name="INTMOD" offset="12" width="12">0x0</field>
+            <field Type="RSVD" name="RESERVE02" offset="24" width="8">0x0</field>
+          </register>
+          <register address="0x00000030" description="SSCG registers 3" name="SSCG_REG_3">
+            <field Type="RW" name="SSE_B" offset="0" width="1">0x1</field>
+            <field Type="RW" name="SEL_EXTWAVE" offset="1" width="2">0x0</field>
+            <field Type="RW" name="EXT_MAXADDR" offset="3" width="8">0x0</field>
+            <field Type="RO" name="TBLADDR" offset="11" width="8">0x0</field>
+            <field Type="RW" name="RANDOM_FILTER" offset="19" width="1">0x0</field>
+            <field Type="RW" name="RANDOM_SEL" offset="20" width="2">0x0</field>
+            <field Type="RSVD" name="RESERVE03" offset="22" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE04" offset="23" width="9">0x0</field>
+          </register>
+        </registers>
+      </ddr_pll>
+      <mss_cfm>
+        <registers>
+          <register address="0x00000004" description="Input mux  selections" name="BCLKMUX">
+            <field Type="RW" name="BCLK0_SEL" offset="0" width="5">0x8</field>
+            <field Type="RW" name="BCLK1_SEL" offset="5" width="5">0x10</field>
+            <field Type="RW" name="BCLK2_SEL" offset="10" width="5">0x0</field>
+            <field Type="RW" name="BCLK3_SEL" offset="15" width="5">0x0</field>
+            <field Type="RW" name="BCLK4_SEL" offset="20" width="5">0x0</field>
+            <field Type="RW" name="BCLK5_SEL" offset="25" width="5">0x0</field>
+            <field Type="RW" name="RESERVED" offset="30" width="2">0x0</field>
+          </register>
+          <register address="0x00000008" description="Input mux  selections" name="PLL_CKMUX">
+            <field Type="RW" name="CLK_IN_MAC_TSU_SEL" offset="0" width="2">0x1</field>
+            <field Type="RW" name="PLL0_RFCLK0_SEL" offset="2" width="2">0x1</field>
+            <field Type="RW" name="PLL0_RFCLK1_SEL" offset="4" width="2">0x1</field>
+            <field Type="RW" name="PLL1_RFCLK0_SEL" offset="6" width="2">0x1</field>
+            <field Type="RW" name="PLL1_RFCLK1_SEL" offset="8" width="2">0x1</field>
+            <field Type="RW" name="PLL1_FDR_SEL" offset="10" width="5">0x0</field>
+            <field Type="RW" name="RESERVED" offset="15" width="17">0x0</field>
+          </register>
+          <register address="0x0000000C" description="MSS Clock mux selections" name="MSSCLKMUX">
+            <field Type="RW" name="MSSCLK_MUX_SEL" offset="0" width="2">0x3</field>
+            <field Type="RW" name="MSSCLK_MUX_MD" offset="2" width="2">0x0</field>
+            <field Type="RW" name="CLK_STANDBY_SEL" offset="4" width="1">0x0</field>
+            <field Type="RW" name="RESERVED" offset="5" width="27">0x0</field>
+          </register>
+          <register address="0x00000010" description="spare logic " name="SPARE0">
+            <field Type="RW" name="SPARE0" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00000014" description="Frequency_meter_address_selections" name="FMETER_ADDR">
+            <field Type="RSVD" name="ADDR10" offset="0" width="2">0x0</field>
+            <field Type="RW" name="ADDR" offset="2" width="4">0x0</field>
+            <field Type="RSVD" name="RESERVE18" offset="6" width="26">0x0</field>
+          </register>
+          <register address="0x00000018" description="Frequency_meter_data_write" name="FMETER_DATAW">
+            <field Type="RW" name="DATA" offset="0" width="24">0x0</field>
+            <field Type="W1P" name="STROBE" offset="24" width="1">0x0</field>
+            <field Type="RSVD" name="RESERVE19" offset="25" width="7">0x0</field>
+          </register>
+          <register address="0x0000001C" description="Frequency_meter_data_read" name="FMETER_DATAR">
+            <field Type="RO" name="DATA" offset="0" width="24">0x0</field>
+            <field Type="RSVD" name="RESERVE20" offset="24" width="8">0x0</field>
+          </register>
+          <register address="0x0000001E" description="Imirror TRIM Bits" name="IMIRROR_TRIM">
+            <field Type="RW" name="BG_CODE" offset="0" width="3">0x0</field>
+            <field Type="RW" name="CC_CODE" offset="3" width="8">0x0</field>
+            <field Type="RSVD" name="RESERVE21" offset="11" width="21">0x0</field>
+          </register>
+          <register address="0x00000020" description="Test MUX Controls" name="TEST_CTRL">
+            <field Type="RW" name="OSC_ENABLE" offset="0" width="4">0x0</field>
+            <field Type="RW" name="ATEST_EN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="ATEST_SEL" offset="5" width="5">0x0</field>
+            <field Type="RW" name="DTEST_EN" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DTEST_SEL" offset="11" width="5">0x0</field>
+            <field Type="RSVD" name="RESERVE22" offset="16" width="16">0x0</field>
+          </register>
+        </registers>
+      </mss_cfm>
+      <sgmii_cfm>
+        <registers>
+          <register address="0x00000004" description="Input mux  selections" name="REFCLKMUX">
+            <field Type="RW" name="PLL0_RFCLK0_SEL" offset="0" width="2">0x1</field>
+            <field Type="RW" name="PLL0_RFCLK1_SEL" offset="2" width="2">0x1</field>
+            <field Type="RW" name="RESERVED" offset="4" width="28">0x0</field>
+          </register>
+          <register address="0x00000008" description="sgmii clk mux" name="SGMII_CLKMUX">
+            <field Type="RW" name="SGMII_CLKMUX" offset="0" width="32">0x5</field>
+          </register>
+          <register address="0x0000000C" description="spare logic" name="SPARE0">
+            <field Type="RW" name="RESERVED" offset="0" width="32">0x0</field>
+          </register>
+          <register address="0x00000010" description="Clock_Receiver " name="CLK_XCVR">
+            <field Type="RW" name="EN_UDRIVE_P" offset="0" width="1">0x0</field>
+            <field Type="RW" name="EN_INS_HYST_P" offset="1" width="1">0x0</field>
+            <field Type="RW" name="EN_TERM_P" offset="2" width="2">0x0</field>
+            <field Type="RW" name="EN_RXMODE_P" offset="4" width="2">0x3</field>
+            <field Type="RW" name="EN_UDRIVE_N" offset="6" width="1">0x0</field>
+            <field Type="RW" name="EN_INS_HYST_N" offset="7" width="1">0x0</field>
+            <field Type="RW" name="EN_TERM_N" offset="8" width="2">0x0</field>
+            <field Type="RW" name="EN_RXMODE_N" offset="10" width="2">0x3</field>
+            <field Type="RW" name="CLKBUF_EN_PULLUP" offset="12" width="1">0x0</field>
+            <field Type="RW" name="EN_RDIFF" offset="13" width="1">0x1</field>
+            <field Type="RW" name="RESERVED" offset="14" width="18">0x0</field>
+          </register>
+          <register address="0x00000014" description="Test MUX Controls" name="TEST_CTRL">
+            <field Type="RW" name="OSC_ENABLE" offset="0" width="4">0x0</field>
+            <field Type="RW" name="ATEST_EN" offset="4" width="1">0x0</field>
+            <field Type="RW" name="ATEST_SEL" offset="5" width="5">0x0</field>
+            <field Type="RW" name="DTEST_EN" offset="10" width="1">0x0</field>
+            <field Type="RW" name="DTEST_SEL" offset="11" width="5">0x0</field>
+            <field Type="RSVD" name="RESERVE22" offset="16" width="16">0x0</field>
+          </register>
+        </registers>
+      </sgmii_cfm>
+    </mss_clocks>
+    <mss_general>
+      <mss_peripherals>
+        <registers>
+          <register address="0x0000009C" description="GPIO Blocks reset control- (soft_reset options  chossen in Libero confgurator)" name="GPIO_CR">
+            <field Type="RW" name="GPIO0_SOFT_RESET_SELECT" offset="0" width="2">0x3</field>
+            <field Type="RW" name="GPIO0_DEFAULT" offset="4" width="2">0x0</field>
+            <field Type="RW" name="GPIO1_SOFT_RESET_SELECT" offset="8" width="3">0x7</field>
+            <field Type="RW" name="GPIO1_DEFAULT" offset="12" width="3">0x0</field>
+            <field Type="RW" name="GPIO2_SOFT_RESET_SELECT" offset="16" width="4">0xF</field>
+            <field Type="RW" name="GPIO2_DEFAULT" offset="20" width="4">0x0</field>
+          </register>
+          <register address="0x00000000" description="Information on how Crypto setup on this MPFS " name="CRYPTO_CR_INFO">
+            <field Type="RO" name="MSS_MODE" offset="0" width="2">0x0</field>
+            <field Type="RO" name="RESERVED" offset="2" width="1">0x0</field>
+            <field Type="RO" name="STREAM_ENABLE" offset="3" width="1">0x0</field>
+            <field Type="RO" name="RESERVED1" offset="4" width="28">0x0</field>
+          </register>
+        </registers>
+      </mss_peripherals>
+    </mss_general>
+  </mss>
diff --git a/boards/tysom-m-mpfs250t/uart_helper.c b/boards/tysom-m-mpfs250t/uart_helper.c
new file mode 100644
index 0000000..8f88896
--- /dev/null
+++ b/boards/tysom-m-mpfs250t/uart_helper.c
@@ -0,0 +1,203 @@
+/*******************************************************************************
+ * Copyright 2019 Microchip Corporation.
+ *
+ * SPDX-License-Identifier: MIT
+ *
+ * Implementation of uart_putstring/g().
+ * This is function is intended to be used from ee_printf().
+ */
+
+#include "config.h"
+#include "hss_types.h"
+
+#include <assert.h>
+
+#include "hss_debug.h"
+
+#include "drivers/mss_uart/mss_uart.h"
+#include <string.h>
+#include <stdint.h>
+
+#include "uart_helper.h"
+
+static inline mss_uart_instance_t *get_uart_instance(int hartid)
+{
+    mss_uart_instance_t *pUart;
+
+    switch (hartid) {
+    default:
+        pUart = &g_mss_uart0_lo;
+        break;
+    case HSS_HART_E51:
+        pUart = &g_mss_uart0_lo;
+        break;
+    case HSS_HART_U54_1:
+        pUart = &g_mss_uart1_lo;
+        break;
+    case HSS_HART_U54_2:
+        pUart = &g_mss_uart2_lo;
+        break;
+    case HSS_HART_U54_3:
+        pUart = &g_mss_uart3_lo;
+        break;
+    case HSS_HART_U54_4:
+        pUart = &g_mss_uart4_lo;
+        break;
+    }
+
+    return pUart;
+}
+
+int uart_putstring(int hartid, char *p)
+{
+    const uint32_t len = (uint32_t)strlen(p);
+
+    mss_uart_instance_t *pUart = get_uart_instance(hartid);
+    MSS_UART_polled_tx_string(pUart, (const uint8_t *)p);
+    // TODO: if hartId is zero (i.e., E51), replace this with non-blocking
+    // queue implementation, with HSS_UART state machine consuming from queues...
+    return len;
+}
+
+void uart_putc(int hartid, const char ch)
+{
+    uint8_t string[2];
+    string[0] = (uint8_t)ch;
+    string[1] = 0u;
+
+    mss_uart_instance_t *pUart = get_uart_instance(hartid);
+    MSS_UART_polled_tx_string(pUart, (const uint8_t *)string);
+}
+
+#define HSS_UART_HELPER_MAX_GETLINE 80
+ssize_t uart_getline(char **pBuffer, size_t *pBufLen)
+{
+    ssize_t result = 0;
+    bool finished = false;
+    static char myBuffer[HSS_UART_HELPER_MAX_GETLINE]; // static to be stack friendly
+    const size_t bufferLen = ARRAY_SIZE(myBuffer);
+
+    memset(myBuffer, 0, bufferLen);
+
+    uint8_t cBuf[1];
+    while (!finished) {
+        while (0 == MSS_UART_get_rx(&g_mss_uart0_lo, cBuf, 1));
+
+        switch (cBuf[0]) {
+        case '\r':
+            MSS_UART_polled_tx(&g_mss_uart0_lo, cBuf, 1u);
+            finished = true;
+            break;
+
+        case '\n':
+            MSS_UART_polled_tx(&g_mss_uart0_lo, cBuf, 1u);
+            finished = true;
+            break;
+
+        case 0x7Fu: // delete
+            if (result) {
+                result--;
+                MSS_UART_polled_tx(&g_mss_uart0_lo, (uint8_t const *)"\033[D \033[D", 7u);
+                myBuffer[result] = 0;
+            }
+            break;
+
+        case 0x08u: // backspace - ^H
+            if (result) {
+                result--;
+                MSS_UART_polled_tx(&g_mss_uart0_lo, (uint8_t const *)" \033[D", 4u);
+                myBuffer[result] = 0;
+            }
+            break;
+
+        case 0x03u: // intr - ^C
+            result = -1;
+            myBuffer[0] = 0;
+            finished = true;
+            break;
+
+        case 0x1Bu: // ESC
+            result = -1;
+            myBuffer[0] = 0;
+            finished = true;
+            break;
+
+        case 0x04u: // ^D
+            if (result == 0) {
+                result = -1;
+                myBuffer[0] = 0;
+                finished = true;
+            }
+            break;
+
+        default:
+            if (result < bufferLen) {
+                MSS_UART_polled_tx(&g_mss_uart0_lo, cBuf, 1u);
+                myBuffer[result] = cBuf[0];
+                result++;
+            }
+            break;
+        }
+    }
+
+    const char crlf[] = CRLF;
+    MSS_UART_polled_tx_string(&g_mss_uart0_lo, (const uint8_t *)crlf);
+
+    if (result > 0) {
+        *pBuffer = myBuffer;
+        *pBufLen = (size_t)result;
+    } else {
+        *pBuffer = NULL;
+        *pBufLen = 0u;
+    }
+
+    return result;
+}
+
+bool uart_getchar(uint8_t *pbuf, int32_t timeout_sec, bool do_sec_tick)
+{
+    bool result = false;
+    bool done = false;
+    uint8_t rx_buff[1];
+    HSSTicks_t start_time = 0u;
+    HSSTicks_t last_sec_time = 0u;
+
+    //if (timeout_sec > 0) {
+        start_time = last_sec_time = HSS_GetTime();
+    //}
+
+    const HSSTicks_t timeout_ticks = timeout_sec * TICKS_PER_SEC;
+    //(void)MSS_UART_get_rx_status(&g_mss_uart0_lo); // clear sticky status
+
+    while (!done) {
+        size_t received = MSS_UART_get_rx(&g_mss_uart0_lo, rx_buff, 1u);
+        if (0u != received) {
+            done = true;
+            if (MSS_UART_NO_ERROR == MSS_UART_get_rx_status(&g_mss_uart0_lo)) {
+                *pbuf = rx_buff[0];
+                result = true;
+                break;
+            } else {
+                mHSS_DEBUG_PRINTF(LOG_ERROR, "UART error" CRLF);
+            }
+        }
+
+        if (do_sec_tick && HSS_Timer_IsElapsed(last_sec_time, TICKS_PER_SEC)) {
+            const uint8_t dot='.';
+            MSS_UART_polled_tx(&g_mss_uart0_lo, &dot, 1);
+            last_sec_time = HSS_GetTime();
+        }
+
+        if (timeout_sec < 0) {
+            ; // blocking until UART data received, so nothing extra to do here...
+        } else if (timeout_sec > 0) {
+            // time limited
+            done = HSS_Timer_IsElapsed(start_time, timeout_ticks);
+        } else /* timeout == 0 */ {
+            // one-shot
+            break;
+        }
+    }
+
+    return result;
+}
diff --git a/init/hss_sys_setup.c b/init/hss_sys_setup.c
index 9b67593..359b727 100644
--- a/init/hss_sys_setup.c
+++ b/init/hss_sys_setup.c
@@ -256,6 +256,7 @@ bool HSS_Setup_L2Cache(void)
  *
  * Setup clock enables and soft resets
  *
+           SOFT_RESET_CR_I2C0_MASK |
  */
 bool HSS_Setup_Clocks(void)
 {
@@ -273,11 +274,16 @@ bool HSS_Setup_Clocks(void)
            SOFT_RESET_CR_MMUART3_MASK |
            SOFT_RESET_CR_MMUART4_MASK |
            SOFT_RESET_CR_RTC_MASK |
+           SOFT_RESET_CR_CAN0_MASK |
+           SOFT_RESET_CR_CAN1_MASK |
+           SOFT_RESET_CR_SPI1_MASK |
+           SOFT_RESET_CR_I2C1_MASK |
            SOFT_RESET_CR_QSPI_MASK |
-           SOFT_RESET_CR_GPIO2_MASK |
+           SOFT_RESET_CR_GPIO1_MASK |
            SOFT_RESET_CR_DDRC_MASK |
            SOFT_RESET_CR_ATHENA_MASK |
            SOFT_RESET_CR_SGMII_MASK |
+           SOFT_RESET_CR_USB_MASK |
 	   SOFT_RESET_CR_FIC0_MASK |
 	   SOFT_RESET_CR_FIC1_MASK |
 	   SOFT_RESET_CR_FIC3_MASK |
@@ -287,6 +293,7 @@ bool HSS_Setup_Clocks(void)
     SYSREG->SOFT_RESET_CR = hss_soft_reset_Config;
     SYSREG->SUBBLK_CLOCK_CR = hss_subblk_clock_Config;
 	SYSREG->FABRIC_RESET_CR = FABRIC_RESET_CR_ENABLE_MASK;
+    SYSREG->GPIO_INTERRUPT_FAB_CR = 0x00000000UL;
 #endif
 
     return true;
